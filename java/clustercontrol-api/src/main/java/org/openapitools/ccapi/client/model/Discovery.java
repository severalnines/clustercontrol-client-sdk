/*
 * Severalnines ClusterControl
 * This is a ...
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: sales@severalnines.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.ccapi.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.ccapi.client.model.DiscoveryJob;
import org.openapitools.ccapi.client.model.DiscoveryNodesInner;
import org.openapitools.ccapi.client.model.DiscoverySshCredentials;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import org.openapitools.ccapi.client.JSON;

/**
 * Discovery
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-08-17T17:47:57.934643-04:00[America/New_York]")
public class Discovery {
  /**
   * Gets or Sets operation
   */
  @JsonAdapter(OperationEnum.Adapter.class)
  public enum OperationEnum {
    CHECKCLUSTERNAME("checkClusterName"),
    
    GETSUPPORTEDCLUSTERTYPES("getSupportedClusterTypes"),
    
    CHECKHOSTS("checkHosts");

    private String value;

    OperationEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static OperationEnum fromValue(String value) {
      for (OperationEnum b : OperationEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<OperationEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final OperationEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public OperationEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return OperationEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_OPERATION = "operation";
  @SerializedName(SERIALIZED_NAME_OPERATION)
  private OperationEnum operation;

  public static final String SERIALIZED_NAME_NEW_CLUSTER_NAME = "new_cluster_name";
  @SerializedName(SERIALIZED_NAME_NEW_CLUSTER_NAME)
  private String newClusterName;

  public static final String SERIALIZED_NAME_CHECK_IF_ALREADY_REGISTERED = "check_if_already_registered";
  @SerializedName(SERIALIZED_NAME_CHECK_IF_ALREADY_REGISTERED)
  private Boolean checkIfAlreadyRegistered;

  public static final String SERIALIZED_NAME_CHECK_JOB = "check_job";
  @SerializedName(SERIALIZED_NAME_CHECK_JOB)
  private Boolean checkJob;

  public static final String SERIALIZED_NAME_CHECK_SSH_SUDO = "check_ssh_sudo";
  @SerializedName(SERIALIZED_NAME_CHECK_SSH_SUDO)
  private Boolean checkSshSudo;

  public static final String SERIALIZED_NAME_NODES = "nodes";
  @SerializedName(SERIALIZED_NAME_NODES)
  private List<DiscoveryNodesInner> nodes = null;

  public static final String SERIALIZED_NAME_JOB = "job";
  @SerializedName(SERIALIZED_NAME_JOB)
  private DiscoveryJob job;

  public static final String SERIALIZED_NAME_SSH_CREDENTIALS = "ssh_credentials";
  @SerializedName(SERIALIZED_NAME_SSH_CREDENTIALS)
  private DiscoverySshCredentials sshCredentials;

  public Discovery() { 
  }

  public Discovery operation(OperationEnum operation) {
    
    this.operation = operation;
    return this;
  }

   /**
   * Get operation
   * @return operation
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public OperationEnum getOperation() {
    return operation;
  }


  public void setOperation(OperationEnum operation) {
    this.operation = operation;
  }


  public Discovery newClusterName(String newClusterName) {
    
    this.newClusterName = newClusterName;
    return this;
  }

   /**
   * Get newClusterName
   * @return newClusterName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getNewClusterName() {
    return newClusterName;
  }


  public void setNewClusterName(String newClusterName) {
    this.newClusterName = newClusterName;
  }


  public Discovery checkIfAlreadyRegistered(Boolean checkIfAlreadyRegistered) {
    
    this.checkIfAlreadyRegistered = checkIfAlreadyRegistered;
    return this;
  }

   /**
   * Get checkIfAlreadyRegistered
   * @return checkIfAlreadyRegistered
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getCheckIfAlreadyRegistered() {
    return checkIfAlreadyRegistered;
  }


  public void setCheckIfAlreadyRegistered(Boolean checkIfAlreadyRegistered) {
    this.checkIfAlreadyRegistered = checkIfAlreadyRegistered;
  }


  public Discovery checkJob(Boolean checkJob) {
    
    this.checkJob = checkJob;
    return this;
  }

   /**
   * Get checkJob
   * @return checkJob
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getCheckJob() {
    return checkJob;
  }


  public void setCheckJob(Boolean checkJob) {
    this.checkJob = checkJob;
  }


  public Discovery checkSshSudo(Boolean checkSshSudo) {
    
    this.checkSshSudo = checkSshSudo;
    return this;
  }

   /**
   * Get checkSshSudo
   * @return checkSshSudo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getCheckSshSudo() {
    return checkSshSudo;
  }


  public void setCheckSshSudo(Boolean checkSshSudo) {
    this.checkSshSudo = checkSshSudo;
  }


  public Discovery nodes(List<DiscoveryNodesInner> nodes) {
    
    this.nodes = nodes;
    return this;
  }

  public Discovery addNodesItem(DiscoveryNodesInner nodesItem) {
    if (this.nodes == null) {
      this.nodes = new ArrayList<>();
    }
    this.nodes.add(nodesItem);
    return this;
  }

   /**
   * Get nodes
   * @return nodes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<DiscoveryNodesInner> getNodes() {
    return nodes;
  }


  public void setNodes(List<DiscoveryNodesInner> nodes) {
    this.nodes = nodes;
  }


  public Discovery job(DiscoveryJob job) {
    
    this.job = job;
    return this;
  }

   /**
   * Get job
   * @return job
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public DiscoveryJob getJob() {
    return job;
  }


  public void setJob(DiscoveryJob job) {
    this.job = job;
  }


  public Discovery sshCredentials(DiscoverySshCredentials sshCredentials) {
    
    this.sshCredentials = sshCredentials;
    return this;
  }

   /**
   * Get sshCredentials
   * @return sshCredentials
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public DiscoverySshCredentials getSshCredentials() {
    return sshCredentials;
  }


  public void setSshCredentials(DiscoverySshCredentials sshCredentials) {
    this.sshCredentials = sshCredentials;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Discovery discovery = (Discovery) o;
    return Objects.equals(this.operation, discovery.operation) &&
        Objects.equals(this.newClusterName, discovery.newClusterName) &&
        Objects.equals(this.checkIfAlreadyRegistered, discovery.checkIfAlreadyRegistered) &&
        Objects.equals(this.checkJob, discovery.checkJob) &&
        Objects.equals(this.checkSshSudo, discovery.checkSshSudo) &&
        Objects.equals(this.nodes, discovery.nodes) &&
        Objects.equals(this.job, discovery.job) &&
        Objects.equals(this.sshCredentials, discovery.sshCredentials);
  }

  @Override
  public int hashCode() {
    return Objects.hash(operation, newClusterName, checkIfAlreadyRegistered, checkJob, checkSshSudo, nodes, job, sshCredentials);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Discovery {\n");
    sb.append("    operation: ").append(toIndentedString(operation)).append("\n");
    sb.append("    newClusterName: ").append(toIndentedString(newClusterName)).append("\n");
    sb.append("    checkIfAlreadyRegistered: ").append(toIndentedString(checkIfAlreadyRegistered)).append("\n");
    sb.append("    checkJob: ").append(toIndentedString(checkJob)).append("\n");
    sb.append("    checkSshSudo: ").append(toIndentedString(checkSshSudo)).append("\n");
    sb.append("    nodes: ").append(toIndentedString(nodes)).append("\n");
    sb.append("    job: ").append(toIndentedString(job)).append("\n");
    sb.append("    sshCredentials: ").append(toIndentedString(sshCredentials)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("operation");
    openapiFields.add("new_cluster_name");
    openapiFields.add("check_if_already_registered");
    openapiFields.add("check_job");
    openapiFields.add("check_ssh_sudo");
    openapiFields.add("nodes");
    openapiFields.add("job");
    openapiFields.add("ssh_credentials");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("operation");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to Discovery
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (Discovery.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in Discovery is not found in the empty JSON string", Discovery.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!Discovery.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `Discovery` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : Discovery.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      if (jsonObj.get("operation") != null && !jsonObj.get("operation").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `operation` to be a primitive type in the JSON string but got `%s`", jsonObj.get("operation").toString()));
      }
      if (jsonObj.get("new_cluster_name") != null && !jsonObj.get("new_cluster_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `new_cluster_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("new_cluster_name").toString()));
      }
      JsonArray jsonArraynodes = jsonObj.getAsJsonArray("nodes");
      if (jsonArraynodes != null) {
        // ensure the json data is an array
        if (!jsonObj.get("nodes").isJsonArray()) {
          throw new IllegalArgumentException(String.format("Expected the field `nodes` to be an array in the JSON string but got `%s`", jsonObj.get("nodes").toString()));
        }

        // validate the optional field `nodes` (array)
        for (int i = 0; i < jsonArraynodes.size(); i++) {
          DiscoveryNodesInner.validateJsonObject(jsonArraynodes.get(i).getAsJsonObject());
        };
      }
      // validate the optional field `job`
      if (jsonObj.getAsJsonObject("job") != null) {
        DiscoveryJob.validateJsonObject(jsonObj.getAsJsonObject("job"));
      }
      // validate the optional field `ssh_credentials`
      if (jsonObj.getAsJsonObject("ssh_credentials") != null) {
        DiscoverySshCredentials.validateJsonObject(jsonObj.getAsJsonObject("ssh_credentials"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!Discovery.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'Discovery' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<Discovery> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(Discovery.class));

       return (TypeAdapter<T>) new TypeAdapter<Discovery>() {
           @Override
           public void write(JsonWriter out, Discovery value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public Discovery read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of Discovery given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of Discovery
  * @throws IOException if the JSON string is invalid with respect to Discovery
  */
  public static Discovery fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, Discovery.class);
  }

 /**
  * Convert an instance of Discovery to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

