/*
 * Severalnines ClusterControl
 *
 * This is a ...
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: sales@severalnines.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct JobsJobJobSpecJobDataNode {
    #[serde(rename = "backend_name_ro", skip_serializing_if = "Option::is_none")]
    pub backend_name_ro: Option<String>,
    #[serde(rename = "backend_name_rw", skip_serializing_if = "Option::is_none")]
    pub backend_name_rw: Option<String>,
    #[serde(rename = "data_retention", skip_serializing_if = "Option::is_none")]
    pub data_retention: Option<String>,
    #[serde(rename = "data_retention_size", skip_serializing_if = "Option::is_none")]
    pub data_retention_size: Option<i32>,
    #[serde(rename = "hostname", skip_serializing_if = "Option::is_none")]
    pub hostname: Option<String>,
    #[serde(rename = "lb_admin", skip_serializing_if = "Option::is_none")]
    pub lb_admin: Option<String>,
    #[serde(rename = "lb_password", skip_serializing_if = "Option::is_none")]
    pub lb_password: Option<String>,
    #[serde(rename = "lb_policy", skip_serializing_if = "Option::is_none")]
    pub lb_policy: Option<String>,
    #[serde(rename = "max_connection_be", skip_serializing_if = "Option::is_none")]
    pub max_connection_be: Option<i32>,
    #[serde(rename = "max_connection_fe", skip_serializing_if = "Option::is_none")]
    pub max_connection_fe: Option<i32>,
    #[serde(rename = "port", skip_serializing_if = "Option::is_none")]
    pub port: Option<i32>,
    #[serde(rename = "ro_port", skip_serializing_if = "Option::is_none")]
    pub ro_port: Option<i32>,
    #[serde(rename = "rw_port", skip_serializing_if = "Option::is_none")]
    pub rw_port: Option<i32>,
    #[serde(rename = "rw_splitting", skip_serializing_if = "Option::is_none")]
    pub rw_splitting: Option<bool>,
    #[serde(rename = "stats_socket", skip_serializing_if = "Option::is_none")]
    pub stats_socket: Option<String>,
    #[serde(rename = "timeout_client", skip_serializing_if = "Option::is_none")]
    pub timeout_client: Option<i32>,
    #[serde(rename = "timeout_server", skip_serializing_if = "Option::is_none")]
    pub timeout_server: Option<i32>,
    #[serde(rename = "xinetd_allow_from", skip_serializing_if = "Option::is_none")]
    pub xinetd_allow_from: Option<String>,
    #[serde(rename = "scrape_interval", skip_serializing_if = "Option::is_none")]
    pub scrape_interval: Option<String>,
    #[serde(rename = "configuration", skip_serializing_if = "Option::is_none")]
    pub configuration: Option<Vec<crate::models::JobsJobJobSpecJobDataNodeConfiguration>>,
}

impl JobsJobJobSpecJobDataNode {
    pub fn new() -> JobsJobJobSpecJobDataNode {
        JobsJobJobSpecJobDataNode {
            backend_name_ro: None,
            backend_name_rw: None,
            data_retention: None,
            data_retention_size: None,
            hostname: None,
            lb_admin: None,
            lb_password: None,
            lb_policy: None,
            max_connection_be: None,
            max_connection_fe: None,
            port: None,
            ro_port: None,
            rw_port: None,
            rw_splitting: None,
            stats_socket: None,
            timeout_client: None,
            timeout_server: None,
            xinetd_allow_from: None,
            scrape_interval: None,
            configuration: None,
        }
    }
}


