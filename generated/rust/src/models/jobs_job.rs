/*
 * Severalnines ClusterControl
 *
 * This is a ...
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: sales@severalnines.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct JobsJob {
    #[serde(rename = "class_name", skip_serializing_if = "Option::is_none")]
    pub class_name: Option<String>,
    #[serde(rename = "job_spec", skip_serializing_if = "Option::is_none")]
    pub job_spec: Option<Box<crate::models::JobsJobJobSpec>>,
    /// e.g. \"2 * * * *\"
    #[serde(rename = "recurrence", skip_serializing_if = "Option::is_none")]
    pub recurrence: Option<String>,
    #[serde(rename = "tags", skip_serializing_if = "Option::is_none")]
    pub tags: Option<Vec<String>>,
    #[serde(rename = "title", skip_serializing_if = "Option::is_none")]
    pub title: Option<Title>,
    #[serde(rename = "status", skip_serializing_if = "Option::is_none")]
    pub status: Option<Status>,
}

impl JobsJob {
    pub fn new() -> JobsJob {
        JobsJob {
            class_name: None,
            job_spec: None,
            recurrence: None,
            tags: None,
            title: None,
            status: None,
        }
    }
}

/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Title {
    #[serde(rename = "Rolling Restart")]
    RollingRestart,
    #[serde(rename = "Simulated Success")]
    SimulatedSuccess,
}

impl Default for Title {
    fn default() -> Title {
        Self::RollingRestart
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Status {
    #[serde(rename = "PAUSED")]
    PAUSED,
    #[serde(rename = "SCHEDULED")]
    SCHEDULED,
}

impl Default for Status {
    fn default() -> Status {
        Self::PAUSED
    }
}

