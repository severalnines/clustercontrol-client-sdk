/*
 * Severalnines ClusterControl
 *
 * This is a ...
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: sales@severalnines.com
 * Generated by: https://openapi-generator.tech
 */

/// Jobs : Creating and manipulating jobs, reading information about jobs



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct Jobs {
    #[serde(rename = "operation")]
    pub operation: Operation,
    #[serde(rename = "cluster_id", skip_serializing_if = "Option::is_none")]
    pub cluster_id: Option<i32>,
    #[serde(rename = "job_id", skip_serializing_if = "Option::is_none")]
    pub job_id: Option<i32>,
    #[serde(rename = "signal", skip_serializing_if = "Option::is_none")]
    pub signal: Option<i32>,
    #[serde(rename = "ascending", skip_serializing_if = "Option::is_none")]
    pub ascending: Option<bool>,
    #[serde(rename = "limit", skip_serializing_if = "Option::is_none")]
    pub limit: Option<i32>,
    #[serde(rename = "offset", skip_serializing_if = "Option::is_none")]
    pub offset: Option<i32>,
    #[serde(rename = "log_level", skip_serializing_if = "Option::is_none")]
    pub log_level: Option<String>,
    #[serde(rename = "job", skip_serializing_if = "Option::is_none")]
    pub job: Option<Box<crate::models::JobsJob>>,
}

impl Jobs {
    /// Creating and manipulating jobs, reading information about jobs
    pub fn new(operation: Operation) -> Jobs {
        Jobs {
            operation,
            cluster_id: None,
            job_id: None,
            signal: None,
            ascending: None,
            limit: None,
            offset: None,
            log_level: None,
            job: None,
        }
    }
}

/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Operation {
    #[serde(rename = "createJobInstance")]
    CreateJobInstance,
    #[serde(rename = "updateJobInstance")]
    UpdateJobInstance,
    #[serde(rename = "deleteJobInstance")]
    DeleteJobInstance,
    #[serde(rename = "killJobInstance")]
    KillJobInstance,
    #[serde(rename = "cloneJobInstance")]
    CloneJobInstance,
    #[serde(rename = "getJobInstance")]
    GetJobInstance,
    #[serde(rename = "getJobInstances")]
    GetJobInstances,
    #[serde(rename = "getJobLog")]
    GetJobLog,
}

impl Default for Operation {
    fn default() -> Operation {
        Self::CreateJobInstance
    }
}

