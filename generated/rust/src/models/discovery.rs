/*
 * Severalnines ClusterControl
 *
 * This is a ...
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: sales@severalnines.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct Discovery {
    #[serde(rename = "operation")]
    pub operation: Operation,
    #[serde(rename = "new_cluster_name", skip_serializing_if = "Option::is_none")]
    pub new_cluster_name: Option<String>,
    #[serde(rename = "check_if_already_registered", skip_serializing_if = "Option::is_none")]
    pub check_if_already_registered: Option<bool>,
    #[serde(rename = "check_job", skip_serializing_if = "Option::is_none")]
    pub check_job: Option<bool>,
    #[serde(rename = "check_ssh_sudo", skip_serializing_if = "Option::is_none")]
    pub check_ssh_sudo: Option<bool>,
    #[serde(rename = "nodes", skip_serializing_if = "Option::is_none")]
    pub nodes: Option<Vec<crate::models::DiscoveryNodes>>,
    #[serde(rename = "job", skip_serializing_if = "Option::is_none")]
    pub job: Option<Box<crate::models::DiscoveryJob>>,
    #[serde(rename = "ssh_credentials", skip_serializing_if = "Option::is_none")]
    pub ssh_credentials: Option<Box<crate::models::DiscoverySshCredentials>>,
}

impl Discovery {
    pub fn new(operation: Operation) -> Discovery {
        Discovery {
            operation,
            new_cluster_name: None,
            check_if_already_registered: None,
            check_job: None,
            check_ssh_sudo: None,
            nodes: None,
            job: None,
            ssh_credentials: None,
        }
    }
}

/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Operation {
    #[serde(rename = "checkClusterName")]
    CheckClusterName,
    #[serde(rename = "getSupportedClusterTypes")]
    GetSupportedClusterTypes,
    #[serde(rename = "checkHosts")]
    CheckHosts,
}

impl Default for Operation {
    fn default() -> Operation {
        Self::CheckClusterName
    }
}

