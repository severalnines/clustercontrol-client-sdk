/*
 * Severalnines ClusterControl
 *
 * This is a ...
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: sales@severalnines.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct Backup {
    #[serde(rename = "operation")]
    pub operation: Operation,
    #[serde(rename = "cluster_id", skip_serializing_if = "Option::is_none")]
    pub cluster_id: Option<i32>,
    #[serde(rename = "ascending", skip_serializing_if = "Option::is_none")]
    pub ascending: Option<bool>,
    #[serde(rename = "schedule", skip_serializing_if = "Option::is_none")]
    pub schedule: Option<Box<crate::models::BackupSchedule>>,
    #[serde(rename = "backup_record", skip_serializing_if = "Option::is_none")]
    pub backup_record: Option<Box<crate::models::BackupBackupRecord>>,
}

impl Backup {
    pub fn new(operation: Operation) -> Backup {
        Backup {
            operation,
            cluster_id: None,
            ascending: None,
            schedule: None,
            backup_record: None,
        }
    }
}

/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Operation {
    #[serde(rename = "getBackups")]
    GetBackups,
    #[serde(rename = "getBackupSchedules")]
    GetBackupSchedules,
    #[serde(rename = "scheduleBackup")]
    ScheduleBackup,
    #[serde(rename = "deleteBackupRecord")]
    DeleteBackupRecord,
}

impl Default for Operation {
    fn default() -> Operation {
        Self::GetBackups
    }
}

