/*
 * Severalnines ClusterControl
 *
 * This is a ...
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: sales@severalnines.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct ClustersAccount {
    #[serde(rename = "class_name", skip_serializing_if = "Option::is_none")]
    pub class_name: Option<ClassName>,
    /// e.g. \"john:ALL;pipas:INSERT\"
    #[serde(rename = "grants", skip_serializing_if = "Option::is_none")]
    pub grants: Option<String>,
    /// e.g. \"1.2.3.4\"
    #[serde(rename = "host_allow", skip_serializing_if = "Option::is_none")]
    pub host_allow: Option<String>,
    #[serde(rename = "own_database", skip_serializing_if = "Option::is_none")]
    pub own_database: Option<String>,
    /// e.g. \"testCreateDatabase.*:DELETE,TRUNCATE\"
    #[serde(rename = "privileges", skip_serializing_if = "Option::is_none")]
    pub privileges: Option<String>,
    /// e.g. \"pipas\"
    #[serde(rename = "user_name", skip_serializing_if = "Option::is_none")]
    pub user_name: Option<String>,
    #[serde(rename = "password", skip_serializing_if = "Option::is_none")]
    pub password: Option<String>,
}

impl ClustersAccount {
    pub fn new() -> ClustersAccount {
        ClustersAccount {
            class_name: None,
            grants: None,
            host_allow: None,
            own_database: None,
            privileges: None,
            user_name: None,
            password: None,
        }
    }
}

/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum ClassName {
    #[serde(rename = "CmonAccount")]
    CmonAccount,
}

impl Default for ClassName {
    fn default() -> ClassName {
        Self::CmonAccount
    }
}

