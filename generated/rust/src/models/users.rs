/*
 * Severalnines ClusterControl
 *
 * This is a ...
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: sales@severalnines.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct Users {
    #[serde(rename = "operation")]
    pub operation: Operation,
    #[serde(rename = "create_group", skip_serializing_if = "Option::is_none")]
    pub create_group: Option<bool>,
    #[serde(rename = "new_password", skip_serializing_if = "Option::is_none")]
    pub new_password: Option<String>,
    #[serde(rename = "group_name", skip_serializing_if = "Option::is_none")]
    pub group_name: Option<String>,
    #[serde(rename = "replace_primary_group", skip_serializing_if = "Option::is_none")]
    pub replace_primary_group: Option<bool>,
    #[serde(rename = "with_tags", skip_serializing_if = "Option::is_none")]
    pub with_tags: Option<Vec<String>>,
    #[serde(rename = "user", skip_serializing_if = "Option::is_none")]
    pub user: Option<Box<crate::models::UsersUser>>,
    #[serde(rename = "group", skip_serializing_if = "Option::is_none")]
    pub group: Option<Box<crate::models::UsersGroup>>,
}

impl Users {
    pub fn new(operation: Operation) -> Users {
        Users {
            operation,
            create_group: None,
            new_password: None,
            group_name: None,
            replace_primary_group: None,
            with_tags: None,
            user: None,
            group: None,
        }
    }
}

/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Operation {
    #[serde(rename = "createUser")]
    CreateUser,
    #[serde(rename = "getUsers")]
    GetUsers,
    #[serde(rename = "setUser")]
    SetUser,
    #[serde(rename = "disable")]
    Disable,
    #[serde(rename = "deleteUser")]
    DeleteUser,
    #[serde(rename = "enable")]
    Enable,
    #[serde(rename = "changePassword")]
    ChangePassword,
    #[serde(rename = "getKeys")]
    GetKeys,
    #[serde(rename = "addKey")]
    AddKey,
    #[serde(rename = "deleteKey")]
    DeleteKey,
    #[serde(rename = "createGroup")]
    CreateGroup,
    #[serde(rename = "deleteGroup")]
    DeleteGroup,
    #[serde(rename = "getGroups")]
    GetGroups,
    #[serde(rename = "addToGroup")]
    AddToGroup,
    #[serde(rename = "removeFromGroup")]
    RemoveFromGroup,
    #[serde(rename = "canCreateUser")]
    CanCreateUser,
    #[serde(rename = "canCreateGroup")]
    CanCreateGroup,
}

impl Default for Operation {
    fn default() -> Operation {
        Self::CreateUser
    }
}

