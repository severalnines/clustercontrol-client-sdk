/*
 * Severalnines ClusterControl
 *
 * This is a ...
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: sales@severalnines.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct ConfigLdapConfiguration {
    #[serde(rename = "enabled", skip_serializing_if = "Option::is_none")]
    pub enabled: Option<bool>,
    #[serde(rename = "ldapAdminPassword", skip_serializing_if = "Option::is_none")]
    pub ldap_admin_password: Option<String>,
    #[serde(rename = "ldapAdminUser", skip_serializing_if = "Option::is_none")]
    pub ldap_admin_user: Option<String>,
    #[serde(rename = "ldapGroupSearchRoot", skip_serializing_if = "Option::is_none")]
    pub ldap_group_search_root: Option<String>,
    #[serde(rename = "ldapServerUri", skip_serializing_if = "Option::is_none")]
    pub ldap_server_uri: Option<String>,
    #[serde(rename = "ldapUserSearchRoot", skip_serializing_if = "Option::is_none")]
    pub ldap_user_search_root: Option<String>,
    #[serde(rename = "groupMappings", skip_serializing_if = "Option::is_none")]
    pub group_mappings: Option<Vec<crate::models::ConfigLdapConfigurationGroupMappings>>,
    #[serde(rename = "ldapSettings", skip_serializing_if = "Option::is_none")]
    pub ldap_settings: Option<Box<crate::models::ConfigLdapConfigurationLdapSettings>>,
    #[serde(rename = "security", skip_serializing_if = "Option::is_none")]
    pub security: Option<Box<crate::models::ConfigLdapConfigurationSecurity>>,
}

impl ConfigLdapConfiguration {
    pub fn new() -> ConfigLdapConfiguration {
        ConfigLdapConfiguration {
            enabled: None,
            ldap_admin_password: None,
            ldap_admin_user: None,
            ldap_group_search_root: None,
            ldap_server_uri: None,
            ldap_user_search_root: None,
            group_mappings: None,
            ldap_settings: None,
            security: None,
        }
    }
}


