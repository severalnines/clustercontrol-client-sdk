/**
 * Severalnines ClusterControl
 * This is a ...
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: sales@severalnines.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import JobsJob from './JobsJob';

/**
 * The Jobs model module.
 * @module model/Jobs
 * @version 1.0.0
 */
class Jobs {
    /**
     * Constructs a new <code>Jobs</code>.
     * Creating and manipulating jobs, reading information about jobs
     * @alias module:model/Jobs
     * @param operation {module:model/Jobs.OperationEnum} 
     */
    constructor(operation) { 
        
        Jobs.initialize(this, operation);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, operation) { 
        obj['operation'] = operation;
    }

    /**
     * Constructs a <code>Jobs</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Jobs} obj Optional instance to populate.
     * @return {module:model/Jobs} The populated <code>Jobs</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Jobs();

            if (data.hasOwnProperty('operation')) {
                obj['operation'] = ApiClient.convertToType(data['operation'], 'String');
            }
            if (data.hasOwnProperty('cluster_id')) {
                obj['cluster_id'] = ApiClient.convertToType(data['cluster_id'], 'Number');
            }
            if (data.hasOwnProperty('job_id')) {
                obj['job_id'] = ApiClient.convertToType(data['job_id'], 'Number');
            }
            if (data.hasOwnProperty('signal')) {
                obj['signal'] = ApiClient.convertToType(data['signal'], 'Number');
            }
            if (data.hasOwnProperty('ascending')) {
                obj['ascending'] = ApiClient.convertToType(data['ascending'], 'Boolean');
            }
            if (data.hasOwnProperty('limit')) {
                obj['limit'] = ApiClient.convertToType(data['limit'], 'Number');
            }
            if (data.hasOwnProperty('offset')) {
                obj['offset'] = ApiClient.convertToType(data['offset'], 'Number');
            }
            if (data.hasOwnProperty('log_level')) {
                obj['log_level'] = ApiClient.convertToType(data['log_level'], 'String');
            }
            if (data.hasOwnProperty('job')) {
                obj['job'] = JobsJob.constructFromObject(data['job']);
            }
        }
        return obj;
    }


}

/**
 * @member {module:model/Jobs.OperationEnum} operation
 */
Jobs.prototype['operation'] = undefined;

/**
 * @member {Number} cluster_id
 */
Jobs.prototype['cluster_id'] = undefined;

/**
 * @member {Number} job_id
 */
Jobs.prototype['job_id'] = undefined;

/**
 * @member {Number} signal
 */
Jobs.prototype['signal'] = undefined;

/**
 * @member {Boolean} ascending
 */
Jobs.prototype['ascending'] = undefined;

/**
 * @member {Number} limit
 */
Jobs.prototype['limit'] = undefined;

/**
 * @member {Number} offset
 */
Jobs.prototype['offset'] = undefined;

/**
 * @member {String} log_level
 */
Jobs.prototype['log_level'] = undefined;

/**
 * @member {module:model/JobsJob} job
 */
Jobs.prototype['job'] = undefined;





/**
 * Allowed values for the <code>operation</code> property.
 * @enum {String}
 * @readonly
 */
Jobs['OperationEnum'] = {

    /**
     * value: "createJobInstance"
     * @const
     */
    "createJobInstance": "createJobInstance",

    /**
     * value: "updateJobInstance"
     * @const
     */
    "updateJobInstance": "updateJobInstance",

    /**
     * value: "deleteJobInstance"
     * @const
     */
    "deleteJobInstance": "deleteJobInstance",

    /**
     * value: "killJobInstance"
     * @const
     */
    "killJobInstance": "killJobInstance",

    /**
     * value: "cloneJobInstance"
     * @const
     */
    "cloneJobInstance": "cloneJobInstance",

    /**
     * value: "getJobInstance"
     * @const
     */
    "getJobInstance": "getJobInstance",

    /**
     * value: "getJobInstances"
     * @const
     */
    "getJobInstances": "getJobInstances",

    /**
     * value: "getJobLog"
     * @const
     */
    "getJobLog": "getJobLog"
};



export default Jobs;

