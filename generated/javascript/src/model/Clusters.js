/**
 * Severalnines ClusterControl
 * This is a ...
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: sales@severalnines.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ClustersAccount from './ClustersAccount';
import ClustersConfiguration from './ClustersConfiguration';
import ClustersDatabase from './ClustersDatabase';

/**
 * The Clusters model module.
 * @module model/Clusters
 * @version 1.0.0
 */
class Clusters {
    /**
     * Constructs a new <code>Clusters</code>.
     * @alias module:model/Clusters
     * @param operation {module:model/Clusters.OperationEnum} 
     */
    constructor(operation) { 
        
        Clusters.initialize(this, operation);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, operation) { 
        obj['operation'] = operation;
    }

    /**
     * Constructs a <code>Clusters</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Clusters} obj Optional instance to populate.
     * @return {module:model/Clusters} The populated <code>Clusters</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Clusters();

            if (data.hasOwnProperty('operation')) {
                obj['operation'] = ApiClient.convertToType(data['operation'], 'String');
            }
            if (data.hasOwnProperty('cluster_id')) {
                obj['cluster_id'] = ApiClient.convertToType(data['cluster_id'], 'Number');
            }
            if (data.hasOwnProperty('cluster_name')) {
                obj['cluster_name'] = ApiClient.convertToType(data['cluster_name'], 'String');
            }
            if (data.hasOwnProperty('with_hosts')) {
                obj['with_hosts'] = ApiClient.convertToType(data['with_hosts'], 'Boolean');
            }
            if (data.hasOwnProperty('with_sheet_info')) {
                obj['with_sheet_info'] = ApiClient.convertToType(data['with_sheet_info'], 'Boolean');
            }
            if (data.hasOwnProperty('configuration')) {
                obj['configuration'] = ApiClient.convertToType(data['configuration'], [ClustersConfiguration]);
            }
            if (data.hasOwnProperty('account')) {
                obj['account'] = ClustersAccount.constructFromObject(data['account']);
            }
            if (data.hasOwnProperty('filter_strings')) {
                obj['filter_strings'] = ApiClient.convertToType(data['filter_strings'], 'String');
            }
            if (data.hasOwnProperty('limit')) {
                obj['limit'] = ApiClient.convertToType(data['limit'], 'Number');
            }
            if (data.hasOwnProperty('offset')) {
                obj['offset'] = ApiClient.convertToType(data['offset'], 'Number');
            }
            if (data.hasOwnProperty('database')) {
                obj['database'] = ClustersDatabase.constructFromObject(data['database']);
            }
            if (data.hasOwnProperty('nodes')) {
                obj['nodes'] = ApiClient.convertToType(data['nodes'], ['String']);
            }
        }
        return obj;
    }


}

/**
 * @member {module:model/Clusters.OperationEnum} operation
 */
Clusters.prototype['operation'] = undefined;

/**
 * @member {Number} cluster_id
 */
Clusters.prototype['cluster_id'] = undefined;

/**
 * @member {String} cluster_name
 */
Clusters.prototype['cluster_name'] = undefined;

/**
 * @member {Boolean} with_hosts
 */
Clusters.prototype['with_hosts'] = undefined;

/**
 * @member {Boolean} with_sheet_info
 */
Clusters.prototype['with_sheet_info'] = undefined;

/**
 * @member {Array.<module:model/ClustersConfiguration>} configuration
 */
Clusters.prototype['configuration'] = undefined;

/**
 * @member {module:model/ClustersAccount} account
 */
Clusters.prototype['account'] = undefined;

/**
 * @member {String} filter_strings
 */
Clusters.prototype['filter_strings'] = undefined;

/**
 * @member {Number} limit
 */
Clusters.prototype['limit'] = undefined;

/**
 * @member {Number} offset
 */
Clusters.prototype['offset'] = undefined;

/**
 * @member {module:model/ClustersDatabase} database
 */
Clusters.prototype['database'] = undefined;

/**
 * @member {Array.<String>} nodes
 */
Clusters.prototype['nodes'] = undefined;





/**
 * Allowed values for the <code>operation</code> property.
 * @enum {String}
 * @readonly
 */
Clusters['OperationEnum'] = {

    /**
     * value: "getallclusterinfo"
     * @const
     */
    "getallclusterinfo": "getallclusterinfo",

    /**
     * value: "getclusterinfo"
     * @const
     */
    "getclusterinfo": "getclusterinfo",

    /**
     * value: "getConfig"
     * @const
     */
    "getConfig": "getConfig",

    /**
     * value: "setConfig"
     * @const
     */
    "setConfig": "setConfig",

    /**
     * value: "createAccount"
     * @const
     */
    "createAccount": "createAccount",

    /**
     * value: "getAccounts"
     * @const
     */
    "getAccounts": "getAccounts",

    /**
     * value: "deleteAccount"
     * @const
     */
    "deleteAccount": "deleteAccount",

    /**
     * value: "grantPrivileges"
     * @const
     */
    "grantPrivileges": "grantPrivileges",

    /**
     * value: "revokePrivileges"
     * @const
     */
    "revokePrivileges": "revokePrivileges",

    /**
     * value: "revokeAllPrivileges"
     * @const
     */
    "revokeAllPrivileges": "revokeAllPrivileges",

    /**
     * value: "getSqlProcesses"
     * @const
     */
    "getSqlProcesses": "getSqlProcesses",

    /**
     * value: "getTopQueries"
     * @const
     */
    "getTopQueries": "getTopQueries",

    /**
     * value: "createDatabase"
     * @const
     */
    "createDatabase": "createDatabase",

    /**
     * value: "ping"
     * @const
     */
    "ping": "ping",

    /**
     * value: "availableUpgrades"
     * @const
     */
    "availableUpgrades": "availableUpgrades"
};



export default Clusters;

