/**
 * Severalnines ClusterControl
 * This is a ...
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: sales@severalnines.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import BackupScheduleJobJobDataVerifyBackup from './BackupScheduleJobJobDataVerifyBackup';
import JobsJobJobSpecJobDataConfigServers from './JobsJobJobSpecJobDataConfigServers';
import JobsJobJobSpecJobDataConfigServersMembers from './JobsJobJobSpecJobDataConfigServersMembers';
import JobsJobJobSpecJobDataNode from './JobsJobJobSpecJobDataNode';
import JobsJobJobSpecJobDataNodeAdresses from './JobsJobJobSpecJobDataNodeAdresses';
import JobsJobJobSpecJobDataNodes from './JobsJobJobSpecJobDataNodes';
import JobsJobJobSpecJobDataReplicaSets from './JobsJobJobSpecJobDataReplicaSets';
import JobsJobJobSpecJobDataTopology from './JobsJobJobSpecJobDataTopology';

/**
 * The JobsJobJobSpecJobData model module.
 * @module model/JobsJobJobSpecJobData
 * @version 1.0.0
 */
class JobsJobJobSpecJobData {
    /**
     * Constructs a new <code>JobsJobJobSpecJobData</code>.
     * @alias module:model/JobsJobJobSpecJobData
     */
    constructor() { 
        
        JobsJobJobSpecJobData.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>JobsJobJobSpecJobData</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/JobsJobJobSpecJobData} obj Optional instance to populate.
     * @return {module:model/JobsJobJobSpecJobData} The populated <code>JobsJobJobSpecJobData</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new JobsJobJobSpecJobData();

            if (data.hasOwnProperty('action')) {
                obj['action'] = ApiClient.convertToType(data['action'], 'String');
            }
            if (data.hasOwnProperty('addnode')) {
                obj['addnode'] = ApiClient.convertToType(data['addnode'], 'Boolean');
            }
            if (data.hasOwnProperty('admin_username')) {
                obj['admin_username'] = ApiClient.convertToType(data['admin_username'], 'String');
            }
            if (data.hasOwnProperty('admin_user')) {
                obj['admin_user'] = ApiClient.convertToType(data['admin_user'], 'String');
            }
            if (data.hasOwnProperty('admin_password')) {
                obj['admin_password'] = ApiClient.convertToType(data['admin_password'], 'String');
            }
            if (data.hasOwnProperty('audit_events')) {
                obj['audit_events'] = ApiClient.convertToType(data['audit_events'], 'String');
            }
            if (data.hasOwnProperty('archive_mode')) {
                obj['archive_mode'] = ApiClient.convertToType(data['archive_mode'], 'String');
            }
            if (data.hasOwnProperty('backupid')) {
                obj['backupid'] = ApiClient.convertToType(data['backupid'], 'Number');
            }
            if (data.hasOwnProperty('backup_id')) {
                obj['backup_id'] = ApiClient.convertToType(data['backup_id'], 'Number');
            }
            if (data.hasOwnProperty('build_from_source')) {
                obj['build_from_source'] = ApiClient.convertToType(data['build_from_source'], 'Boolean');
            }
            if (data.hasOwnProperty('cluster_name')) {
                obj['cluster_name'] = ApiClient.convertToType(data['cluster_name'], 'String');
            }
            if (data.hasOwnProperty('clusterid')) {
                obj['clusterid'] = ApiClient.convertToType(data['clusterid'], 'Number');
            }
            if (data.hasOwnProperty('cluster_type')) {
                obj['cluster_type'] = ApiClient.convertToType(data['cluster_type'], 'String');
            }
            if (data.hasOwnProperty('company_id')) {
                obj['company_id'] = ApiClient.convertToType(data['company_id'], 'String');
            }
            if (data.hasOwnProperty('config_template')) {
                obj['config_template'] = ApiClient.convertToType(data['config_template'], 'String');
            }
            if (data.hasOwnProperty('backup_failover')) {
                obj['backup_failover'] = ApiClient.convertToType(data['backup_failover'], 'Boolean');
            }
            if (data.hasOwnProperty('backup_failover_host')) {
                obj['backup_failover_host'] = ApiClient.convertToType(data['backup_failover_host'], 'String');
            }
            if (data.hasOwnProperty('backup_method')) {
                obj['backup_method'] = ApiClient.convertToType(data['backup_method'], 'String');
            }
            if (data.hasOwnProperty('backup_mysqldump_type')) {
                obj['backup_mysqldump_type'] = ApiClient.convertToType(data['backup_mysqldump_type'], 'String');
            }
            if (data.hasOwnProperty('backup_individual_schemas')) {
                obj['backup_individual_schemas'] = ApiClient.convertToType(data['backup_individual_schemas'], 'Boolean');
            }
            if (data.hasOwnProperty('backup_retention')) {
                obj['backup_retention'] = ApiClient.convertToType(data['backup_retention'], 'Number');
            }
            if (data.hasOwnProperty('extended_insert')) {
                obj['extended_insert'] = ApiClient.convertToType(data['extended_insert'], 'Boolean');
            }
            if (data.hasOwnProperty('backup_dir')) {
                obj['backup_dir'] = ApiClient.convertToType(data['backup_dir'], 'String');
            }
            if (data.hasOwnProperty('backupsubdir')) {
                obj['backupsubdir'] = ApiClient.convertToType(data['backupsubdir'], 'String');
            }
            if (data.hasOwnProperty('cc_storage')) {
                obj['cc_storage'] = ApiClient.convertToType(data['cc_storage'], 'String');
            }
            if (data.hasOwnProperty('compression')) {
                obj['compression'] = ApiClient.convertToType(data['compression'], 'Boolean');
            }
            if (data.hasOwnProperty('compression_level')) {
                obj['compression_level'] = ApiClient.convertToType(data['compression_level'], 'Number');
            }
            if (data.hasOwnProperty('db_database')) {
                obj['db_database'] = ApiClient.convertToType(data['db_database'], 'String');
            }
            if (data.hasOwnProperty('db_password')) {
                obj['db_password'] = ApiClient.convertToType(data['db_password'], 'String');
            }
            if (data.hasOwnProperty('db_privs')) {
                obj['db_privs'] = ApiClient.convertToType(data['db_privs'], 'String');
            }
            if (data.hasOwnProperty('db_username')) {
                obj['db_username'] = ApiClient.convertToType(data['db_username'], 'String');
            }
            if (data.hasOwnProperty('data_center')) {
                obj['data_center'] = ApiClient.convertToType(data['data_center'], 'Number');
            }
            if (data.hasOwnProperty('exec_upgrade_script')) {
                obj['exec_upgrade_script'] = ApiClient.convertToType(data['exec_upgrade_script'], 'Boolean');
            }
            if (data.hasOwnProperty('extended')) {
                obj['extended'] = ApiClient.convertToType(data['extended'], 'Boolean');
            }
            if (data.hasOwnProperty('listening_port')) {
                obj['listening_port'] = ApiClient.convertToType(data['listening_port'], 'Number');
            }
            if (data.hasOwnProperty('mask_passwords')) {
                obj['mask_passwords'] = ApiClient.convertToType(data['mask_passwords'], 'Boolean');
            }
            if (data.hasOwnProperty('monitor_password')) {
                obj['monitor_password'] = ApiClient.convertToType(data['monitor_password'], 'String');
            }
            if (data.hasOwnProperty('monitor_user')) {
                obj['monitor_user'] = ApiClient.convertToType(data['monitor_user'], 'String');
            }
            if (data.hasOwnProperty('use_clustering')) {
                obj['use_clustering'] = ApiClient.convertToType(data['use_clustering'], 'Boolean');
            }
            if (data.hasOwnProperty('use_rw_split')) {
                obj['use_rw_split'] = ApiClient.convertToType(data['use_rw_split'], 'Boolean');
            }
            if (data.hasOwnProperty('hostname')) {
                obj['hostname'] = ApiClient.convertToType(data['hostname'], 'String');
            }
            if (data.hasOwnProperty('master_address')) {
                obj['master_address'] = ApiClient.convertToType(data['master_address'], 'String');
            }
            if (data.hasOwnProperty('include_databases')) {
                obj['include_databases'] = ApiClient.convertToType(data['include_databases'], 'String');
            }
            if (data.hasOwnProperty('install_timescaledb')) {
                obj['install_timescaledb'] = ApiClient.convertToType(data['install_timescaledb'], 'Boolean');
            }
            if (data.hasOwnProperty('update_lb')) {
                obj['update_lb'] = ApiClient.convertToType(data['update_lb'], 'Boolean');
            }
            if (data.hasOwnProperty('encrypt_backup')) {
                obj['encrypt_backup'] = ApiClient.convertToType(data['encrypt_backup'], 'Boolean');
            }
            if (data.hasOwnProperty('throttle_rate_netbw')) {
                obj['throttle_rate_netbw'] = ApiClient.convertToType(data['throttle_rate_netbw'], 'Number');
            }
            if (data.hasOwnProperty('use_pigz')) {
                obj['use_pigz'] = ApiClient.convertToType(data['use_pigz'], 'Boolean');
            }
            if (data.hasOwnProperty('use_qpress')) {
                obj['use_qpress'] = ApiClient.convertToType(data['use_qpress'], 'Boolean');
            }
            if (data.hasOwnProperty('wsrep_desync')) {
                obj['wsrep_desync'] = ApiClient.convertToType(data['wsrep_desync'], 'Boolean');
            }
            if (data.hasOwnProperty('xtrabackup_backup_locks')) {
                obj['xtrabackup_backup_locks'] = ApiClient.convertToType(data['xtrabackup_backup_locks'], 'Boolean');
            }
            if (data.hasOwnProperty('xtrabackup_lock_ddl_per_table')) {
                obj['xtrabackup_lock_ddl_per_table'] = ApiClient.convertToType(data['xtrabackup_lock_ddl_per_table'], 'Boolean');
            }
            if (data.hasOwnProperty('xtrabackup_parallellism')) {
                obj['xtrabackup_parallellism'] = ApiClient.convertToType(data['xtrabackup_parallellism'], 'Number');
            }
            if (data.hasOwnProperty('verify_backup_delay')) {
                obj['verify_backup_delay'] = ApiClient.convertToType(data['verify_backup_delay'], 'Number');
            }
            if (data.hasOwnProperty('data_dir')) {
                obj['data_dir'] = ApiClient.convertToType(data['data_dir'], 'String');
            }
            if (data.hasOwnProperty('db_user')) {
                obj['db_user'] = ApiClient.convertToType(data['db_user'], 'String');
            }
            if (data.hasOwnProperty('disable_firewall')) {
                obj['disable_firewall'] = ApiClient.convertToType(data['disable_firewall'], 'Boolean');
            }
            if (data.hasOwnProperty('disable_selinux')) {
                obj['disable_selinux'] = ApiClient.convertToType(data['disable_selinux'], 'Boolean');
            }
            if (data.hasOwnProperty('enabl_uninstall')) {
                obj['enabl_uninstall'] = ApiClient.convertToType(data['enabl_uninstall'], 'Boolean');
            }
            if (data.hasOwnProperty('generate_token')) {
                obj['generate_token'] = ApiClient.convertToType(data['generate_token'], 'Boolean');
            }
            if (data.hasOwnProperty('install_software')) {
                obj['install_software'] = ApiClient.convertToType(data['install_software'], 'Boolean');
            }
            if (data.hasOwnProperty('enable_mysql_uninstall')) {
                obj['enable_mysql_uninstall'] = ApiClient.convertToType(data['enable_mysql_uninstall'], 'Boolean');
            }
            if (data.hasOwnProperty('mysql_semi_sync')) {
                obj['mysql_semi_sync'] = ApiClient.convertToType(data['mysql_semi_sync'], 'Boolean');
            }
            if (data.hasOwnProperty('enable_ssl')) {
                obj['enable_ssl'] = ApiClient.convertToType(data['enable_ssl'], 'Boolean');
            }
            if (data.hasOwnProperty('mongos_conf_template')) {
                obj['mongos_conf_template'] = ApiClient.convertToType(data['mongos_conf_template'], 'String');
            }
            if (data.hasOwnProperty('mongodb_authdb')) {
                obj['mongodb_authdb'] = ApiClient.convertToType(data['mongodb_authdb'], 'String');
            }
            if (data.hasOwnProperty('node_type')) {
                obj['node_type'] = ApiClient.convertToType(data['node_type'], 'Number');
            }
            if (data.hasOwnProperty('overwrite_mysqlchk')) {
                obj['overwrite_mysqlchk'] = ApiClient.convertToType(data['overwrite_mysqlchk'], 'Boolean');
            }
            if (data.hasOwnProperty('port')) {
                obj['port'] = ApiClient.convertToType(data['port'], 'Number');
            }
            if (data.hasOwnProperty('ssh_keyfile')) {
                obj['ssh_keyfile'] = ApiClient.convertToType(data['ssh_keyfile'], 'String');
            }
            if (data.hasOwnProperty('ssh_port')) {
                obj['ssh_port'] = ApiClient.convertToType(data['ssh_port'], 'String');
            }
            if (data.hasOwnProperty('ssh_user')) {
                obj['ssh_user'] = ApiClient.convertToType(data['ssh_user'], 'String');
            }
            if (data.hasOwnProperty('sudo_password')) {
                obj['sudo_password'] = ApiClient.convertToType(data['sudo_password'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('user_id')) {
                obj['user_id'] = ApiClient.convertToType(data['user_id'], 'Number');
            }
            if (data.hasOwnProperty('vendor')) {
                obj['vendor'] = ApiClient.convertToType(data['vendor'], 'String');
            }
            if (data.hasOwnProperty('version')) {
                obj['version'] = ApiClient.convertToType(data['version'], 'String');
            }
            if (data.hasOwnProperty('software_package')) {
                obj['software_package'] = ApiClient.convertToType(data['software_package'], 'String');
            }
            if (data.hasOwnProperty('server_address')) {
                obj['server_address'] = ApiClient.convertToType(data['server_address'], 'String');
            }
            if (data.hasOwnProperty('terminate_db_server')) {
                obj['terminate_db_server'] = ApiClient.convertToType(data['terminate_db_server'], 'Boolean');
            }
            if (data.hasOwnProperty('xtrabackup_use_memory')) {
                obj['xtrabackup_use_memory'] = ApiClient.convertToType(data['xtrabackup_use_memory'], 'Number');
            }
            if (data.hasOwnProperty('initial')) {
                obj['initial'] = ApiClient.convertToType(data['initial'], 'Boolean');
            }
            if (data.hasOwnProperty('reboot')) {
                obj['reboot'] = ApiClient.convertToType(data['reboot'], 'Boolean');
            }
            if (data.hasOwnProperty('slave_address')) {
                obj['slave_address'] = ApiClient.convertToType(data['slave_address'], 'String');
            }
            if (data.hasOwnProperty('force')) {
                obj['force'] = ApiClient.convertToType(data['force'], 'Boolean');
            }
            if (data.hasOwnProperty('force_stop')) {
                obj['force_stop'] = ApiClient.convertToType(data['force_stop'], 'Boolean');
            }
            if (data.hasOwnProperty('stop_timeout')) {
                obj['stop_timeout'] = ApiClient.convertToType(data['stop_timeout'], 'Number');
            }
            if (data.hasOwnProperty('verify_backup')) {
                obj['verify_backup'] = BackupScheduleJobJobDataVerifyBackup.constructFromObject(data['verify_backup']);
            }
            if (data.hasOwnProperty('config_servers')) {
                obj['config_servers'] = JobsJobJobSpecJobDataConfigServers.constructFromObject(data['config_servers']);
            }
            if (data.hasOwnProperty('mongos_servers')) {
                obj['mongos_servers'] = ApiClient.convertToType(data['mongos_servers'], [JobsJobJobSpecJobDataConfigServersMembers]);
            }
            if (data.hasOwnProperty('node')) {
                obj['node'] = JobsJobJobSpecJobDataNode.constructFromObject(data['node']);
            }
            if (data.hasOwnProperty('nodes')) {
                obj['nodes'] = ApiClient.convertToType(data['nodes'], [JobsJobJobSpecJobDataNodes]);
            }
            if (data.hasOwnProperty('node_adresses')) {
                obj['node_adresses'] = ApiClient.convertToType(data['node_adresses'], [JobsJobJobSpecJobDataNodeAdresses]);
            }
            if (data.hasOwnProperty('topology')) {
                obj['topology'] = JobsJobJobSpecJobDataTopology.constructFromObject(data['topology']);
            }
            if (data.hasOwnProperty('replica_sets')) {
                obj['replica_sets'] = ApiClient.convertToType(data['replica_sets'], [JobsJobJobSpecJobDataReplicaSets]);
            }
            if (data.hasOwnProperty('with_tags')) {
                obj['with_tags'] = ApiClient.convertToType(data['with_tags'], ['String']);
            }
        }
        return obj;
    }


}

/**
 * @member {module:model/JobsJobJobSpecJobData.ActionEnum} action
 */
JobsJobJobSpecJobData.prototype['action'] = undefined;

/**
 * @member {Boolean} addnode
 */
JobsJobJobSpecJobData.prototype['addnode'] = undefined;

/**
 * @member {String} admin_username
 */
JobsJobJobSpecJobData.prototype['admin_username'] = undefined;

/**
 * @member {String} admin_user
 */
JobsJobJobSpecJobData.prototype['admin_user'] = undefined;

/**
 * @member {String} admin_password
 */
JobsJobJobSpecJobData.prototype['admin_password'] = undefined;

/**
 * @member {String} audit_events
 */
JobsJobJobSpecJobData.prototype['audit_events'] = undefined;

/**
 * @member {module:model/JobsJobJobSpecJobData.ArchiveModeEnum} archive_mode
 */
JobsJobJobSpecJobData.prototype['archive_mode'] = undefined;

/**
 * @member {Number} backupid
 */
JobsJobJobSpecJobData.prototype['backupid'] = undefined;

/**
 * @member {Number} backup_id
 */
JobsJobJobSpecJobData.prototype['backup_id'] = undefined;

/**
 * @member {Boolean} build_from_source
 */
JobsJobJobSpecJobData.prototype['build_from_source'] = undefined;

/**
 * @member {String} cluster_name
 */
JobsJobJobSpecJobData.prototype['cluster_name'] = undefined;

/**
 * @member {Number} clusterid
 */
JobsJobJobSpecJobData.prototype['clusterid'] = undefined;

/**
 * @member {module:model/JobsJobJobSpecJobData.ClusterTypeEnum} cluster_type
 */
JobsJobJobSpecJobData.prototype['cluster_type'] = undefined;

/**
 * @member {String} company_id
 */
JobsJobJobSpecJobData.prototype['company_id'] = undefined;

/**
 * @member {String} config_template
 */
JobsJobJobSpecJobData.prototype['config_template'] = undefined;

/**
 * @member {Boolean} backup_failover
 */
JobsJobJobSpecJobData.prototype['backup_failover'] = undefined;

/**
 * @member {module:model/JobsJobJobSpecJobData.BackupFailoverHostEnum} backup_failover_host
 */
JobsJobJobSpecJobData.prototype['backup_failover_host'] = undefined;

/**
 * @member {module:model/JobsJobJobSpecJobData.BackupMethodEnum} backup_method
 */
JobsJobJobSpecJobData.prototype['backup_method'] = undefined;

/**
 * @member {module:model/JobsJobJobSpecJobData.BackupMysqldumpTypeEnum} backup_mysqldump_type
 */
JobsJobJobSpecJobData.prototype['backup_mysqldump_type'] = undefined;

/**
 * @member {Boolean} backup_individual_schemas
 */
JobsJobJobSpecJobData.prototype['backup_individual_schemas'] = undefined;

/**
 * @member {Number} backup_retention
 */
JobsJobJobSpecJobData.prototype['backup_retention'] = undefined;

/**
 * @member {Boolean} extended_insert
 */
JobsJobJobSpecJobData.prototype['extended_insert'] = undefined;

/**
 * @member {String} backup_dir
 */
JobsJobJobSpecJobData.prototype['backup_dir'] = undefined;

/**
 * @member {String} backupsubdir
 */
JobsJobJobSpecJobData.prototype['backupsubdir'] = undefined;

/**
 * @member {String} cc_storage
 */
JobsJobJobSpecJobData.prototype['cc_storage'] = undefined;

/**
 * @member {Boolean} compression
 */
JobsJobJobSpecJobData.prototype['compression'] = undefined;

/**
 * @member {Number} compression_level
 */
JobsJobJobSpecJobData.prototype['compression_level'] = undefined;

/**
 * @member {String} db_database
 */
JobsJobJobSpecJobData.prototype['db_database'] = undefined;

/**
 * @member {String} db_password
 */
JobsJobJobSpecJobData.prototype['db_password'] = undefined;

/**
 * @member {String} db_privs
 */
JobsJobJobSpecJobData.prototype['db_privs'] = undefined;

/**
 * @member {String} db_username
 */
JobsJobJobSpecJobData.prototype['db_username'] = undefined;

/**
 * @member {Number} data_center
 */
JobsJobJobSpecJobData.prototype['data_center'] = undefined;

/**
 * @member {Boolean} exec_upgrade_script
 */
JobsJobJobSpecJobData.prototype['exec_upgrade_script'] = undefined;

/**
 * @member {Boolean} extended
 */
JobsJobJobSpecJobData.prototype['extended'] = undefined;

/**
 * @member {Number} listening_port
 */
JobsJobJobSpecJobData.prototype['listening_port'] = undefined;

/**
 * @member {Boolean} mask_passwords
 */
JobsJobJobSpecJobData.prototype['mask_passwords'] = undefined;

/**
 * @member {String} monitor_password
 */
JobsJobJobSpecJobData.prototype['monitor_password'] = undefined;

/**
 * @member {String} monitor_user
 */
JobsJobJobSpecJobData.prototype['monitor_user'] = undefined;

/**
 * @member {Boolean} use_clustering
 */
JobsJobJobSpecJobData.prototype['use_clustering'] = undefined;

/**
 * @member {Boolean} use_rw_split
 */
JobsJobJobSpecJobData.prototype['use_rw_split'] = undefined;

/**
 * @member {String} hostname
 */
JobsJobJobSpecJobData.prototype['hostname'] = undefined;

/**
 * @member {String} master_address
 */
JobsJobJobSpecJobData.prototype['master_address'] = undefined;

/**
 * @member {String} include_databases
 */
JobsJobJobSpecJobData.prototype['include_databases'] = undefined;

/**
 * @member {Boolean} install_timescaledb
 */
JobsJobJobSpecJobData.prototype['install_timescaledb'] = undefined;

/**
 * @member {Boolean} update_lb
 */
JobsJobJobSpecJobData.prototype['update_lb'] = undefined;

/**
 * @member {Boolean} encrypt_backup
 */
JobsJobJobSpecJobData.prototype['encrypt_backup'] = undefined;

/**
 * @member {Number} throttle_rate_netbw
 */
JobsJobJobSpecJobData.prototype['throttle_rate_netbw'] = undefined;

/**
 * @member {Boolean} use_pigz
 */
JobsJobJobSpecJobData.prototype['use_pigz'] = undefined;

/**
 * @member {Boolean} use_qpress
 */
JobsJobJobSpecJobData.prototype['use_qpress'] = undefined;

/**
 * @member {Boolean} wsrep_desync
 */
JobsJobJobSpecJobData.prototype['wsrep_desync'] = undefined;

/**
 * @member {Boolean} xtrabackup_backup_locks
 */
JobsJobJobSpecJobData.prototype['xtrabackup_backup_locks'] = undefined;

/**
 * @member {Boolean} xtrabackup_lock_ddl_per_table
 */
JobsJobJobSpecJobData.prototype['xtrabackup_lock_ddl_per_table'] = undefined;

/**
 * @member {Number} xtrabackup_parallellism
 */
JobsJobJobSpecJobData.prototype['xtrabackup_parallellism'] = undefined;

/**
 * @member {Number} verify_backup_delay
 */
JobsJobJobSpecJobData.prototype['verify_backup_delay'] = undefined;

/**
 * @member {String} data_dir
 */
JobsJobJobSpecJobData.prototype['data_dir'] = undefined;

/**
 * @member {String} db_user
 */
JobsJobJobSpecJobData.prototype['db_user'] = undefined;

/**
 * @member {Boolean} disable_firewall
 */
JobsJobJobSpecJobData.prototype['disable_firewall'] = undefined;

/**
 * @member {Boolean} disable_selinux
 */
JobsJobJobSpecJobData.prototype['disable_selinux'] = undefined;

/**
 * @member {Boolean} enabl_uninstall
 */
JobsJobJobSpecJobData.prototype['enabl_uninstall'] = undefined;

/**
 * @member {Boolean} generate_token
 */
JobsJobJobSpecJobData.prototype['generate_token'] = undefined;

/**
 * @member {Boolean} install_software
 */
JobsJobJobSpecJobData.prototype['install_software'] = undefined;

/**
 * @member {Boolean} enable_mysql_uninstall
 */
JobsJobJobSpecJobData.prototype['enable_mysql_uninstall'] = undefined;

/**
 * @member {Boolean} mysql_semi_sync
 */
JobsJobJobSpecJobData.prototype['mysql_semi_sync'] = undefined;

/**
 * @member {Boolean} enable_ssl
 */
JobsJobJobSpecJobData.prototype['enable_ssl'] = undefined;

/**
 * @member {String} mongos_conf_template
 */
JobsJobJobSpecJobData.prototype['mongos_conf_template'] = undefined;

/**
 * @member {String} mongodb_authdb
 */
JobsJobJobSpecJobData.prototype['mongodb_authdb'] = undefined;

/**
 * @member {Number} node_type
 */
JobsJobJobSpecJobData.prototype['node_type'] = undefined;

/**
 * @member {Boolean} overwrite_mysqlchk
 */
JobsJobJobSpecJobData.prototype['overwrite_mysqlchk'] = undefined;

/**
 * @member {Number} port
 */
JobsJobJobSpecJobData.prototype['port'] = undefined;

/**
 * @member {String} ssh_keyfile
 */
JobsJobJobSpecJobData.prototype['ssh_keyfile'] = undefined;

/**
 * @member {String} ssh_port
 */
JobsJobJobSpecJobData.prototype['ssh_port'] = undefined;

/**
 * @member {String} ssh_user
 */
JobsJobJobSpecJobData.prototype['ssh_user'] = undefined;

/**
 * @member {String} sudo_password
 */
JobsJobJobSpecJobData.prototype['sudo_password'] = undefined;

/**
 * @member {String} type
 */
JobsJobJobSpecJobData.prototype['type'] = undefined;

/**
 * @member {Number} user_id
 */
JobsJobJobSpecJobData.prototype['user_id'] = undefined;

/**
 * @member {module:model/JobsJobJobSpecJobData.VendorEnum} vendor
 */
JobsJobJobSpecJobData.prototype['vendor'] = undefined;

/**
 * @member {String} version
 */
JobsJobJobSpecJobData.prototype['version'] = undefined;

/**
 * @member {String} software_package
 */
JobsJobJobSpecJobData.prototype['software_package'] = undefined;

/**
 * @member {String} server_address
 */
JobsJobJobSpecJobData.prototype['server_address'] = undefined;

/**
 * @member {Boolean} terminate_db_server
 */
JobsJobJobSpecJobData.prototype['terminate_db_server'] = undefined;

/**
 * @member {Number} xtrabackup_use_memory
 */
JobsJobJobSpecJobData.prototype['xtrabackup_use_memory'] = undefined;

/**
 * @member {Boolean} initial
 */
JobsJobJobSpecJobData.prototype['initial'] = undefined;

/**
 * @member {Boolean} reboot
 */
JobsJobJobSpecJobData.prototype['reboot'] = undefined;

/**
 * @member {String} slave_address
 */
JobsJobJobSpecJobData.prototype['slave_address'] = undefined;

/**
 * @member {Boolean} force
 */
JobsJobJobSpecJobData.prototype['force'] = undefined;

/**
 * @member {Boolean} force_stop
 */
JobsJobJobSpecJobData.prototype['force_stop'] = undefined;

/**
 * @member {Number} stop_timeout
 */
JobsJobJobSpecJobData.prototype['stop_timeout'] = undefined;

/**
 * @member {module:model/BackupScheduleJobJobDataVerifyBackup} verify_backup
 */
JobsJobJobSpecJobData.prototype['verify_backup'] = undefined;

/**
 * @member {module:model/JobsJobJobSpecJobDataConfigServers} config_servers
 */
JobsJobJobSpecJobData.prototype['config_servers'] = undefined;

/**
 * @member {Array.<module:model/JobsJobJobSpecJobDataConfigServersMembers>} mongos_servers
 */
JobsJobJobSpecJobData.prototype['mongos_servers'] = undefined;

/**
 * @member {module:model/JobsJobJobSpecJobDataNode} node
 */
JobsJobJobSpecJobData.prototype['node'] = undefined;

/**
 * @member {Array.<module:model/JobsJobJobSpecJobDataNodes>} nodes
 */
JobsJobJobSpecJobData.prototype['nodes'] = undefined;

/**
 * @member {Array.<module:model/JobsJobJobSpecJobDataNodeAdresses>} node_adresses
 */
JobsJobJobSpecJobData.prototype['node_adresses'] = undefined;

/**
 * @member {module:model/JobsJobJobSpecJobDataTopology} topology
 */
JobsJobJobSpecJobData.prototype['topology'] = undefined;

/**
 * @member {Array.<module:model/JobsJobJobSpecJobDataReplicaSets>} replica_sets
 */
JobsJobJobSpecJobData.prototype['replica_sets'] = undefined;

/**
 * @member {Array.<String>} with_tags
 */
JobsJobJobSpecJobData.prototype['with_tags'] = undefined;





/**
 * Allowed values for the <code>action</code> property.
 * @enum {String}
 * @readonly
 */
JobsJobJobSpecJobData['ActionEnum'] = {

    /**
     * value: "enable"
     * @const
     */
    "enable": "enable",

    /**
     * value: "setup"
     * @const
     */
    "setup": "setup",

    /**
     * value: "setupHaProxy"
     * @const
     */
    "setupHaProxy": "setupHaProxy",

    /**
     * value: "setupProxySql"
     * @const
     */
    "setupProxySql": "setupProxySql"
};


/**
 * Allowed values for the <code>archive_mode</code> property.
 * @enum {String}
 * @readonly
 */
JobsJobJobSpecJobData['ArchiveModeEnum'] = {

    /**
     * value: "always"
     * @const
     */
    "always": "always"
};


/**
 * Allowed values for the <code>cluster_type</code> property.
 * @enum {String}
 * @readonly
 */
JobsJobJobSpecJobData['ClusterTypeEnum'] = {

    /**
     * value: "mssql_single"
     * @const
     */
    "mssql_single": "mssql_single",

    /**
     * value: "redis"
     * @const
     */
    "redis": "redis",

    /**
     * value: "mongodb"
     * @const
     */
    "mongodb": "mongodb",

    /**
     * value: "mssql_ao_async"
     * @const
     */
    "mssql_ao_async": "mssql_ao_async",

    /**
     * value: "postgresql_single"
     * @const
     */
    "postgresql_single": "postgresql_single",

    /**
     * value: "replication"
     * @const
     */
    "replication": "replication",

    /**
     * value: "galera"
     * @const
     */
    "galera": "galera"
};


/**
 * Allowed values for the <code>backup_failover_host</code> property.
 * @enum {String}
 * @readonly
 */
JobsJobJobSpecJobData['BackupFailoverHostEnum'] = {

    /**
     * value: "auto"
     * @const
     */
    "auto": "auto"
};


/**
 * Allowed values for the <code>backup_method</code> property.
 * @enum {String}
 * @readonly
 */
JobsJobJobSpecJobData['BackupMethodEnum'] = {

    /**
     * value: "xtrabackupfull"
     * @const
     */
    "xtrabackupfull": "xtrabackupfull",

    /**
     * value: "xtrabackupincr"
     * @const
     */
    "xtrabackupincr": "xtrabackupincr",

    /**
     * value: "pgbackrestfull"
     * @const
     */
    "pgbackrestfull": "pgbackrestfull",

    /**
     * value: "pgbackrestincr"
     * @const
     */
    "pgbackrestincr": "pgbackrestincr",

    /**
     * value: "pgbackrestdiff"
     * @const
     */
    "pgbackrestdiff": "pgbackrestdiff",

    /**
     * value: "pg_basebackup"
     * @const
     */
    "pg_basebackup": "pg_basebackup",

    /**
     * value: "mysqldump"
     * @const
     */
    "mysqldump": "mysqldump",

    /**
     * value: "percona-backup-mongodb"
     * @const
     */
    "percona-backup-mongodb": "percona-backup-mongodb",

    /**
     * value: "mssqlcert"
     * @const
     */
    "mssqlcert": "mssqlcert"
};


/**
 * Allowed values for the <code>backup_mysqldump_type</code> property.
 * @enum {String}
 * @readonly
 */
JobsJobJobSpecJobData['BackupMysqldumpTypeEnum'] = {

    /**
     * value: "Complete"
     * @const
     */
    "Complete": "Complete",

    /**
     * value: "SchemaAndData"
     * @const
     */
    "SchemaAndData": "SchemaAndData",

    /**
     * value: "SchemaOnly"
     * @const
     */
    "SchemaOnly": "SchemaOnly",

    /**
     * value: "DataOnly"
     * @const
     */
    "DataOnly": "DataOnly",

    /**
     * value: "MySQLDbOnly"
     * @const
     */
    "MySQLDbOnly": "MySQLDbOnly"
};


/**
 * Allowed values for the <code>vendor</code> property.
 * @enum {String}
 * @readonly
 */
JobsJobJobSpecJobData['VendorEnum'] = {

    /**
     * value: "defalt"
     * @const
     */
    "defalt": "defalt",

    /**
     * value: "percona"
     * @const
     */
    "percona": "percona",

    /**
     * value: "microsoft"
     * @const
     */
    "microsoft": "microsoft",

    /**
     * value: "redis"
     * @const
     */
    "redis": "redis"
};



export default JobsJobJobSpecJobData;

