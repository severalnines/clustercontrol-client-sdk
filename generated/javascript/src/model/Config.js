/**
 * Severalnines ClusterControl
 * This is a ...
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: sales@severalnines.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ConfigConfiguration from './ConfigConfiguration';
import ConfigLdapConfiguration from './ConfigLdapConfiguration';

/**
 * The Config model module.
 * @module model/Config
 * @version 1.0.0
 */
class Config {
    /**
     * Constructs a new <code>Config</code>.
     * @alias module:model/Config
     * @param operation {module:model/Config.OperationEnum} 
     */
    constructor(operation) { 
        
        Config.initialize(this, operation);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, operation) { 
        obj['operation'] = operation;
    }

    /**
     * Constructs a <code>Config</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Config} obj Optional instance to populate.
     * @return {module:model/Config} The populated <code>Config</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Config();

            if (data.hasOwnProperty('operation')) {
                obj['operation'] = ApiClient.convertToType(data['operation'], 'String');
            }
            if (data.hasOwnProperty('hostname')) {
                obj['hostname'] = ApiClient.convertToType(data['hostname'], 'String');
            }
            if (data.hasOwnProperty('port')) {
                obj['port'] = ApiClient.convertToType(data['port'], 'Number');
            }
            if (data.hasOwnProperty('configuration')) {
                obj['configuration'] = ApiClient.convertToType(data['configuration'], [ConfigConfiguration]);
            }
            if (data.hasOwnProperty('ldap_configuration')) {
                obj['ldap_configuration'] = ConfigLdapConfiguration.constructFromObject(data['ldap_configuration']);
            }
            if (data.hasOwnProperty('licensedata')) {
                obj['licensedata'] = ApiClient.convertToType(data['licensedata'], 'String');
            }
        }
        return obj;
    }


}

/**
 * @member {module:model/Config.OperationEnum} operation
 */
Config.prototype['operation'] = undefined;

/**
 * @member {String} hostname
 */
Config.prototype['hostname'] = undefined;

/**
 * @member {Number} port
 */
Config.prototype['port'] = undefined;

/**
 * @member {Array.<module:model/ConfigConfiguration>} configuration
 */
Config.prototype['configuration'] = undefined;

/**
 * @member {module:model/ConfigLdapConfiguration} ldap_configuration
 */
Config.prototype['ldap_configuration'] = undefined;

/**
 * @member {String} licensedata
 */
Config.prototype['licensedata'] = undefined;





/**
 * Allowed values for the <code>operation</code> property.
 * @enum {String}
 * @readonly
 */
Config['OperationEnum'] = {

    /**
     * value: "getConfig"
     * @const
     */
    "getConfig": "getConfig",

    /**
     * value: "setConfig"
     * @const
     */
    "setConfig": "setConfig",

    /**
     * value: "unsetConfig"
     * @const
     */
    "unsetConfig": "unsetConfig",

    /**
     * value: "getLdapConfig"
     * @const
     */
    "getLdapConfig": "getLdapConfig",

    /**
     * value: "setLdapConfig"
     * @const
     */
    "setLdapConfig": "setLdapConfig",

    /**
     * value: "setLicense"
     * @const
     */
    "setLicense": "setLicense",

    /**
     * value: "getLicense"
     * @const
     */
    "getLicense": "getLicense",

    /**
     * value: "listTemplates"
     * @const
     */
    "listTemplates": "listTemplates"
};



export default Config;

