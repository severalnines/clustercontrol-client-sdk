/**
 * Severalnines ClusterControl
 * This is a ...
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: sales@severalnines.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import UsersGroup from './UsersGroup';
import UsersUser from './UsersUser';

/**
 * The Users model module.
 * @module model/Users
 * @version 1.0.0
 */
class Users {
    /**
     * Constructs a new <code>Users</code>.
     * @alias module:model/Users
     * @param operation {module:model/Users.OperationEnum} 
     */
    constructor(operation) { 
        
        Users.initialize(this, operation);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, operation) { 
        obj['operation'] = operation;
    }

    /**
     * Constructs a <code>Users</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Users} obj Optional instance to populate.
     * @return {module:model/Users} The populated <code>Users</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Users();

            if (data.hasOwnProperty('operation')) {
                obj['operation'] = ApiClient.convertToType(data['operation'], 'String');
            }
            if (data.hasOwnProperty('create_group')) {
                obj['create_group'] = ApiClient.convertToType(data['create_group'], 'Boolean');
            }
            if (data.hasOwnProperty('new_password')) {
                obj['new_password'] = ApiClient.convertToType(data['new_password'], 'String');
            }
            if (data.hasOwnProperty('old_password')) {
                obj['old_password'] = ApiClient.convertToType(data['old_password'], 'String');
            }
            if (data.hasOwnProperty('group_name')) {
                obj['group_name'] = ApiClient.convertToType(data['group_name'], 'String');
            }
            if (data.hasOwnProperty('replace_primary_group')) {
                obj['replace_primary_group'] = ApiClient.convertToType(data['replace_primary_group'], 'Boolean');
            }
            if (data.hasOwnProperty('with_tags')) {
                obj['with_tags'] = ApiClient.convertToType(data['with_tags'], ['String']);
            }
            if (data.hasOwnProperty('user')) {
                obj['user'] = UsersUser.constructFromObject(data['user']);
            }
            if (data.hasOwnProperty('group')) {
                obj['group'] = UsersGroup.constructFromObject(data['group']);
            }
        }
        return obj;
    }


}

/**
 * @member {module:model/Users.OperationEnum} operation
 */
Users.prototype['operation'] = undefined;

/**
 * @member {Boolean} create_group
 */
Users.prototype['create_group'] = undefined;

/**
 * @member {String} new_password
 */
Users.prototype['new_password'] = undefined;

/**
 * @member {String} old_password
 */
Users.prototype['old_password'] = undefined;

/**
 * @member {String} group_name
 */
Users.prototype['group_name'] = undefined;

/**
 * @member {Boolean} replace_primary_group
 */
Users.prototype['replace_primary_group'] = undefined;

/**
 * @member {Array.<String>} with_tags
 */
Users.prototype['with_tags'] = undefined;

/**
 * @member {module:model/UsersUser} user
 */
Users.prototype['user'] = undefined;

/**
 * @member {module:model/UsersGroup} group
 */
Users.prototype['group'] = undefined;





/**
 * Allowed values for the <code>operation</code> property.
 * @enum {String}
 * @readonly
 */
Users['OperationEnum'] = {

    /**
     * value: "createUser"
     * @const
     */
    "createUser": "createUser",

    /**
     * value: "getUsers"
     * @const
     */
    "getUsers": "getUsers",

    /**
     * value: "setUser"
     * @const
     */
    "setUser": "setUser",

    /**
     * value: "disable"
     * @const
     */
    "disable": "disable",

    /**
     * value: "deleteUser"
     * @const
     */
    "deleteUser": "deleteUser",

    /**
     * value: "enable"
     * @const
     */
    "enable": "enable",

    /**
     * value: "changePassword"
     * @const
     */
    "changePassword": "changePassword",

    /**
     * value: "getKeys"
     * @const
     */
    "getKeys": "getKeys",

    /**
     * value: "addKey"
     * @const
     */
    "addKey": "addKey",

    /**
     * value: "deleteKey"
     * @const
     */
    "deleteKey": "deleteKey",

    /**
     * value: "createGroup"
     * @const
     */
    "createGroup": "createGroup",

    /**
     * value: "deleteGroup"
     * @const
     */
    "deleteGroup": "deleteGroup",

    /**
     * value: "getGroups"
     * @const
     */
    "getGroups": "getGroups",

    /**
     * value: "addToGroup"
     * @const
     */
    "addToGroup": "addToGroup",

    /**
     * value: "removeFromGroup"
     * @const
     */
    "removeFromGroup": "removeFromGroup",

    /**
     * value: "canCreateUser"
     * @const
     */
    "canCreateUser": "canCreateUser",

    /**
     * value: "canCreateGroup"
     * @const
     */
    "canCreateGroup": "canCreateGroup"
};



export default Users;

