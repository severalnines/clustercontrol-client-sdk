/*
Severalnines ClusterControl REST API (V2)

REST API (V2) specification for ClusterControl - AI Powered Database automation tool for multi/hybrid cloud database deployment.

API version: OpenAPI specification v1.0.0
Contact: sales@severalnines.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// Clusters struct for Clusters
type Clusters struct {
	Operation string `json:"operation"`
	ClusterId *int32 `json:"cluster_id,omitempty"`
	ClusterName *string `json:"cluster_name,omitempty"`
	WithHosts *bool `json:"with_hosts,omitempty"`
	WithSheetInfo *bool `json:"with_sheet_info,omitempty"`
	Configuration []ClustersConfigurationInner `json:"configuration,omitempty"`
	Account *ClustersAccount `json:"account,omitempty"`
	FilterStrings *string `json:"filter_strings,omitempty"`
	Limit *int32 `json:"limit,omitempty"`
	Offset *int32 `json:"offset,omitempty"`
	Database *ClustersDatabase `json:"database,omitempty"`
	Nodes []string `json:"nodes,omitempty"`
}

// NewClusters instantiates a new Clusters object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClusters(operation string) *Clusters {
	this := Clusters{}
	this.Operation = operation
	return &this
}

// NewClustersWithDefaults instantiates a new Clusters object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClustersWithDefaults() *Clusters {
	this := Clusters{}
	return &this
}

// GetOperation returns the Operation field value
func (o *Clusters) GetOperation() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Operation
}

// GetOperationOk returns a tuple with the Operation field value
// and a boolean to check if the value has been set.
func (o *Clusters) GetOperationOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Operation, true
}

// SetOperation sets field value
func (o *Clusters) SetOperation(v string) {
	o.Operation = v
}

// GetClusterId returns the ClusterId field value if set, zero value otherwise.
func (o *Clusters) GetClusterId() int32 {
	if o == nil || isNil(o.ClusterId) {
		var ret int32
		return ret
	}
	return *o.ClusterId
}

// GetClusterIdOk returns a tuple with the ClusterId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Clusters) GetClusterIdOk() (*int32, bool) {
	if o == nil || isNil(o.ClusterId) {
    return nil, false
	}
	return o.ClusterId, true
}

// HasClusterId returns a boolean if a field has been set.
func (o *Clusters) HasClusterId() bool {
	if o != nil && !isNil(o.ClusterId) {
		return true
	}

	return false
}

// SetClusterId gets a reference to the given int32 and assigns it to the ClusterId field.
func (o *Clusters) SetClusterId(v int32) {
	o.ClusterId = &v
}

// GetClusterName returns the ClusterName field value if set, zero value otherwise.
func (o *Clusters) GetClusterName() string {
	if o == nil || isNil(o.ClusterName) {
		var ret string
		return ret
	}
	return *o.ClusterName
}

// GetClusterNameOk returns a tuple with the ClusterName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Clusters) GetClusterNameOk() (*string, bool) {
	if o == nil || isNil(o.ClusterName) {
    return nil, false
	}
	return o.ClusterName, true
}

// HasClusterName returns a boolean if a field has been set.
func (o *Clusters) HasClusterName() bool {
	if o != nil && !isNil(o.ClusterName) {
		return true
	}

	return false
}

// SetClusterName gets a reference to the given string and assigns it to the ClusterName field.
func (o *Clusters) SetClusterName(v string) {
	o.ClusterName = &v
}

// GetWithHosts returns the WithHosts field value if set, zero value otherwise.
func (o *Clusters) GetWithHosts() bool {
	if o == nil || isNil(o.WithHosts) {
		var ret bool
		return ret
	}
	return *o.WithHosts
}

// GetWithHostsOk returns a tuple with the WithHosts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Clusters) GetWithHostsOk() (*bool, bool) {
	if o == nil || isNil(o.WithHosts) {
    return nil, false
	}
	return o.WithHosts, true
}

// HasWithHosts returns a boolean if a field has been set.
func (o *Clusters) HasWithHosts() bool {
	if o != nil && !isNil(o.WithHosts) {
		return true
	}

	return false
}

// SetWithHosts gets a reference to the given bool and assigns it to the WithHosts field.
func (o *Clusters) SetWithHosts(v bool) {
	o.WithHosts = &v
}

// GetWithSheetInfo returns the WithSheetInfo field value if set, zero value otherwise.
func (o *Clusters) GetWithSheetInfo() bool {
	if o == nil || isNil(o.WithSheetInfo) {
		var ret bool
		return ret
	}
	return *o.WithSheetInfo
}

// GetWithSheetInfoOk returns a tuple with the WithSheetInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Clusters) GetWithSheetInfoOk() (*bool, bool) {
	if o == nil || isNil(o.WithSheetInfo) {
    return nil, false
	}
	return o.WithSheetInfo, true
}

// HasWithSheetInfo returns a boolean if a field has been set.
func (o *Clusters) HasWithSheetInfo() bool {
	if o != nil && !isNil(o.WithSheetInfo) {
		return true
	}

	return false
}

// SetWithSheetInfo gets a reference to the given bool and assigns it to the WithSheetInfo field.
func (o *Clusters) SetWithSheetInfo(v bool) {
	o.WithSheetInfo = &v
}

// GetConfiguration returns the Configuration field value if set, zero value otherwise.
func (o *Clusters) GetConfiguration() []ClustersConfigurationInner {
	if o == nil || isNil(o.Configuration) {
		var ret []ClustersConfigurationInner
		return ret
	}
	return o.Configuration
}

// GetConfigurationOk returns a tuple with the Configuration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Clusters) GetConfigurationOk() ([]ClustersConfigurationInner, bool) {
	if o == nil || isNil(o.Configuration) {
    return nil, false
	}
	return o.Configuration, true
}

// HasConfiguration returns a boolean if a field has been set.
func (o *Clusters) HasConfiguration() bool {
	if o != nil && !isNil(o.Configuration) {
		return true
	}

	return false
}

// SetConfiguration gets a reference to the given []ClustersConfigurationInner and assigns it to the Configuration field.
func (o *Clusters) SetConfiguration(v []ClustersConfigurationInner) {
	o.Configuration = v
}

// GetAccount returns the Account field value if set, zero value otherwise.
func (o *Clusters) GetAccount() ClustersAccount {
	if o == nil || isNil(o.Account) {
		var ret ClustersAccount
		return ret
	}
	return *o.Account
}

// GetAccountOk returns a tuple with the Account field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Clusters) GetAccountOk() (*ClustersAccount, bool) {
	if o == nil || isNil(o.Account) {
    return nil, false
	}
	return o.Account, true
}

// HasAccount returns a boolean if a field has been set.
func (o *Clusters) HasAccount() bool {
	if o != nil && !isNil(o.Account) {
		return true
	}

	return false
}

// SetAccount gets a reference to the given ClustersAccount and assigns it to the Account field.
func (o *Clusters) SetAccount(v ClustersAccount) {
	o.Account = &v
}

// GetFilterStrings returns the FilterStrings field value if set, zero value otherwise.
func (o *Clusters) GetFilterStrings() string {
	if o == nil || isNil(o.FilterStrings) {
		var ret string
		return ret
	}
	return *o.FilterStrings
}

// GetFilterStringsOk returns a tuple with the FilterStrings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Clusters) GetFilterStringsOk() (*string, bool) {
	if o == nil || isNil(o.FilterStrings) {
    return nil, false
	}
	return o.FilterStrings, true
}

// HasFilterStrings returns a boolean if a field has been set.
func (o *Clusters) HasFilterStrings() bool {
	if o != nil && !isNil(o.FilterStrings) {
		return true
	}

	return false
}

// SetFilterStrings gets a reference to the given string and assigns it to the FilterStrings field.
func (o *Clusters) SetFilterStrings(v string) {
	o.FilterStrings = &v
}

// GetLimit returns the Limit field value if set, zero value otherwise.
func (o *Clusters) GetLimit() int32 {
	if o == nil || isNil(o.Limit) {
		var ret int32
		return ret
	}
	return *o.Limit
}

// GetLimitOk returns a tuple with the Limit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Clusters) GetLimitOk() (*int32, bool) {
	if o == nil || isNil(o.Limit) {
    return nil, false
	}
	return o.Limit, true
}

// HasLimit returns a boolean if a field has been set.
func (o *Clusters) HasLimit() bool {
	if o != nil && !isNil(o.Limit) {
		return true
	}

	return false
}

// SetLimit gets a reference to the given int32 and assigns it to the Limit field.
func (o *Clusters) SetLimit(v int32) {
	o.Limit = &v
}

// GetOffset returns the Offset field value if set, zero value otherwise.
func (o *Clusters) GetOffset() int32 {
	if o == nil || isNil(o.Offset) {
		var ret int32
		return ret
	}
	return *o.Offset
}

// GetOffsetOk returns a tuple with the Offset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Clusters) GetOffsetOk() (*int32, bool) {
	if o == nil || isNil(o.Offset) {
    return nil, false
	}
	return o.Offset, true
}

// HasOffset returns a boolean if a field has been set.
func (o *Clusters) HasOffset() bool {
	if o != nil && !isNil(o.Offset) {
		return true
	}

	return false
}

// SetOffset gets a reference to the given int32 and assigns it to the Offset field.
func (o *Clusters) SetOffset(v int32) {
	o.Offset = &v
}

// GetDatabase returns the Database field value if set, zero value otherwise.
func (o *Clusters) GetDatabase() ClustersDatabase {
	if o == nil || isNil(o.Database) {
		var ret ClustersDatabase
		return ret
	}
	return *o.Database
}

// GetDatabaseOk returns a tuple with the Database field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Clusters) GetDatabaseOk() (*ClustersDatabase, bool) {
	if o == nil || isNil(o.Database) {
    return nil, false
	}
	return o.Database, true
}

// HasDatabase returns a boolean if a field has been set.
func (o *Clusters) HasDatabase() bool {
	if o != nil && !isNil(o.Database) {
		return true
	}

	return false
}

// SetDatabase gets a reference to the given ClustersDatabase and assigns it to the Database field.
func (o *Clusters) SetDatabase(v ClustersDatabase) {
	o.Database = &v
}

// GetNodes returns the Nodes field value if set, zero value otherwise.
func (o *Clusters) GetNodes() []string {
	if o == nil || isNil(o.Nodes) {
		var ret []string
		return ret
	}
	return o.Nodes
}

// GetNodesOk returns a tuple with the Nodes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Clusters) GetNodesOk() ([]string, bool) {
	if o == nil || isNil(o.Nodes) {
    return nil, false
	}
	return o.Nodes, true
}

// HasNodes returns a boolean if a field has been set.
func (o *Clusters) HasNodes() bool {
	if o != nil && !isNil(o.Nodes) {
		return true
	}

	return false
}

// SetNodes gets a reference to the given []string and assigns it to the Nodes field.
func (o *Clusters) SetNodes(v []string) {
	o.Nodes = v
}

func (o Clusters) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["operation"] = o.Operation
	}
	if !isNil(o.ClusterId) {
		toSerialize["cluster_id"] = o.ClusterId
	}
	if !isNil(o.ClusterName) {
		toSerialize["cluster_name"] = o.ClusterName
	}
	if !isNil(o.WithHosts) {
		toSerialize["with_hosts"] = o.WithHosts
	}
	if !isNil(o.WithSheetInfo) {
		toSerialize["with_sheet_info"] = o.WithSheetInfo
	}
	if !isNil(o.Configuration) {
		toSerialize["configuration"] = o.Configuration
	}
	if !isNil(o.Account) {
		toSerialize["account"] = o.Account
	}
	if !isNil(o.FilterStrings) {
		toSerialize["filter_strings"] = o.FilterStrings
	}
	if !isNil(o.Limit) {
		toSerialize["limit"] = o.Limit
	}
	if !isNil(o.Offset) {
		toSerialize["offset"] = o.Offset
	}
	if !isNil(o.Database) {
		toSerialize["database"] = o.Database
	}
	if !isNil(o.Nodes) {
		toSerialize["nodes"] = o.Nodes
	}
	return json.Marshal(toSerialize)
}

type NullableClusters struct {
	value *Clusters
	isSet bool
}

func (v NullableClusters) Get() *Clusters {
	return v.value
}

func (v *NullableClusters) Set(val *Clusters) {
	v.value = val
	v.isSet = true
}

func (v NullableClusters) IsSet() bool {
	return v.isSet
}

func (v *NullableClusters) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClusters(val *Clusters) *NullableClusters {
	return &NullableClusters{value: val, isSet: true}
}

func (v NullableClusters) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClusters) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


