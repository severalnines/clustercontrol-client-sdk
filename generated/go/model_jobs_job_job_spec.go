/*
Severalnines ClusterControl REST API (V2)

REST API (V2) specification for ClusterControl - AI Powered Database automation tool for multi/hybrid cloud database deployment.

API version: OpenAPI specification v1.0.0
Contact: sales@severalnines.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// JobsJobJobSpec struct for JobsJobJobSpec
type JobsJobJobSpec struct {
	Command *string `json:"command,omitempty"`
	Id *int32 `json:"id,omitempty"`
	JobData *JobsJobJobSpecJobData `json:"job_data,omitempty"`
}

// NewJobsJobJobSpec instantiates a new JobsJobJobSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewJobsJobJobSpec() *JobsJobJobSpec {
	this := JobsJobJobSpec{}
	return &this
}

// NewJobsJobJobSpecWithDefaults instantiates a new JobsJobJobSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewJobsJobJobSpecWithDefaults() *JobsJobJobSpec {
	this := JobsJobJobSpec{}
	return &this
}

// GetCommand returns the Command field value if set, zero value otherwise.
func (o *JobsJobJobSpec) GetCommand() string {
	if o == nil || isNil(o.Command) {
		var ret string
		return ret
	}
	return *o.Command
}

// GetCommandOk returns a tuple with the Command field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsJobJobSpec) GetCommandOk() (*string, bool) {
	if o == nil || isNil(o.Command) {
    return nil, false
	}
	return o.Command, true
}

// HasCommand returns a boolean if a field has been set.
func (o *JobsJobJobSpec) HasCommand() bool {
	if o != nil && !isNil(o.Command) {
		return true
	}

	return false
}

// SetCommand gets a reference to the given string and assigns it to the Command field.
func (o *JobsJobJobSpec) SetCommand(v string) {
	o.Command = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *JobsJobJobSpec) GetId() int32 {
	if o == nil || isNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsJobJobSpec) GetIdOk() (*int32, bool) {
	if o == nil || isNil(o.Id) {
    return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *JobsJobJobSpec) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *JobsJobJobSpec) SetId(v int32) {
	o.Id = &v
}

// GetJobData returns the JobData field value if set, zero value otherwise.
func (o *JobsJobJobSpec) GetJobData() JobsJobJobSpecJobData {
	if o == nil || isNil(o.JobData) {
		var ret JobsJobJobSpecJobData
		return ret
	}
	return *o.JobData
}

// GetJobDataOk returns a tuple with the JobData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsJobJobSpec) GetJobDataOk() (*JobsJobJobSpecJobData, bool) {
	if o == nil || isNil(o.JobData) {
    return nil, false
	}
	return o.JobData, true
}

// HasJobData returns a boolean if a field has been set.
func (o *JobsJobJobSpec) HasJobData() bool {
	if o != nil && !isNil(o.JobData) {
		return true
	}

	return false
}

// SetJobData gets a reference to the given JobsJobJobSpecJobData and assigns it to the JobData field.
func (o *JobsJobJobSpec) SetJobData(v JobsJobJobSpecJobData) {
	o.JobData = &v
}

func (o JobsJobJobSpec) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Command) {
		toSerialize["command"] = o.Command
	}
	if !isNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !isNil(o.JobData) {
		toSerialize["job_data"] = o.JobData
	}
	return json.Marshal(toSerialize)
}

type NullableJobsJobJobSpec struct {
	value *JobsJobJobSpec
	isSet bool
}

func (v NullableJobsJobJobSpec) Get() *JobsJobJobSpec {
	return v.value
}

func (v *NullableJobsJobJobSpec) Set(val *JobsJobJobSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableJobsJobJobSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableJobsJobJobSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableJobsJobJobSpec(val *JobsJobJobSpec) *NullableJobsJobJobSpec {
	return &NullableJobsJobJobSpec{value: val, isSet: true}
}

func (v NullableJobsJobJobSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableJobsJobJobSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


