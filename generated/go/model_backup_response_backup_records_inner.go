/*
Severalnines ClusterControl REST API (V2)

REST API (V2) specification for ClusterControl - AI Powered Database automation tool for multi/hybrid cloud database deployment.

API version: OpenAPI specification v1.0.0
Contact: sales@severalnines.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the BackupResponseBackupRecordsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BackupResponseBackupRecordsInner{}

// BackupResponseBackupRecordsInner struct for BackupResponseBackupRecordsInner
type BackupResponseBackupRecordsInner struct {
	Version *int32 `json:"version,omitempty"`
	CloudLocations []BackupResponseBackupRecordsInnerCloudLocationsInner `json:"cloud_locations,omitempty"`
	HostLocations []BackupResponseBackupRecordsInnerHostLocationsInner `json:"host_locations,omitempty"`
	Metadata *BackupResponseBackupRecordsInnerMetadata `json:"metadata,omitempty"`
	Cluster *BackupResponseBackupRecordsInnerCluster `json:"cluster,omitempty"`
}

// NewBackupResponseBackupRecordsInner instantiates a new BackupResponseBackupRecordsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBackupResponseBackupRecordsInner() *BackupResponseBackupRecordsInner {
	this := BackupResponseBackupRecordsInner{}
	return &this
}

// NewBackupResponseBackupRecordsInnerWithDefaults instantiates a new BackupResponseBackupRecordsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBackupResponseBackupRecordsInnerWithDefaults() *BackupResponseBackupRecordsInner {
	this := BackupResponseBackupRecordsInner{}
	return &this
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *BackupResponseBackupRecordsInner) GetVersion() int32 {
	if o == nil || IsNil(o.Version) {
		var ret int32
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupResponseBackupRecordsInner) GetVersionOk() (*int32, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *BackupResponseBackupRecordsInner) HasVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given int32 and assigns it to the Version field.
func (o *BackupResponseBackupRecordsInner) SetVersion(v int32) {
	o.Version = &v
}

// GetCloudLocations returns the CloudLocations field value if set, zero value otherwise.
func (o *BackupResponseBackupRecordsInner) GetCloudLocations() []BackupResponseBackupRecordsInnerCloudLocationsInner {
	if o == nil || IsNil(o.CloudLocations) {
		var ret []BackupResponseBackupRecordsInnerCloudLocationsInner
		return ret
	}
	return o.CloudLocations
}

// GetCloudLocationsOk returns a tuple with the CloudLocations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupResponseBackupRecordsInner) GetCloudLocationsOk() ([]BackupResponseBackupRecordsInnerCloudLocationsInner, bool) {
	if o == nil || IsNil(o.CloudLocations) {
		return nil, false
	}
	return o.CloudLocations, true
}

// HasCloudLocations returns a boolean if a field has been set.
func (o *BackupResponseBackupRecordsInner) HasCloudLocations() bool {
	if o != nil && !IsNil(o.CloudLocations) {
		return true
	}

	return false
}

// SetCloudLocations gets a reference to the given []BackupResponseBackupRecordsInnerCloudLocationsInner and assigns it to the CloudLocations field.
func (o *BackupResponseBackupRecordsInner) SetCloudLocations(v []BackupResponseBackupRecordsInnerCloudLocationsInner) {
	o.CloudLocations = v
}

// GetHostLocations returns the HostLocations field value if set, zero value otherwise.
func (o *BackupResponseBackupRecordsInner) GetHostLocations() []BackupResponseBackupRecordsInnerHostLocationsInner {
	if o == nil || IsNil(o.HostLocations) {
		var ret []BackupResponseBackupRecordsInnerHostLocationsInner
		return ret
	}
	return o.HostLocations
}

// GetHostLocationsOk returns a tuple with the HostLocations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupResponseBackupRecordsInner) GetHostLocationsOk() ([]BackupResponseBackupRecordsInnerHostLocationsInner, bool) {
	if o == nil || IsNil(o.HostLocations) {
		return nil, false
	}
	return o.HostLocations, true
}

// HasHostLocations returns a boolean if a field has been set.
func (o *BackupResponseBackupRecordsInner) HasHostLocations() bool {
	if o != nil && !IsNil(o.HostLocations) {
		return true
	}

	return false
}

// SetHostLocations gets a reference to the given []BackupResponseBackupRecordsInnerHostLocationsInner and assigns it to the HostLocations field.
func (o *BackupResponseBackupRecordsInner) SetHostLocations(v []BackupResponseBackupRecordsInnerHostLocationsInner) {
	o.HostLocations = v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *BackupResponseBackupRecordsInner) GetMetadata() BackupResponseBackupRecordsInnerMetadata {
	if o == nil || IsNil(o.Metadata) {
		var ret BackupResponseBackupRecordsInnerMetadata
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupResponseBackupRecordsInner) GetMetadataOk() (*BackupResponseBackupRecordsInnerMetadata, bool) {
	if o == nil || IsNil(o.Metadata) {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *BackupResponseBackupRecordsInner) HasMetadata() bool {
	if o != nil && !IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given BackupResponseBackupRecordsInnerMetadata and assigns it to the Metadata field.
func (o *BackupResponseBackupRecordsInner) SetMetadata(v BackupResponseBackupRecordsInnerMetadata) {
	o.Metadata = &v
}

// GetCluster returns the Cluster field value if set, zero value otherwise.
func (o *BackupResponseBackupRecordsInner) GetCluster() BackupResponseBackupRecordsInnerCluster {
	if o == nil || IsNil(o.Cluster) {
		var ret BackupResponseBackupRecordsInnerCluster
		return ret
	}
	return *o.Cluster
}

// GetClusterOk returns a tuple with the Cluster field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupResponseBackupRecordsInner) GetClusterOk() (*BackupResponseBackupRecordsInnerCluster, bool) {
	if o == nil || IsNil(o.Cluster) {
		return nil, false
	}
	return o.Cluster, true
}

// HasCluster returns a boolean if a field has been set.
func (o *BackupResponseBackupRecordsInner) HasCluster() bool {
	if o != nil && !IsNil(o.Cluster) {
		return true
	}

	return false
}

// SetCluster gets a reference to the given BackupResponseBackupRecordsInnerCluster and assigns it to the Cluster field.
func (o *BackupResponseBackupRecordsInner) SetCluster(v BackupResponseBackupRecordsInnerCluster) {
	o.Cluster = &v
}

func (o BackupResponseBackupRecordsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BackupResponseBackupRecordsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	if !IsNil(o.CloudLocations) {
		toSerialize["cloud_locations"] = o.CloudLocations
	}
	if !IsNil(o.HostLocations) {
		toSerialize["host_locations"] = o.HostLocations
	}
	if !IsNil(o.Metadata) {
		toSerialize["metadata"] = o.Metadata
	}
	if !IsNil(o.Cluster) {
		toSerialize["cluster"] = o.Cluster
	}
	return toSerialize, nil
}

type NullableBackupResponseBackupRecordsInner struct {
	value *BackupResponseBackupRecordsInner
	isSet bool
}

func (v NullableBackupResponseBackupRecordsInner) Get() *BackupResponseBackupRecordsInner {
	return v.value
}

func (v *NullableBackupResponseBackupRecordsInner) Set(val *BackupResponseBackupRecordsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableBackupResponseBackupRecordsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableBackupResponseBackupRecordsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBackupResponseBackupRecordsInner(val *BackupResponseBackupRecordsInner) *NullableBackupResponseBackupRecordsInner {
	return &NullableBackupResponseBackupRecordsInner{value: val, isSet: true}
}

func (v NullableBackupResponseBackupRecordsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBackupResponseBackupRecordsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


