/*
Severalnines ClusterControl

This is a ...

API version: 1.0.0
Contact: sales@severalnines.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// UsersUserGroupsInner struct for UsersUserGroupsInner
type UsersUserGroupsInner struct {
	ClassName *string `json:"class_name,omitempty"`
	GroupName *string `json:"group_name,omitempty"`
	GroupId *int32 `json:"group_id,omitempty"`
}

// NewUsersUserGroupsInner instantiates a new UsersUserGroupsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUsersUserGroupsInner() *UsersUserGroupsInner {
	this := UsersUserGroupsInner{}
	return &this
}

// NewUsersUserGroupsInnerWithDefaults instantiates a new UsersUserGroupsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUsersUserGroupsInnerWithDefaults() *UsersUserGroupsInner {
	this := UsersUserGroupsInner{}
	return &this
}

// GetClassName returns the ClassName field value if set, zero value otherwise.
func (o *UsersUserGroupsInner) GetClassName() string {
	if o == nil || o.ClassName == nil {
		var ret string
		return ret
	}
	return *o.ClassName
}

// GetClassNameOk returns a tuple with the ClassName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UsersUserGroupsInner) GetClassNameOk() (*string, bool) {
	if o == nil || o.ClassName == nil {
		return nil, false
	}
	return o.ClassName, true
}

// HasClassName returns a boolean if a field has been set.
func (o *UsersUserGroupsInner) HasClassName() bool {
	if o != nil && o.ClassName != nil {
		return true
	}

	return false
}

// SetClassName gets a reference to the given string and assigns it to the ClassName field.
func (o *UsersUserGroupsInner) SetClassName(v string) {
	o.ClassName = &v
}

// GetGroupName returns the GroupName field value if set, zero value otherwise.
func (o *UsersUserGroupsInner) GetGroupName() string {
	if o == nil || o.GroupName == nil {
		var ret string
		return ret
	}
	return *o.GroupName
}

// GetGroupNameOk returns a tuple with the GroupName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UsersUserGroupsInner) GetGroupNameOk() (*string, bool) {
	if o == nil || o.GroupName == nil {
		return nil, false
	}
	return o.GroupName, true
}

// HasGroupName returns a boolean if a field has been set.
func (o *UsersUserGroupsInner) HasGroupName() bool {
	if o != nil && o.GroupName != nil {
		return true
	}

	return false
}

// SetGroupName gets a reference to the given string and assigns it to the GroupName field.
func (o *UsersUserGroupsInner) SetGroupName(v string) {
	o.GroupName = &v
}

// GetGroupId returns the GroupId field value if set, zero value otherwise.
func (o *UsersUserGroupsInner) GetGroupId() int32 {
	if o == nil || o.GroupId == nil {
		var ret int32
		return ret
	}
	return *o.GroupId
}

// GetGroupIdOk returns a tuple with the GroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UsersUserGroupsInner) GetGroupIdOk() (*int32, bool) {
	if o == nil || o.GroupId == nil {
		return nil, false
	}
	return o.GroupId, true
}

// HasGroupId returns a boolean if a field has been set.
func (o *UsersUserGroupsInner) HasGroupId() bool {
	if o != nil && o.GroupId != nil {
		return true
	}

	return false
}

// SetGroupId gets a reference to the given int32 and assigns it to the GroupId field.
func (o *UsersUserGroupsInner) SetGroupId(v int32) {
	o.GroupId = &v
}

func (o UsersUserGroupsInner) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ClassName != nil {
		toSerialize["class_name"] = o.ClassName
	}
	if o.GroupName != nil {
		toSerialize["group_name"] = o.GroupName
	}
	if o.GroupId != nil {
		toSerialize["group_id"] = o.GroupId
	}
	return json.Marshal(toSerialize)
}

type NullableUsersUserGroupsInner struct {
	value *UsersUserGroupsInner
	isSet bool
}

func (v NullableUsersUserGroupsInner) Get() *UsersUserGroupsInner {
	return v.value
}

func (v *NullableUsersUserGroupsInner) Set(val *UsersUserGroupsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableUsersUserGroupsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableUsersUserGroupsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUsersUserGroupsInner(val *UsersUserGroupsInner) *NullableUsersUserGroupsInner {
	return &NullableUsersUserGroupsInner{value: val, isSet: true}
}

func (v NullableUsersUserGroupsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUsersUserGroupsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


