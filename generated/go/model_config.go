/*
Severalnines ClusterControl REST API (V2)

REST API (V2) specification for ClusterControl - AI Powered Database automation tool for multi/hybrid cloud database deployment.

API version: OpenAPI specification v1.0.0
Contact: sales@severalnines.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// Config struct for Config
type Config struct {
	Operation string `json:"operation"`
	Hostname *string `json:"hostname,omitempty"`
	Port *int32 `json:"port,omitempty"`
	Configuration []ConfigConfigurationInner `json:"configuration,omitempty"`
	LdapConfiguration *ConfigLdapConfiguration `json:"ldap_configuration,omitempty"`
	Licensedata *string `json:"licensedata,omitempty"`
}

// NewConfig instantiates a new Config object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConfig(operation string) *Config {
	this := Config{}
	this.Operation = operation
	return &this
}

// NewConfigWithDefaults instantiates a new Config object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConfigWithDefaults() *Config {
	this := Config{}
	return &this
}

// GetOperation returns the Operation field value
func (o *Config) GetOperation() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Operation
}

// GetOperationOk returns a tuple with the Operation field value
// and a boolean to check if the value has been set.
func (o *Config) GetOperationOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Operation, true
}

// SetOperation sets field value
func (o *Config) SetOperation(v string) {
	o.Operation = v
}

// GetHostname returns the Hostname field value if set, zero value otherwise.
func (o *Config) GetHostname() string {
	if o == nil || isNil(o.Hostname) {
		var ret string
		return ret
	}
	return *o.Hostname
}

// GetHostnameOk returns a tuple with the Hostname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Config) GetHostnameOk() (*string, bool) {
	if o == nil || isNil(o.Hostname) {
    return nil, false
	}
	return o.Hostname, true
}

// HasHostname returns a boolean if a field has been set.
func (o *Config) HasHostname() bool {
	if o != nil && !isNil(o.Hostname) {
		return true
	}

	return false
}

// SetHostname gets a reference to the given string and assigns it to the Hostname field.
func (o *Config) SetHostname(v string) {
	o.Hostname = &v
}

// GetPort returns the Port field value if set, zero value otherwise.
func (o *Config) GetPort() int32 {
	if o == nil || isNil(o.Port) {
		var ret int32
		return ret
	}
	return *o.Port
}

// GetPortOk returns a tuple with the Port field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Config) GetPortOk() (*int32, bool) {
	if o == nil || isNil(o.Port) {
    return nil, false
	}
	return o.Port, true
}

// HasPort returns a boolean if a field has been set.
func (o *Config) HasPort() bool {
	if o != nil && !isNil(o.Port) {
		return true
	}

	return false
}

// SetPort gets a reference to the given int32 and assigns it to the Port field.
func (o *Config) SetPort(v int32) {
	o.Port = &v
}

// GetConfiguration returns the Configuration field value if set, zero value otherwise.
func (o *Config) GetConfiguration() []ConfigConfigurationInner {
	if o == nil || isNil(o.Configuration) {
		var ret []ConfigConfigurationInner
		return ret
	}
	return o.Configuration
}

// GetConfigurationOk returns a tuple with the Configuration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Config) GetConfigurationOk() ([]ConfigConfigurationInner, bool) {
	if o == nil || isNil(o.Configuration) {
    return nil, false
	}
	return o.Configuration, true
}

// HasConfiguration returns a boolean if a field has been set.
func (o *Config) HasConfiguration() bool {
	if o != nil && !isNil(o.Configuration) {
		return true
	}

	return false
}

// SetConfiguration gets a reference to the given []ConfigConfigurationInner and assigns it to the Configuration field.
func (o *Config) SetConfiguration(v []ConfigConfigurationInner) {
	o.Configuration = v
}

// GetLdapConfiguration returns the LdapConfiguration field value if set, zero value otherwise.
func (o *Config) GetLdapConfiguration() ConfigLdapConfiguration {
	if o == nil || isNil(o.LdapConfiguration) {
		var ret ConfigLdapConfiguration
		return ret
	}
	return *o.LdapConfiguration
}

// GetLdapConfigurationOk returns a tuple with the LdapConfiguration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Config) GetLdapConfigurationOk() (*ConfigLdapConfiguration, bool) {
	if o == nil || isNil(o.LdapConfiguration) {
    return nil, false
	}
	return o.LdapConfiguration, true
}

// HasLdapConfiguration returns a boolean if a field has been set.
func (o *Config) HasLdapConfiguration() bool {
	if o != nil && !isNil(o.LdapConfiguration) {
		return true
	}

	return false
}

// SetLdapConfiguration gets a reference to the given ConfigLdapConfiguration and assigns it to the LdapConfiguration field.
func (o *Config) SetLdapConfiguration(v ConfigLdapConfiguration) {
	o.LdapConfiguration = &v
}

// GetLicensedata returns the Licensedata field value if set, zero value otherwise.
func (o *Config) GetLicensedata() string {
	if o == nil || isNil(o.Licensedata) {
		var ret string
		return ret
	}
	return *o.Licensedata
}

// GetLicensedataOk returns a tuple with the Licensedata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Config) GetLicensedataOk() (*string, bool) {
	if o == nil || isNil(o.Licensedata) {
    return nil, false
	}
	return o.Licensedata, true
}

// HasLicensedata returns a boolean if a field has been set.
func (o *Config) HasLicensedata() bool {
	if o != nil && !isNil(o.Licensedata) {
		return true
	}

	return false
}

// SetLicensedata gets a reference to the given string and assigns it to the Licensedata field.
func (o *Config) SetLicensedata(v string) {
	o.Licensedata = &v
}

func (o Config) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["operation"] = o.Operation
	}
	if !isNil(o.Hostname) {
		toSerialize["hostname"] = o.Hostname
	}
	if !isNil(o.Port) {
		toSerialize["port"] = o.Port
	}
	if !isNil(o.Configuration) {
		toSerialize["configuration"] = o.Configuration
	}
	if !isNil(o.LdapConfiguration) {
		toSerialize["ldap_configuration"] = o.LdapConfiguration
	}
	if !isNil(o.Licensedata) {
		toSerialize["licensedata"] = o.Licensedata
	}
	return json.Marshal(toSerialize)
}

type NullableConfig struct {
	value *Config
	isSet bool
}

func (v NullableConfig) Get() *Config {
	return v.value
}

func (v *NullableConfig) Set(val *Config) {
	v.value = val
	v.isSet = true
}

func (v NullableConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConfig(val *Config) *NullableConfig {
	return &NullableConfig{value: val, isSet: true}
}

func (v NullableConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


