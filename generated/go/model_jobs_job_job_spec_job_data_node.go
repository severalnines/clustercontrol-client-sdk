/*
Severalnines ClusterControl REST API (V2)

REST API (V2) specification for ClusterControl - AI Powered Database automation tool for multi/hybrid cloud database deployment.

API version: OpenAPI specification v1.0.0
Contact: sales@severalnines.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// JobsJobJobSpecJobDataNode struct for JobsJobJobSpecJobDataNode
type JobsJobJobSpecJobDataNode struct {
	BackendNameRo *string `json:"backend_name_ro,omitempty"`
	BackendNameRw *string `json:"backend_name_rw,omitempty"`
	DataRetention *string `json:"data_retention,omitempty"`
	DataRetentionSize *int32 `json:"data_retention_size,omitempty"`
	Hostname *string `json:"hostname,omitempty"`
	LbAdmin *string `json:"lb_admin,omitempty"`
	LbPassword *string `json:"lb_password,omitempty"`
	LbPolicy *string `json:"lb_policy,omitempty"`
	MaxConnectionBe *int32 `json:"max_connection_be,omitempty"`
	MaxConnectionFe *int32 `json:"max_connection_fe,omitempty"`
	Port *int32 `json:"port,omitempty"`
	RoPort *int32 `json:"ro_port,omitempty"`
	RwPort *int32 `json:"rw_port,omitempty"`
	RwSplitting *bool `json:"rw_splitting,omitempty"`
	StatsSocket *string `json:"stats_socket,omitempty"`
	TimeoutClient *int32 `json:"timeout_client,omitempty"`
	TimeoutServer *int32 `json:"timeout_server,omitempty"`
	XinetdAllowFrom *string `json:"xinetd_allow_from,omitempty"`
	ScrapeInterval *string `json:"scrape_interval,omitempty"`
	Configuration []JobsJobJobSpecJobDataNodeConfigurationInner `json:"configuration,omitempty"`
}

// NewJobsJobJobSpecJobDataNode instantiates a new JobsJobJobSpecJobDataNode object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewJobsJobJobSpecJobDataNode() *JobsJobJobSpecJobDataNode {
	this := JobsJobJobSpecJobDataNode{}
	return &this
}

// NewJobsJobJobSpecJobDataNodeWithDefaults instantiates a new JobsJobJobSpecJobDataNode object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewJobsJobJobSpecJobDataNodeWithDefaults() *JobsJobJobSpecJobDataNode {
	this := JobsJobJobSpecJobDataNode{}
	return &this
}

// GetBackendNameRo returns the BackendNameRo field value if set, zero value otherwise.
func (o *JobsJobJobSpecJobDataNode) GetBackendNameRo() string {
	if o == nil || isNil(o.BackendNameRo) {
		var ret string
		return ret
	}
	return *o.BackendNameRo
}

// GetBackendNameRoOk returns a tuple with the BackendNameRo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsJobJobSpecJobDataNode) GetBackendNameRoOk() (*string, bool) {
	if o == nil || isNil(o.BackendNameRo) {
    return nil, false
	}
	return o.BackendNameRo, true
}

// HasBackendNameRo returns a boolean if a field has been set.
func (o *JobsJobJobSpecJobDataNode) HasBackendNameRo() bool {
	if o != nil && !isNil(o.BackendNameRo) {
		return true
	}

	return false
}

// SetBackendNameRo gets a reference to the given string and assigns it to the BackendNameRo field.
func (o *JobsJobJobSpecJobDataNode) SetBackendNameRo(v string) {
	o.BackendNameRo = &v
}

// GetBackendNameRw returns the BackendNameRw field value if set, zero value otherwise.
func (o *JobsJobJobSpecJobDataNode) GetBackendNameRw() string {
	if o == nil || isNil(o.BackendNameRw) {
		var ret string
		return ret
	}
	return *o.BackendNameRw
}

// GetBackendNameRwOk returns a tuple with the BackendNameRw field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsJobJobSpecJobDataNode) GetBackendNameRwOk() (*string, bool) {
	if o == nil || isNil(o.BackendNameRw) {
    return nil, false
	}
	return o.BackendNameRw, true
}

// HasBackendNameRw returns a boolean if a field has been set.
func (o *JobsJobJobSpecJobDataNode) HasBackendNameRw() bool {
	if o != nil && !isNil(o.BackendNameRw) {
		return true
	}

	return false
}

// SetBackendNameRw gets a reference to the given string and assigns it to the BackendNameRw field.
func (o *JobsJobJobSpecJobDataNode) SetBackendNameRw(v string) {
	o.BackendNameRw = &v
}

// GetDataRetention returns the DataRetention field value if set, zero value otherwise.
func (o *JobsJobJobSpecJobDataNode) GetDataRetention() string {
	if o == nil || isNil(o.DataRetention) {
		var ret string
		return ret
	}
	return *o.DataRetention
}

// GetDataRetentionOk returns a tuple with the DataRetention field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsJobJobSpecJobDataNode) GetDataRetentionOk() (*string, bool) {
	if o == nil || isNil(o.DataRetention) {
    return nil, false
	}
	return o.DataRetention, true
}

// HasDataRetention returns a boolean if a field has been set.
func (o *JobsJobJobSpecJobDataNode) HasDataRetention() bool {
	if o != nil && !isNil(o.DataRetention) {
		return true
	}

	return false
}

// SetDataRetention gets a reference to the given string and assigns it to the DataRetention field.
func (o *JobsJobJobSpecJobDataNode) SetDataRetention(v string) {
	o.DataRetention = &v
}

// GetDataRetentionSize returns the DataRetentionSize field value if set, zero value otherwise.
func (o *JobsJobJobSpecJobDataNode) GetDataRetentionSize() int32 {
	if o == nil || isNil(o.DataRetentionSize) {
		var ret int32
		return ret
	}
	return *o.DataRetentionSize
}

// GetDataRetentionSizeOk returns a tuple with the DataRetentionSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsJobJobSpecJobDataNode) GetDataRetentionSizeOk() (*int32, bool) {
	if o == nil || isNil(o.DataRetentionSize) {
    return nil, false
	}
	return o.DataRetentionSize, true
}

// HasDataRetentionSize returns a boolean if a field has been set.
func (o *JobsJobJobSpecJobDataNode) HasDataRetentionSize() bool {
	if o != nil && !isNil(o.DataRetentionSize) {
		return true
	}

	return false
}

// SetDataRetentionSize gets a reference to the given int32 and assigns it to the DataRetentionSize field.
func (o *JobsJobJobSpecJobDataNode) SetDataRetentionSize(v int32) {
	o.DataRetentionSize = &v
}

// GetHostname returns the Hostname field value if set, zero value otherwise.
func (o *JobsJobJobSpecJobDataNode) GetHostname() string {
	if o == nil || isNil(o.Hostname) {
		var ret string
		return ret
	}
	return *o.Hostname
}

// GetHostnameOk returns a tuple with the Hostname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsJobJobSpecJobDataNode) GetHostnameOk() (*string, bool) {
	if o == nil || isNil(o.Hostname) {
    return nil, false
	}
	return o.Hostname, true
}

// HasHostname returns a boolean if a field has been set.
func (o *JobsJobJobSpecJobDataNode) HasHostname() bool {
	if o != nil && !isNil(o.Hostname) {
		return true
	}

	return false
}

// SetHostname gets a reference to the given string and assigns it to the Hostname field.
func (o *JobsJobJobSpecJobDataNode) SetHostname(v string) {
	o.Hostname = &v
}

// GetLbAdmin returns the LbAdmin field value if set, zero value otherwise.
func (o *JobsJobJobSpecJobDataNode) GetLbAdmin() string {
	if o == nil || isNil(o.LbAdmin) {
		var ret string
		return ret
	}
	return *o.LbAdmin
}

// GetLbAdminOk returns a tuple with the LbAdmin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsJobJobSpecJobDataNode) GetLbAdminOk() (*string, bool) {
	if o == nil || isNil(o.LbAdmin) {
    return nil, false
	}
	return o.LbAdmin, true
}

// HasLbAdmin returns a boolean if a field has been set.
func (o *JobsJobJobSpecJobDataNode) HasLbAdmin() bool {
	if o != nil && !isNil(o.LbAdmin) {
		return true
	}

	return false
}

// SetLbAdmin gets a reference to the given string and assigns it to the LbAdmin field.
func (o *JobsJobJobSpecJobDataNode) SetLbAdmin(v string) {
	o.LbAdmin = &v
}

// GetLbPassword returns the LbPassword field value if set, zero value otherwise.
func (o *JobsJobJobSpecJobDataNode) GetLbPassword() string {
	if o == nil || isNil(o.LbPassword) {
		var ret string
		return ret
	}
	return *o.LbPassword
}

// GetLbPasswordOk returns a tuple with the LbPassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsJobJobSpecJobDataNode) GetLbPasswordOk() (*string, bool) {
	if o == nil || isNil(o.LbPassword) {
    return nil, false
	}
	return o.LbPassword, true
}

// HasLbPassword returns a boolean if a field has been set.
func (o *JobsJobJobSpecJobDataNode) HasLbPassword() bool {
	if o != nil && !isNil(o.LbPassword) {
		return true
	}

	return false
}

// SetLbPassword gets a reference to the given string and assigns it to the LbPassword field.
func (o *JobsJobJobSpecJobDataNode) SetLbPassword(v string) {
	o.LbPassword = &v
}

// GetLbPolicy returns the LbPolicy field value if set, zero value otherwise.
func (o *JobsJobJobSpecJobDataNode) GetLbPolicy() string {
	if o == nil || isNil(o.LbPolicy) {
		var ret string
		return ret
	}
	return *o.LbPolicy
}

// GetLbPolicyOk returns a tuple with the LbPolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsJobJobSpecJobDataNode) GetLbPolicyOk() (*string, bool) {
	if o == nil || isNil(o.LbPolicy) {
    return nil, false
	}
	return o.LbPolicy, true
}

// HasLbPolicy returns a boolean if a field has been set.
func (o *JobsJobJobSpecJobDataNode) HasLbPolicy() bool {
	if o != nil && !isNil(o.LbPolicy) {
		return true
	}

	return false
}

// SetLbPolicy gets a reference to the given string and assigns it to the LbPolicy field.
func (o *JobsJobJobSpecJobDataNode) SetLbPolicy(v string) {
	o.LbPolicy = &v
}

// GetMaxConnectionBe returns the MaxConnectionBe field value if set, zero value otherwise.
func (o *JobsJobJobSpecJobDataNode) GetMaxConnectionBe() int32 {
	if o == nil || isNil(o.MaxConnectionBe) {
		var ret int32
		return ret
	}
	return *o.MaxConnectionBe
}

// GetMaxConnectionBeOk returns a tuple with the MaxConnectionBe field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsJobJobSpecJobDataNode) GetMaxConnectionBeOk() (*int32, bool) {
	if o == nil || isNil(o.MaxConnectionBe) {
    return nil, false
	}
	return o.MaxConnectionBe, true
}

// HasMaxConnectionBe returns a boolean if a field has been set.
func (o *JobsJobJobSpecJobDataNode) HasMaxConnectionBe() bool {
	if o != nil && !isNil(o.MaxConnectionBe) {
		return true
	}

	return false
}

// SetMaxConnectionBe gets a reference to the given int32 and assigns it to the MaxConnectionBe field.
func (o *JobsJobJobSpecJobDataNode) SetMaxConnectionBe(v int32) {
	o.MaxConnectionBe = &v
}

// GetMaxConnectionFe returns the MaxConnectionFe field value if set, zero value otherwise.
func (o *JobsJobJobSpecJobDataNode) GetMaxConnectionFe() int32 {
	if o == nil || isNil(o.MaxConnectionFe) {
		var ret int32
		return ret
	}
	return *o.MaxConnectionFe
}

// GetMaxConnectionFeOk returns a tuple with the MaxConnectionFe field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsJobJobSpecJobDataNode) GetMaxConnectionFeOk() (*int32, bool) {
	if o == nil || isNil(o.MaxConnectionFe) {
    return nil, false
	}
	return o.MaxConnectionFe, true
}

// HasMaxConnectionFe returns a boolean if a field has been set.
func (o *JobsJobJobSpecJobDataNode) HasMaxConnectionFe() bool {
	if o != nil && !isNil(o.MaxConnectionFe) {
		return true
	}

	return false
}

// SetMaxConnectionFe gets a reference to the given int32 and assigns it to the MaxConnectionFe field.
func (o *JobsJobJobSpecJobDataNode) SetMaxConnectionFe(v int32) {
	o.MaxConnectionFe = &v
}

// GetPort returns the Port field value if set, zero value otherwise.
func (o *JobsJobJobSpecJobDataNode) GetPort() int32 {
	if o == nil || isNil(o.Port) {
		var ret int32
		return ret
	}
	return *o.Port
}

// GetPortOk returns a tuple with the Port field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsJobJobSpecJobDataNode) GetPortOk() (*int32, bool) {
	if o == nil || isNil(o.Port) {
    return nil, false
	}
	return o.Port, true
}

// HasPort returns a boolean if a field has been set.
func (o *JobsJobJobSpecJobDataNode) HasPort() bool {
	if o != nil && !isNil(o.Port) {
		return true
	}

	return false
}

// SetPort gets a reference to the given int32 and assigns it to the Port field.
func (o *JobsJobJobSpecJobDataNode) SetPort(v int32) {
	o.Port = &v
}

// GetRoPort returns the RoPort field value if set, zero value otherwise.
func (o *JobsJobJobSpecJobDataNode) GetRoPort() int32 {
	if o == nil || isNil(o.RoPort) {
		var ret int32
		return ret
	}
	return *o.RoPort
}

// GetRoPortOk returns a tuple with the RoPort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsJobJobSpecJobDataNode) GetRoPortOk() (*int32, bool) {
	if o == nil || isNil(o.RoPort) {
    return nil, false
	}
	return o.RoPort, true
}

// HasRoPort returns a boolean if a field has been set.
func (o *JobsJobJobSpecJobDataNode) HasRoPort() bool {
	if o != nil && !isNil(o.RoPort) {
		return true
	}

	return false
}

// SetRoPort gets a reference to the given int32 and assigns it to the RoPort field.
func (o *JobsJobJobSpecJobDataNode) SetRoPort(v int32) {
	o.RoPort = &v
}

// GetRwPort returns the RwPort field value if set, zero value otherwise.
func (o *JobsJobJobSpecJobDataNode) GetRwPort() int32 {
	if o == nil || isNil(o.RwPort) {
		var ret int32
		return ret
	}
	return *o.RwPort
}

// GetRwPortOk returns a tuple with the RwPort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsJobJobSpecJobDataNode) GetRwPortOk() (*int32, bool) {
	if o == nil || isNil(o.RwPort) {
    return nil, false
	}
	return o.RwPort, true
}

// HasRwPort returns a boolean if a field has been set.
func (o *JobsJobJobSpecJobDataNode) HasRwPort() bool {
	if o != nil && !isNil(o.RwPort) {
		return true
	}

	return false
}

// SetRwPort gets a reference to the given int32 and assigns it to the RwPort field.
func (o *JobsJobJobSpecJobDataNode) SetRwPort(v int32) {
	o.RwPort = &v
}

// GetRwSplitting returns the RwSplitting field value if set, zero value otherwise.
func (o *JobsJobJobSpecJobDataNode) GetRwSplitting() bool {
	if o == nil || isNil(o.RwSplitting) {
		var ret bool
		return ret
	}
	return *o.RwSplitting
}

// GetRwSplittingOk returns a tuple with the RwSplitting field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsJobJobSpecJobDataNode) GetRwSplittingOk() (*bool, bool) {
	if o == nil || isNil(o.RwSplitting) {
    return nil, false
	}
	return o.RwSplitting, true
}

// HasRwSplitting returns a boolean if a field has been set.
func (o *JobsJobJobSpecJobDataNode) HasRwSplitting() bool {
	if o != nil && !isNil(o.RwSplitting) {
		return true
	}

	return false
}

// SetRwSplitting gets a reference to the given bool and assigns it to the RwSplitting field.
func (o *JobsJobJobSpecJobDataNode) SetRwSplitting(v bool) {
	o.RwSplitting = &v
}

// GetStatsSocket returns the StatsSocket field value if set, zero value otherwise.
func (o *JobsJobJobSpecJobDataNode) GetStatsSocket() string {
	if o == nil || isNil(o.StatsSocket) {
		var ret string
		return ret
	}
	return *o.StatsSocket
}

// GetStatsSocketOk returns a tuple with the StatsSocket field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsJobJobSpecJobDataNode) GetStatsSocketOk() (*string, bool) {
	if o == nil || isNil(o.StatsSocket) {
    return nil, false
	}
	return o.StatsSocket, true
}

// HasStatsSocket returns a boolean if a field has been set.
func (o *JobsJobJobSpecJobDataNode) HasStatsSocket() bool {
	if o != nil && !isNil(o.StatsSocket) {
		return true
	}

	return false
}

// SetStatsSocket gets a reference to the given string and assigns it to the StatsSocket field.
func (o *JobsJobJobSpecJobDataNode) SetStatsSocket(v string) {
	o.StatsSocket = &v
}

// GetTimeoutClient returns the TimeoutClient field value if set, zero value otherwise.
func (o *JobsJobJobSpecJobDataNode) GetTimeoutClient() int32 {
	if o == nil || isNil(o.TimeoutClient) {
		var ret int32
		return ret
	}
	return *o.TimeoutClient
}

// GetTimeoutClientOk returns a tuple with the TimeoutClient field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsJobJobSpecJobDataNode) GetTimeoutClientOk() (*int32, bool) {
	if o == nil || isNil(o.TimeoutClient) {
    return nil, false
	}
	return o.TimeoutClient, true
}

// HasTimeoutClient returns a boolean if a field has been set.
func (o *JobsJobJobSpecJobDataNode) HasTimeoutClient() bool {
	if o != nil && !isNil(o.TimeoutClient) {
		return true
	}

	return false
}

// SetTimeoutClient gets a reference to the given int32 and assigns it to the TimeoutClient field.
func (o *JobsJobJobSpecJobDataNode) SetTimeoutClient(v int32) {
	o.TimeoutClient = &v
}

// GetTimeoutServer returns the TimeoutServer field value if set, zero value otherwise.
func (o *JobsJobJobSpecJobDataNode) GetTimeoutServer() int32 {
	if o == nil || isNil(o.TimeoutServer) {
		var ret int32
		return ret
	}
	return *o.TimeoutServer
}

// GetTimeoutServerOk returns a tuple with the TimeoutServer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsJobJobSpecJobDataNode) GetTimeoutServerOk() (*int32, bool) {
	if o == nil || isNil(o.TimeoutServer) {
    return nil, false
	}
	return o.TimeoutServer, true
}

// HasTimeoutServer returns a boolean if a field has been set.
func (o *JobsJobJobSpecJobDataNode) HasTimeoutServer() bool {
	if o != nil && !isNil(o.TimeoutServer) {
		return true
	}

	return false
}

// SetTimeoutServer gets a reference to the given int32 and assigns it to the TimeoutServer field.
func (o *JobsJobJobSpecJobDataNode) SetTimeoutServer(v int32) {
	o.TimeoutServer = &v
}

// GetXinetdAllowFrom returns the XinetdAllowFrom field value if set, zero value otherwise.
func (o *JobsJobJobSpecJobDataNode) GetXinetdAllowFrom() string {
	if o == nil || isNil(o.XinetdAllowFrom) {
		var ret string
		return ret
	}
	return *o.XinetdAllowFrom
}

// GetXinetdAllowFromOk returns a tuple with the XinetdAllowFrom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsJobJobSpecJobDataNode) GetXinetdAllowFromOk() (*string, bool) {
	if o == nil || isNil(o.XinetdAllowFrom) {
    return nil, false
	}
	return o.XinetdAllowFrom, true
}

// HasXinetdAllowFrom returns a boolean if a field has been set.
func (o *JobsJobJobSpecJobDataNode) HasXinetdAllowFrom() bool {
	if o != nil && !isNil(o.XinetdAllowFrom) {
		return true
	}

	return false
}

// SetXinetdAllowFrom gets a reference to the given string and assigns it to the XinetdAllowFrom field.
func (o *JobsJobJobSpecJobDataNode) SetXinetdAllowFrom(v string) {
	o.XinetdAllowFrom = &v
}

// GetScrapeInterval returns the ScrapeInterval field value if set, zero value otherwise.
func (o *JobsJobJobSpecJobDataNode) GetScrapeInterval() string {
	if o == nil || isNil(o.ScrapeInterval) {
		var ret string
		return ret
	}
	return *o.ScrapeInterval
}

// GetScrapeIntervalOk returns a tuple with the ScrapeInterval field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsJobJobSpecJobDataNode) GetScrapeIntervalOk() (*string, bool) {
	if o == nil || isNil(o.ScrapeInterval) {
    return nil, false
	}
	return o.ScrapeInterval, true
}

// HasScrapeInterval returns a boolean if a field has been set.
func (o *JobsJobJobSpecJobDataNode) HasScrapeInterval() bool {
	if o != nil && !isNil(o.ScrapeInterval) {
		return true
	}

	return false
}

// SetScrapeInterval gets a reference to the given string and assigns it to the ScrapeInterval field.
func (o *JobsJobJobSpecJobDataNode) SetScrapeInterval(v string) {
	o.ScrapeInterval = &v
}

// GetConfiguration returns the Configuration field value if set, zero value otherwise.
func (o *JobsJobJobSpecJobDataNode) GetConfiguration() []JobsJobJobSpecJobDataNodeConfigurationInner {
	if o == nil || isNil(o.Configuration) {
		var ret []JobsJobJobSpecJobDataNodeConfigurationInner
		return ret
	}
	return o.Configuration
}

// GetConfigurationOk returns a tuple with the Configuration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsJobJobSpecJobDataNode) GetConfigurationOk() ([]JobsJobJobSpecJobDataNodeConfigurationInner, bool) {
	if o == nil || isNil(o.Configuration) {
    return nil, false
	}
	return o.Configuration, true
}

// HasConfiguration returns a boolean if a field has been set.
func (o *JobsJobJobSpecJobDataNode) HasConfiguration() bool {
	if o != nil && !isNil(o.Configuration) {
		return true
	}

	return false
}

// SetConfiguration gets a reference to the given []JobsJobJobSpecJobDataNodeConfigurationInner and assigns it to the Configuration field.
func (o *JobsJobJobSpecJobDataNode) SetConfiguration(v []JobsJobJobSpecJobDataNodeConfigurationInner) {
	o.Configuration = v
}

func (o JobsJobJobSpecJobDataNode) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.BackendNameRo) {
		toSerialize["backend_name_ro"] = o.BackendNameRo
	}
	if !isNil(o.BackendNameRw) {
		toSerialize["backend_name_rw"] = o.BackendNameRw
	}
	if !isNil(o.DataRetention) {
		toSerialize["data_retention"] = o.DataRetention
	}
	if !isNil(o.DataRetentionSize) {
		toSerialize["data_retention_size"] = o.DataRetentionSize
	}
	if !isNil(o.Hostname) {
		toSerialize["hostname"] = o.Hostname
	}
	if !isNil(o.LbAdmin) {
		toSerialize["lb_admin"] = o.LbAdmin
	}
	if !isNil(o.LbPassword) {
		toSerialize["lb_password"] = o.LbPassword
	}
	if !isNil(o.LbPolicy) {
		toSerialize["lb_policy"] = o.LbPolicy
	}
	if !isNil(o.MaxConnectionBe) {
		toSerialize["max_connection_be"] = o.MaxConnectionBe
	}
	if !isNil(o.MaxConnectionFe) {
		toSerialize["max_connection_fe"] = o.MaxConnectionFe
	}
	if !isNil(o.Port) {
		toSerialize["port"] = o.Port
	}
	if !isNil(o.RoPort) {
		toSerialize["ro_port"] = o.RoPort
	}
	if !isNil(o.RwPort) {
		toSerialize["rw_port"] = o.RwPort
	}
	if !isNil(o.RwSplitting) {
		toSerialize["rw_splitting"] = o.RwSplitting
	}
	if !isNil(o.StatsSocket) {
		toSerialize["stats_socket"] = o.StatsSocket
	}
	if !isNil(o.TimeoutClient) {
		toSerialize["timeout_client"] = o.TimeoutClient
	}
	if !isNil(o.TimeoutServer) {
		toSerialize["timeout_server"] = o.TimeoutServer
	}
	if !isNil(o.XinetdAllowFrom) {
		toSerialize["xinetd_allow_from"] = o.XinetdAllowFrom
	}
	if !isNil(o.ScrapeInterval) {
		toSerialize["scrape_interval"] = o.ScrapeInterval
	}
	if !isNil(o.Configuration) {
		toSerialize["configuration"] = o.Configuration
	}
	return json.Marshal(toSerialize)
}

type NullableJobsJobJobSpecJobDataNode struct {
	value *JobsJobJobSpecJobDataNode
	isSet bool
}

func (v NullableJobsJobJobSpecJobDataNode) Get() *JobsJobJobSpecJobDataNode {
	return v.value
}

func (v *NullableJobsJobJobSpecJobDataNode) Set(val *JobsJobJobSpecJobDataNode) {
	v.value = val
	v.isSet = true
}

func (v NullableJobsJobJobSpecJobDataNode) IsSet() bool {
	return v.isSet
}

func (v *NullableJobsJobJobSpecJobDataNode) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableJobsJobJobSpecJobDataNode(val *JobsJobJobSpecJobDataNode) *NullableJobsJobJobSpecJobDataNode {
	return &NullableJobsJobJobSpecJobDataNode{value: val, isSet: true}
}

func (v NullableJobsJobJobSpecJobDataNode) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableJobsJobJobSpecJobDataNode) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


