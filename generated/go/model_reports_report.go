/*
Severalnines ClusterControl REST API (V2)

REST API (V2) specification for ClusterControl - AI Powered Database automation tool for multi/hybrid cloud database deployment.

API version: OpenAPI specification v1.0.0
Contact: sales@severalnines.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ReportsReport type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ReportsReport{}

// ReportsReport struct for ReportsReport
type ReportsReport struct {
	ClassName *string `json:"class_name,omitempty"`
	// Email of recipient
	Recipients *string `json:"recipients,omitempty"`
	// TODO
	ReportType *string `json:"report_type,omitempty"`
	TextFormat *string `json:"text_format,omitempty"`
	ReportId *int32 `json:"report_id,omitempty"`
}

// NewReportsReport instantiates a new ReportsReport object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReportsReport() *ReportsReport {
	this := ReportsReport{}
	return &this
}

// NewReportsReportWithDefaults instantiates a new ReportsReport object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReportsReportWithDefaults() *ReportsReport {
	this := ReportsReport{}
	return &this
}

// GetClassName returns the ClassName field value if set, zero value otherwise.
func (o *ReportsReport) GetClassName() string {
	if o == nil || IsNil(o.ClassName) {
		var ret string
		return ret
	}
	return *o.ClassName
}

// GetClassNameOk returns a tuple with the ClassName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReportsReport) GetClassNameOk() (*string, bool) {
	if o == nil || IsNil(o.ClassName) {
		return nil, false
	}
	return o.ClassName, true
}

// HasClassName returns a boolean if a field has been set.
func (o *ReportsReport) HasClassName() bool {
	if o != nil && !IsNil(o.ClassName) {
		return true
	}

	return false
}

// SetClassName gets a reference to the given string and assigns it to the ClassName field.
func (o *ReportsReport) SetClassName(v string) {
	o.ClassName = &v
}

// GetRecipients returns the Recipients field value if set, zero value otherwise.
func (o *ReportsReport) GetRecipients() string {
	if o == nil || IsNil(o.Recipients) {
		var ret string
		return ret
	}
	return *o.Recipients
}

// GetRecipientsOk returns a tuple with the Recipients field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReportsReport) GetRecipientsOk() (*string, bool) {
	if o == nil || IsNil(o.Recipients) {
		return nil, false
	}
	return o.Recipients, true
}

// HasRecipients returns a boolean if a field has been set.
func (o *ReportsReport) HasRecipients() bool {
	if o != nil && !IsNil(o.Recipients) {
		return true
	}

	return false
}

// SetRecipients gets a reference to the given string and assigns it to the Recipients field.
func (o *ReportsReport) SetRecipients(v string) {
	o.Recipients = &v
}

// GetReportType returns the ReportType field value if set, zero value otherwise.
func (o *ReportsReport) GetReportType() string {
	if o == nil || IsNil(o.ReportType) {
		var ret string
		return ret
	}
	return *o.ReportType
}

// GetReportTypeOk returns a tuple with the ReportType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReportsReport) GetReportTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ReportType) {
		return nil, false
	}
	return o.ReportType, true
}

// HasReportType returns a boolean if a field has been set.
func (o *ReportsReport) HasReportType() bool {
	if o != nil && !IsNil(o.ReportType) {
		return true
	}

	return false
}

// SetReportType gets a reference to the given string and assigns it to the ReportType field.
func (o *ReportsReport) SetReportType(v string) {
	o.ReportType = &v
}

// GetTextFormat returns the TextFormat field value if set, zero value otherwise.
func (o *ReportsReport) GetTextFormat() string {
	if o == nil || IsNil(o.TextFormat) {
		var ret string
		return ret
	}
	return *o.TextFormat
}

// GetTextFormatOk returns a tuple with the TextFormat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReportsReport) GetTextFormatOk() (*string, bool) {
	if o == nil || IsNil(o.TextFormat) {
		return nil, false
	}
	return o.TextFormat, true
}

// HasTextFormat returns a boolean if a field has been set.
func (o *ReportsReport) HasTextFormat() bool {
	if o != nil && !IsNil(o.TextFormat) {
		return true
	}

	return false
}

// SetTextFormat gets a reference to the given string and assigns it to the TextFormat field.
func (o *ReportsReport) SetTextFormat(v string) {
	o.TextFormat = &v
}

// GetReportId returns the ReportId field value if set, zero value otherwise.
func (o *ReportsReport) GetReportId() int32 {
	if o == nil || IsNil(o.ReportId) {
		var ret int32
		return ret
	}
	return *o.ReportId
}

// GetReportIdOk returns a tuple with the ReportId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReportsReport) GetReportIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ReportId) {
		return nil, false
	}
	return o.ReportId, true
}

// HasReportId returns a boolean if a field has been set.
func (o *ReportsReport) HasReportId() bool {
	if o != nil && !IsNil(o.ReportId) {
		return true
	}

	return false
}

// SetReportId gets a reference to the given int32 and assigns it to the ReportId field.
func (o *ReportsReport) SetReportId(v int32) {
	o.ReportId = &v
}

func (o ReportsReport) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ReportsReport) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ClassName) {
		toSerialize["class_name"] = o.ClassName
	}
	if !IsNil(o.Recipients) {
		toSerialize["recipients"] = o.Recipients
	}
	if !IsNil(o.ReportType) {
		toSerialize["report_type"] = o.ReportType
	}
	if !IsNil(o.TextFormat) {
		toSerialize["text_format"] = o.TextFormat
	}
	if !IsNil(o.ReportId) {
		toSerialize["report_id"] = o.ReportId
	}
	return toSerialize, nil
}

type NullableReportsReport struct {
	value *ReportsReport
	isSet bool
}

func (v NullableReportsReport) Get() *ReportsReport {
	return v.value
}

func (v *NullableReportsReport) Set(val *ReportsReport) {
	v.value = val
	v.isSet = true
}

func (v NullableReportsReport) IsSet() bool {
	return v.isSet
}

func (v *NullableReportsReport) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReportsReport(val *ReportsReport) *NullableReportsReport {
	return &NullableReportsReport{value: val, isSet: true}
}

func (v NullableReportsReport) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReportsReport) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


