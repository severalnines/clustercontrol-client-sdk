# coding: utf-8

"""
    Severalnines ClusterControl REST API (V2)

    REST API (V2) specification for ClusterControl - AI Powered Database automation tool for multi/hybrid cloud database deployment.  # noqa: E501

    The version of the OpenAPI document: OpenAPI specification v1.0.0
    Contact: sales@severalnines.com
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import openapi_cc_client
from openapi_cc_client.models.jobs_job_job_spec_job_data_upload_backup_data_to_cloud_storage import JobsJobJobSpecJobDataUploadBackupDataToCloudStorage  # noqa: E501
from openapi_cc_client.rest import ApiException

class TestJobsJobJobSpecJobDataUploadBackupDataToCloudStorage(unittest.TestCase):
    """JobsJobJobSpecJobDataUploadBackupDataToCloudStorage unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test JobsJobJobSpecJobDataUploadBackupDataToCloudStorage
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = openapi_cc_client.models.jobs_job_job_spec_job_data_upload_backup_data_to_cloud_storage.JobsJobJobSpecJobDataUploadBackupDataToCloudStorage()  # noqa: E501
        if include_optional :
            return JobsJobJobSpecJobDataUploadBackupDataToCloudStorage(
                backup_retention = 56, 
                bucket = '', 
                cloud_storage_credentials_id = 56, 
                cloud_storage_provider = '', 
                cloud_storage_service = '', 
                delete_after_upload = True
            )
        else :
            return JobsJobJobSpecJobDataUploadBackupDataToCloudStorage(
        )

    def testJobsJobJobSpecJobDataUploadBackupDataToCloudStorage(self):
        """Test JobsJobJobSpecJobDataUploadBackupDataToCloudStorage"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
