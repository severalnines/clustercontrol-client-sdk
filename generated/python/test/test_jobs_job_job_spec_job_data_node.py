# coding: utf-8

"""
    Severalnines ClusterControl REST API (V2)

    REST API (V2) specification for ClusterControl - AI Powered Database automation tool for multi/hybrid cloud database deployment.  # noqa: E501

    The version of the OpenAPI document: OpenAPI specification v1.0.0
    Contact: sales@severalnines.com
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import openapi_cc_client
from openapi_cc_client.models.jobs_job_job_spec_job_data_node import JobsJobJobSpecJobDataNode  # noqa: E501
from openapi_cc_client.rest import ApiException

class TestJobsJobJobSpecJobDataNode(unittest.TestCase):
    """JobsJobJobSpecJobDataNode unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test JobsJobJobSpecJobDataNode
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = openapi_cc_client.models.jobs_job_job_spec_job_data_node.JobsJobJobSpecJobDataNode()  # noqa: E501
        if include_optional :
            return JobsJobJobSpecJobDataNode(
                backend_name_ro = '', 
                backend_name_rw = '', 
                data_retention = '', 
                data_retention_size = 56, 
                hostname = '', 
                lb_admin = '', 
                lb_password = '', 
                lb_policy = '', 
                max_connection_be = 56, 
                max_connection_fe = 56, 
                port = 56, 
                ro_port = 56, 
                rw_port = 56, 
                rw_splitting = True, 
                stats_socket = '', 
                timeout_client = 56, 
                timeout_server = 56, 
                xinetd_allow_from = '', 
                scrape_interval = '', 
                configuration = [
                    openapi_cc_client.models.jobs_job_job_spec_job_data_node_configuration_inner.Jobs_job_job_spec_job_data_node_configuration_inner(
                        arguments = '', 
                        job = 'node', 
                        scrape_interval = '', )
                    ]
            )
        else :
            return JobsJobJobSpecJobDataNode(
        )

    def testJobsJobJobSpecJobDataNode(self):
        """Test JobsJobJobSpecJobDataNode"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
