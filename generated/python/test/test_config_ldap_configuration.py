# coding: utf-8

"""
    Severalnines ClusterControl REST API (V2)

    REST API (V2) specification for ClusterControl - AI Powered Database automation tool for multi/hybrid cloud database deployment.  # noqa: E501

    The version of the OpenAPI document: OpenAPI specification v1.0.0
    Contact: sales@severalnines.com
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import openapi_cc_client
from openapi_cc_client.models.config_ldap_configuration import ConfigLdapConfiguration  # noqa: E501
from openapi_cc_client.rest import ApiException

class TestConfigLdapConfiguration(unittest.TestCase):
    """ConfigLdapConfiguration unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test ConfigLdapConfiguration
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = openapi_cc_client.models.config_ldap_configuration.ConfigLdapConfiguration()  # noqa: E501
        if include_optional :
            return ConfigLdapConfiguration(
                enabled = True, 
                ldap_admin_password = '', 
                ldap_admin_user = '', 
                ldap_group_search_root = '', 
                ldap_server_uri = '', 
                ldap_user_search_root = '', 
                group_mappings = [
                    openapi_cc_client.models.config_ldap_configuration_group_mappings_inner.Config_ldap_configuration_groupMappings_inner(
                        cmon_group_name = '', 
                        ldap_group_id = '', 
                        section_name = '', )
                    ], 
                ldap_settings = openapi_cc_client.models.config_ldap_configuration_ldap_settings.Config_ldap_configuration_ldapSettings(
                    ldap_email_attributes = '', 
                    ldap_group_class_name = '', 
                    ldap_group_id_attributes = '', 
                    ldap_group_name_attribute = '', 
                    ldap_member_attributes = '', 
                    ldap_network_timeout = '', 
                    ldap_protocol_version = '', 
                    ldap_query_time_limit = '', 
                    ldap_realname_attributes = '', 
                    ldap_user_class_name = '', 
                    ldap_username_attributes = '', ), 
                security = openapi_cc_client.models.config_ldap_configuration_security.Config_ldap_configuration_security(
                    ca_cert_file = '', 
                    cert_file = '', 
                    key_file = '', )
            )
        else :
            return ConfigLdapConfiguration(
        )

    def testConfigLdapConfiguration(self):
        """Test ConfigLdapConfiguration"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
