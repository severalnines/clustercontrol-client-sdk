/*
 * Severalnines ClusterControl REST API (V2)
 * REST API (V2) specification for ClusterControl - AI Powered Database automation tool for multi/hybrid cloud database deployment.
 *
 * The version of the OpenAPI document: OpenAPI specification v1.0.0
 * Contact: sales@severalnines.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.ccapi.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.ccapi.client.model.JobsJobJobSpecJobDataNodeConfigurationInner;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import org.openapitools.ccapi.client.JSON;

/**
 * JobsJobJobSpecJobDataNode
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-11-21T11:54:25.905584-05:00[America/New_York]")
public class JobsJobJobSpecJobDataNode {
  public static final String SERIALIZED_NAME_BACKEND_NAME_RO = "backend_name_ro";
  @SerializedName(SERIALIZED_NAME_BACKEND_NAME_RO)
  private String backendNameRo;

  public static final String SERIALIZED_NAME_BACKEND_NAME_RW = "backend_name_rw";
  @SerializedName(SERIALIZED_NAME_BACKEND_NAME_RW)
  private String backendNameRw;

  public static final String SERIALIZED_NAME_DATA_RETENTION = "data_retention";
  @SerializedName(SERIALIZED_NAME_DATA_RETENTION)
  private String dataRetention;

  public static final String SERIALIZED_NAME_DATA_RETENTION_SIZE = "data_retention_size";
  @SerializedName(SERIALIZED_NAME_DATA_RETENTION_SIZE)
  private Integer dataRetentionSize;

  public static final String SERIALIZED_NAME_HOSTNAME = "hostname";
  @SerializedName(SERIALIZED_NAME_HOSTNAME)
  private String hostname;

  public static final String SERIALIZED_NAME_LB_ADMIN = "lb_admin";
  @SerializedName(SERIALIZED_NAME_LB_ADMIN)
  private String lbAdmin;

  public static final String SERIALIZED_NAME_LB_PASSWORD = "lb_password";
  @SerializedName(SERIALIZED_NAME_LB_PASSWORD)
  private String lbPassword;

  public static final String SERIALIZED_NAME_LB_POLICY = "lb_policy";
  @SerializedName(SERIALIZED_NAME_LB_POLICY)
  private String lbPolicy;

  public static final String SERIALIZED_NAME_MAX_CONNECTION_BE = "max_connection_be";
  @SerializedName(SERIALIZED_NAME_MAX_CONNECTION_BE)
  private Integer maxConnectionBe;

  public static final String SERIALIZED_NAME_MAX_CONNECTION_FE = "max_connection_fe";
  @SerializedName(SERIALIZED_NAME_MAX_CONNECTION_FE)
  private Integer maxConnectionFe;

  public static final String SERIALIZED_NAME_PORT = "port";
  @SerializedName(SERIALIZED_NAME_PORT)
  private Integer port;

  public static final String SERIALIZED_NAME_RO_PORT = "ro_port";
  @SerializedName(SERIALIZED_NAME_RO_PORT)
  private Integer roPort;

  public static final String SERIALIZED_NAME_RW_PORT = "rw_port";
  @SerializedName(SERIALIZED_NAME_RW_PORT)
  private Integer rwPort;

  public static final String SERIALIZED_NAME_RW_SPLITTING = "rw_splitting";
  @SerializedName(SERIALIZED_NAME_RW_SPLITTING)
  private Boolean rwSplitting;

  public static final String SERIALIZED_NAME_STATS_SOCKET = "stats_socket";
  @SerializedName(SERIALIZED_NAME_STATS_SOCKET)
  private String statsSocket;

  public static final String SERIALIZED_NAME_TIMEOUT_CLIENT = "timeout_client";
  @SerializedName(SERIALIZED_NAME_TIMEOUT_CLIENT)
  private Integer timeoutClient;

  public static final String SERIALIZED_NAME_TIMEOUT_SERVER = "timeout_server";
  @SerializedName(SERIALIZED_NAME_TIMEOUT_SERVER)
  private Integer timeoutServer;

  public static final String SERIALIZED_NAME_XINETD_ALLOW_FROM = "xinetd_allow_from";
  @SerializedName(SERIALIZED_NAME_XINETD_ALLOW_FROM)
  private String xinetdAllowFrom;

  public static final String SERIALIZED_NAME_SCRAPE_INTERVAL = "scrape_interval";
  @SerializedName(SERIALIZED_NAME_SCRAPE_INTERVAL)
  private String scrapeInterval;

  public static final String SERIALIZED_NAME_CONFIGURATION = "configuration";
  @SerializedName(SERIALIZED_NAME_CONFIGURATION)
  private List<JobsJobJobSpecJobDataNodeConfigurationInner> _configuration = null;

  public JobsJobJobSpecJobDataNode() {
  }

  public JobsJobJobSpecJobDataNode backendNameRo(String backendNameRo) {
    
    this.backendNameRo = backendNameRo;
    return this;
  }

   /**
   * Get backendNameRo
   * @return backendNameRo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getBackendNameRo() {
    return backendNameRo;
  }


  public void setBackendNameRo(String backendNameRo) {
    this.backendNameRo = backendNameRo;
  }


  public JobsJobJobSpecJobDataNode backendNameRw(String backendNameRw) {
    
    this.backendNameRw = backendNameRw;
    return this;
  }

   /**
   * Get backendNameRw
   * @return backendNameRw
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getBackendNameRw() {
    return backendNameRw;
  }


  public void setBackendNameRw(String backendNameRw) {
    this.backendNameRw = backendNameRw;
  }


  public JobsJobJobSpecJobDataNode dataRetention(String dataRetention) {
    
    this.dataRetention = dataRetention;
    return this;
  }

   /**
   * Get dataRetention
   * @return dataRetention
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDataRetention() {
    return dataRetention;
  }


  public void setDataRetention(String dataRetention) {
    this.dataRetention = dataRetention;
  }


  public JobsJobJobSpecJobDataNode dataRetentionSize(Integer dataRetentionSize) {
    
    this.dataRetentionSize = dataRetentionSize;
    return this;
  }

   /**
   * Get dataRetentionSize
   * @return dataRetentionSize
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getDataRetentionSize() {
    return dataRetentionSize;
  }


  public void setDataRetentionSize(Integer dataRetentionSize) {
    this.dataRetentionSize = dataRetentionSize;
  }


  public JobsJobJobSpecJobDataNode hostname(String hostname) {
    
    this.hostname = hostname;
    return this;
  }

   /**
   * Get hostname
   * @return hostname
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getHostname() {
    return hostname;
  }


  public void setHostname(String hostname) {
    this.hostname = hostname;
  }


  public JobsJobJobSpecJobDataNode lbAdmin(String lbAdmin) {
    
    this.lbAdmin = lbAdmin;
    return this;
  }

   /**
   * Get lbAdmin
   * @return lbAdmin
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getLbAdmin() {
    return lbAdmin;
  }


  public void setLbAdmin(String lbAdmin) {
    this.lbAdmin = lbAdmin;
  }


  public JobsJobJobSpecJobDataNode lbPassword(String lbPassword) {
    
    this.lbPassword = lbPassword;
    return this;
  }

   /**
   * Get lbPassword
   * @return lbPassword
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getLbPassword() {
    return lbPassword;
  }


  public void setLbPassword(String lbPassword) {
    this.lbPassword = lbPassword;
  }


  public JobsJobJobSpecJobDataNode lbPolicy(String lbPolicy) {
    
    this.lbPolicy = lbPolicy;
    return this;
  }

   /**
   * Get lbPolicy
   * @return lbPolicy
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getLbPolicy() {
    return lbPolicy;
  }


  public void setLbPolicy(String lbPolicy) {
    this.lbPolicy = lbPolicy;
  }


  public JobsJobJobSpecJobDataNode maxConnectionBe(Integer maxConnectionBe) {
    
    this.maxConnectionBe = maxConnectionBe;
    return this;
  }

   /**
   * Get maxConnectionBe
   * @return maxConnectionBe
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getMaxConnectionBe() {
    return maxConnectionBe;
  }


  public void setMaxConnectionBe(Integer maxConnectionBe) {
    this.maxConnectionBe = maxConnectionBe;
  }


  public JobsJobJobSpecJobDataNode maxConnectionFe(Integer maxConnectionFe) {
    
    this.maxConnectionFe = maxConnectionFe;
    return this;
  }

   /**
   * Get maxConnectionFe
   * @return maxConnectionFe
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getMaxConnectionFe() {
    return maxConnectionFe;
  }


  public void setMaxConnectionFe(Integer maxConnectionFe) {
    this.maxConnectionFe = maxConnectionFe;
  }


  public JobsJobJobSpecJobDataNode port(Integer port) {
    
    this.port = port;
    return this;
  }

   /**
   * Get port
   * @return port
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getPort() {
    return port;
  }


  public void setPort(Integer port) {
    this.port = port;
  }


  public JobsJobJobSpecJobDataNode roPort(Integer roPort) {
    
    this.roPort = roPort;
    return this;
  }

   /**
   * Get roPort
   * @return roPort
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getRoPort() {
    return roPort;
  }


  public void setRoPort(Integer roPort) {
    this.roPort = roPort;
  }


  public JobsJobJobSpecJobDataNode rwPort(Integer rwPort) {
    
    this.rwPort = rwPort;
    return this;
  }

   /**
   * Get rwPort
   * @return rwPort
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getRwPort() {
    return rwPort;
  }


  public void setRwPort(Integer rwPort) {
    this.rwPort = rwPort;
  }


  public JobsJobJobSpecJobDataNode rwSplitting(Boolean rwSplitting) {
    
    this.rwSplitting = rwSplitting;
    return this;
  }

   /**
   * Get rwSplitting
   * @return rwSplitting
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getRwSplitting() {
    return rwSplitting;
  }


  public void setRwSplitting(Boolean rwSplitting) {
    this.rwSplitting = rwSplitting;
  }


  public JobsJobJobSpecJobDataNode statsSocket(String statsSocket) {
    
    this.statsSocket = statsSocket;
    return this;
  }

   /**
   * Get statsSocket
   * @return statsSocket
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getStatsSocket() {
    return statsSocket;
  }


  public void setStatsSocket(String statsSocket) {
    this.statsSocket = statsSocket;
  }


  public JobsJobJobSpecJobDataNode timeoutClient(Integer timeoutClient) {
    
    this.timeoutClient = timeoutClient;
    return this;
  }

   /**
   * Get timeoutClient
   * @return timeoutClient
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getTimeoutClient() {
    return timeoutClient;
  }


  public void setTimeoutClient(Integer timeoutClient) {
    this.timeoutClient = timeoutClient;
  }


  public JobsJobJobSpecJobDataNode timeoutServer(Integer timeoutServer) {
    
    this.timeoutServer = timeoutServer;
    return this;
  }

   /**
   * Get timeoutServer
   * @return timeoutServer
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getTimeoutServer() {
    return timeoutServer;
  }


  public void setTimeoutServer(Integer timeoutServer) {
    this.timeoutServer = timeoutServer;
  }


  public JobsJobJobSpecJobDataNode xinetdAllowFrom(String xinetdAllowFrom) {
    
    this.xinetdAllowFrom = xinetdAllowFrom;
    return this;
  }

   /**
   * Get xinetdAllowFrom
   * @return xinetdAllowFrom
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getXinetdAllowFrom() {
    return xinetdAllowFrom;
  }


  public void setXinetdAllowFrom(String xinetdAllowFrom) {
    this.xinetdAllowFrom = xinetdAllowFrom;
  }


  public JobsJobJobSpecJobDataNode scrapeInterval(String scrapeInterval) {
    
    this.scrapeInterval = scrapeInterval;
    return this;
  }

   /**
   * Get scrapeInterval
   * @return scrapeInterval
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getScrapeInterval() {
    return scrapeInterval;
  }


  public void setScrapeInterval(String scrapeInterval) {
    this.scrapeInterval = scrapeInterval;
  }


  public JobsJobJobSpecJobDataNode _configuration(List<JobsJobJobSpecJobDataNodeConfigurationInner> _configuration) {
    
    this._configuration = _configuration;
    return this;
  }

  public JobsJobJobSpecJobDataNode addConfigurationItem(JobsJobJobSpecJobDataNodeConfigurationInner _configurationItem) {
    if (this._configuration == null) {
      this._configuration = new ArrayList<>();
    }
    this._configuration.add(_configurationItem);
    return this;
  }

   /**
   * Get _configuration
   * @return _configuration
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<JobsJobJobSpecJobDataNodeConfigurationInner> getConfiguration() {
    return _configuration;
  }


  public void setConfiguration(List<JobsJobJobSpecJobDataNodeConfigurationInner> _configuration) {
    this._configuration = _configuration;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    JobsJobJobSpecJobDataNode jobsJobJobSpecJobDataNode = (JobsJobJobSpecJobDataNode) o;
    return Objects.equals(this.backendNameRo, jobsJobJobSpecJobDataNode.backendNameRo) &&
        Objects.equals(this.backendNameRw, jobsJobJobSpecJobDataNode.backendNameRw) &&
        Objects.equals(this.dataRetention, jobsJobJobSpecJobDataNode.dataRetention) &&
        Objects.equals(this.dataRetentionSize, jobsJobJobSpecJobDataNode.dataRetentionSize) &&
        Objects.equals(this.hostname, jobsJobJobSpecJobDataNode.hostname) &&
        Objects.equals(this.lbAdmin, jobsJobJobSpecJobDataNode.lbAdmin) &&
        Objects.equals(this.lbPassword, jobsJobJobSpecJobDataNode.lbPassword) &&
        Objects.equals(this.lbPolicy, jobsJobJobSpecJobDataNode.lbPolicy) &&
        Objects.equals(this.maxConnectionBe, jobsJobJobSpecJobDataNode.maxConnectionBe) &&
        Objects.equals(this.maxConnectionFe, jobsJobJobSpecJobDataNode.maxConnectionFe) &&
        Objects.equals(this.port, jobsJobJobSpecJobDataNode.port) &&
        Objects.equals(this.roPort, jobsJobJobSpecJobDataNode.roPort) &&
        Objects.equals(this.rwPort, jobsJobJobSpecJobDataNode.rwPort) &&
        Objects.equals(this.rwSplitting, jobsJobJobSpecJobDataNode.rwSplitting) &&
        Objects.equals(this.statsSocket, jobsJobJobSpecJobDataNode.statsSocket) &&
        Objects.equals(this.timeoutClient, jobsJobJobSpecJobDataNode.timeoutClient) &&
        Objects.equals(this.timeoutServer, jobsJobJobSpecJobDataNode.timeoutServer) &&
        Objects.equals(this.xinetdAllowFrom, jobsJobJobSpecJobDataNode.xinetdAllowFrom) &&
        Objects.equals(this.scrapeInterval, jobsJobJobSpecJobDataNode.scrapeInterval) &&
        Objects.equals(this._configuration, jobsJobJobSpecJobDataNode._configuration);
  }

  @Override
  public int hashCode() {
    return Objects.hash(backendNameRo, backendNameRw, dataRetention, dataRetentionSize, hostname, lbAdmin, lbPassword, lbPolicy, maxConnectionBe, maxConnectionFe, port, roPort, rwPort, rwSplitting, statsSocket, timeoutClient, timeoutServer, xinetdAllowFrom, scrapeInterval, _configuration);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class JobsJobJobSpecJobDataNode {\n");
    sb.append("    backendNameRo: ").append(toIndentedString(backendNameRo)).append("\n");
    sb.append("    backendNameRw: ").append(toIndentedString(backendNameRw)).append("\n");
    sb.append("    dataRetention: ").append(toIndentedString(dataRetention)).append("\n");
    sb.append("    dataRetentionSize: ").append(toIndentedString(dataRetentionSize)).append("\n");
    sb.append("    hostname: ").append(toIndentedString(hostname)).append("\n");
    sb.append("    lbAdmin: ").append(toIndentedString(lbAdmin)).append("\n");
    sb.append("    lbPassword: ").append(toIndentedString(lbPassword)).append("\n");
    sb.append("    lbPolicy: ").append(toIndentedString(lbPolicy)).append("\n");
    sb.append("    maxConnectionBe: ").append(toIndentedString(maxConnectionBe)).append("\n");
    sb.append("    maxConnectionFe: ").append(toIndentedString(maxConnectionFe)).append("\n");
    sb.append("    port: ").append(toIndentedString(port)).append("\n");
    sb.append("    roPort: ").append(toIndentedString(roPort)).append("\n");
    sb.append("    rwPort: ").append(toIndentedString(rwPort)).append("\n");
    sb.append("    rwSplitting: ").append(toIndentedString(rwSplitting)).append("\n");
    sb.append("    statsSocket: ").append(toIndentedString(statsSocket)).append("\n");
    sb.append("    timeoutClient: ").append(toIndentedString(timeoutClient)).append("\n");
    sb.append("    timeoutServer: ").append(toIndentedString(timeoutServer)).append("\n");
    sb.append("    xinetdAllowFrom: ").append(toIndentedString(xinetdAllowFrom)).append("\n");
    sb.append("    scrapeInterval: ").append(toIndentedString(scrapeInterval)).append("\n");
    sb.append("    _configuration: ").append(toIndentedString(_configuration)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("backend_name_ro");
    openapiFields.add("backend_name_rw");
    openapiFields.add("data_retention");
    openapiFields.add("data_retention_size");
    openapiFields.add("hostname");
    openapiFields.add("lb_admin");
    openapiFields.add("lb_password");
    openapiFields.add("lb_policy");
    openapiFields.add("max_connection_be");
    openapiFields.add("max_connection_fe");
    openapiFields.add("port");
    openapiFields.add("ro_port");
    openapiFields.add("rw_port");
    openapiFields.add("rw_splitting");
    openapiFields.add("stats_socket");
    openapiFields.add("timeout_client");
    openapiFields.add("timeout_server");
    openapiFields.add("xinetd_allow_from");
    openapiFields.add("scrape_interval");
    openapiFields.add("configuration");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to JobsJobJobSpecJobDataNode
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!JobsJobJobSpecJobDataNode.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in JobsJobJobSpecJobDataNode is not found in the empty JSON string", JobsJobJobSpecJobDataNode.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!JobsJobJobSpecJobDataNode.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `JobsJobJobSpecJobDataNode` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if ((jsonObj.get("backend_name_ro") != null && !jsonObj.get("backend_name_ro").isJsonNull()) && !jsonObj.get("backend_name_ro").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `backend_name_ro` to be a primitive type in the JSON string but got `%s`", jsonObj.get("backend_name_ro").toString()));
      }
      if ((jsonObj.get("backend_name_rw") != null && !jsonObj.get("backend_name_rw").isJsonNull()) && !jsonObj.get("backend_name_rw").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `backend_name_rw` to be a primitive type in the JSON string but got `%s`", jsonObj.get("backend_name_rw").toString()));
      }
      if ((jsonObj.get("data_retention") != null && !jsonObj.get("data_retention").isJsonNull()) && !jsonObj.get("data_retention").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `data_retention` to be a primitive type in the JSON string but got `%s`", jsonObj.get("data_retention").toString()));
      }
      if ((jsonObj.get("hostname") != null && !jsonObj.get("hostname").isJsonNull()) && !jsonObj.get("hostname").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `hostname` to be a primitive type in the JSON string but got `%s`", jsonObj.get("hostname").toString()));
      }
      if ((jsonObj.get("lb_admin") != null && !jsonObj.get("lb_admin").isJsonNull()) && !jsonObj.get("lb_admin").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `lb_admin` to be a primitive type in the JSON string but got `%s`", jsonObj.get("lb_admin").toString()));
      }
      if ((jsonObj.get("lb_password") != null && !jsonObj.get("lb_password").isJsonNull()) && !jsonObj.get("lb_password").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `lb_password` to be a primitive type in the JSON string but got `%s`", jsonObj.get("lb_password").toString()));
      }
      if ((jsonObj.get("lb_policy") != null && !jsonObj.get("lb_policy").isJsonNull()) && !jsonObj.get("lb_policy").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `lb_policy` to be a primitive type in the JSON string but got `%s`", jsonObj.get("lb_policy").toString()));
      }
      if ((jsonObj.get("stats_socket") != null && !jsonObj.get("stats_socket").isJsonNull()) && !jsonObj.get("stats_socket").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `stats_socket` to be a primitive type in the JSON string but got `%s`", jsonObj.get("stats_socket").toString()));
      }
      if ((jsonObj.get("xinetd_allow_from") != null && !jsonObj.get("xinetd_allow_from").isJsonNull()) && !jsonObj.get("xinetd_allow_from").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `xinetd_allow_from` to be a primitive type in the JSON string but got `%s`", jsonObj.get("xinetd_allow_from").toString()));
      }
      if ((jsonObj.get("scrape_interval") != null && !jsonObj.get("scrape_interval").isJsonNull()) && !jsonObj.get("scrape_interval").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `scrape_interval` to be a primitive type in the JSON string but got `%s`", jsonObj.get("scrape_interval").toString()));
      }
      if (jsonObj.get("configuration") != null && !jsonObj.get("configuration").isJsonNull()) {
        JsonArray jsonArray_configuration = jsonObj.getAsJsonArray("configuration");
        if (jsonArray_configuration != null) {
          // ensure the json data is an array
          if (!jsonObj.get("configuration").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `configuration` to be an array in the JSON string but got `%s`", jsonObj.get("configuration").toString()));
          }

          // validate the optional field `configuration` (array)
          for (int i = 0; i < jsonArray_configuration.size(); i++) {
            JobsJobJobSpecJobDataNodeConfigurationInner.validateJsonObject(jsonArray_configuration.get(i).getAsJsonObject());
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!JobsJobJobSpecJobDataNode.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'JobsJobJobSpecJobDataNode' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<JobsJobJobSpecJobDataNode> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(JobsJobJobSpecJobDataNode.class));

       return (TypeAdapter<T>) new TypeAdapter<JobsJobJobSpecJobDataNode>() {
           @Override
           public void write(JsonWriter out, JobsJobJobSpecJobDataNode value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public JobsJobJobSpecJobDataNode read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of JobsJobJobSpecJobDataNode given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of JobsJobJobSpecJobDataNode
  * @throws IOException if the JSON string is invalid with respect to JobsJobJobSpecJobDataNode
  */
  public static JobsJobJobSpecJobDataNode fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, JobsJobJobSpecJobDataNode.class);
  }

 /**
  * Convert an instance of JobsJobJobSpecJobDataNode to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

