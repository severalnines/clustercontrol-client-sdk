/*
 * Severalnines ClusterControl REST API (V2)
 * REST API (V2) specification for ClusterControl - AI Powered Database automation tool for multi/hybrid cloud database deployment.
 *
 * The version of the OpenAPI document: OpenAPI specification v1.0.0
 * Contact: sales@severalnines.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.ccapi.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import org.openapitools.ccapi.client.JSON;

/**
 * CloudCredentials
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-11-21T11:54:25.905584-05:00[America/New_York]")
public class CloudCredentials {
  public static final String SERIALIZED_NAME_ACCESS_KEY_ID = "access_key_id";
  @SerializedName(SERIALIZED_NAME_ACCESS_KEY_ID)
  private String accessKeyId;

  public static final String SERIALIZED_NAME_ACCESS_KEY_SECRET = "access_key_secret";
  @SerializedName(SERIALIZED_NAME_ACCESS_KEY_SECRET)
  private String accessKeySecret;

  public static final String SERIALIZED_NAME_ACCESS_KEY_REGION = "access_key_region";
  @SerializedName(SERIALIZED_NAME_ACCESS_KEY_REGION)
  private String accessKeyRegion;

  public CloudCredentials() {
  }

  public CloudCredentials accessKeyId(String accessKeyId) {
    
    this.accessKeyId = accessKeyId;
    return this;
  }

   /**
   * Get accessKeyId
   * @return accessKeyId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getAccessKeyId() {
    return accessKeyId;
  }


  public void setAccessKeyId(String accessKeyId) {
    this.accessKeyId = accessKeyId;
  }


  public CloudCredentials accessKeySecret(String accessKeySecret) {
    
    this.accessKeySecret = accessKeySecret;
    return this;
  }

   /**
   * Get accessKeySecret
   * @return accessKeySecret
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getAccessKeySecret() {
    return accessKeySecret;
  }


  public void setAccessKeySecret(String accessKeySecret) {
    this.accessKeySecret = accessKeySecret;
  }


  public CloudCredentials accessKeyRegion(String accessKeyRegion) {
    
    this.accessKeyRegion = accessKeyRegion;
    return this;
  }

   /**
   * Get accessKeyRegion
   * @return accessKeyRegion
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getAccessKeyRegion() {
    return accessKeyRegion;
  }


  public void setAccessKeyRegion(String accessKeyRegion) {
    this.accessKeyRegion = accessKeyRegion;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CloudCredentials cloudCredentials = (CloudCredentials) o;
    return Objects.equals(this.accessKeyId, cloudCredentials.accessKeyId) &&
        Objects.equals(this.accessKeySecret, cloudCredentials.accessKeySecret) &&
        Objects.equals(this.accessKeyRegion, cloudCredentials.accessKeyRegion);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accessKeyId, accessKeySecret, accessKeyRegion);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CloudCredentials {\n");
    sb.append("    accessKeyId: ").append(toIndentedString(accessKeyId)).append("\n");
    sb.append("    accessKeySecret: ").append(toIndentedString(accessKeySecret)).append("\n");
    sb.append("    accessKeyRegion: ").append(toIndentedString(accessKeyRegion)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("access_key_id");
    openapiFields.add("access_key_secret");
    openapiFields.add("access_key_region");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to CloudCredentials
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!CloudCredentials.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CloudCredentials is not found in the empty JSON string", CloudCredentials.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!CloudCredentials.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CloudCredentials` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if ((jsonObj.get("access_key_id") != null && !jsonObj.get("access_key_id").isJsonNull()) && !jsonObj.get("access_key_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `access_key_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("access_key_id").toString()));
      }
      if ((jsonObj.get("access_key_secret") != null && !jsonObj.get("access_key_secret").isJsonNull()) && !jsonObj.get("access_key_secret").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `access_key_secret` to be a primitive type in the JSON string but got `%s`", jsonObj.get("access_key_secret").toString()));
      }
      if ((jsonObj.get("access_key_region") != null && !jsonObj.get("access_key_region").isJsonNull()) && !jsonObj.get("access_key_region").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `access_key_region` to be a primitive type in the JSON string but got `%s`", jsonObj.get("access_key_region").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CloudCredentials.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CloudCredentials' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CloudCredentials> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CloudCredentials.class));

       return (TypeAdapter<T>) new TypeAdapter<CloudCredentials>() {
           @Override
           public void write(JsonWriter out, CloudCredentials value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CloudCredentials read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of CloudCredentials given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of CloudCredentials
  * @throws IOException if the JSON string is invalid with respect to CloudCredentials
  */
  public static CloudCredentials fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CloudCredentials.class);
  }

 /**
  * Convert an instance of CloudCredentials to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

