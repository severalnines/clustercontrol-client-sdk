/*
 * Severalnines ClusterControl REST API (V2)
 * REST API (V2) specification for ClusterControl - AI Powered Database automation tool for multi/hybrid cloud database deployment.
 *
 * The version of the OpenAPI document: OpenAPI specification v1.0.0
 * Contact: sales@severalnines.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.ccapi.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.ccapi.client.model.BackupScheduleJobJobDataVerifyBackup;
import org.openapitools.ccapi.client.model.JobsJobJobSpecJobDataConfigServers;
import org.openapitools.ccapi.client.model.JobsJobJobSpecJobDataConfigServersMembersInner;
import org.openapitools.ccapi.client.model.JobsJobJobSpecJobDataNode;
import org.openapitools.ccapi.client.model.JobsJobJobSpecJobDataNodeAdressesInner;
import org.openapitools.ccapi.client.model.JobsJobJobSpecJobDataNodesInner;
import org.openapitools.ccapi.client.model.JobsJobJobSpecJobDataReplicaSetsInner;
import org.openapitools.ccapi.client.model.JobsJobJobSpecJobDataTopology;
import org.openapitools.ccapi.client.model.JobsJobJobSpecJobDataUploadBackupDataToCloudStorage;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;


/**
 * Model tests for JobsJobJobSpecJobData
 */
public class JobsJobJobSpecJobDataTest {
    private final JobsJobJobSpecJobData model = new JobsJobJobSpecJobData();

    /**
     * Model tests for JobsJobJobSpecJobData
     */
    @Test
    public void testJobsJobJobSpecJobData() {
        // TODO: test JobsJobJobSpecJobData
    }

    /**
     * Test the property 'action'
     */
    @Test
    public void actionTest() {
        // TODO: test action
    }

    /**
     * Test the property 'addnode'
     */
    @Test
    public void addnodeTest() {
        // TODO: test addnode
    }

    /**
     * Test the property 'adminUsername'
     */
    @Test
    public void adminUsernameTest() {
        // TODO: test adminUsername
    }

    /**
     * Test the property 'adminUser'
     */
    @Test
    public void adminUserTest() {
        // TODO: test adminUser
    }

    /**
     * Test the property 'adminPassword'
     */
    @Test
    public void adminPasswordTest() {
        // TODO: test adminPassword
    }

    /**
     * Test the property 'auditEvents'
     */
    @Test
    public void auditEventsTest() {
        // TODO: test auditEvents
    }

    /**
     * Test the property 'archiveMode'
     */
    @Test
    public void archiveModeTest() {
        // TODO: test archiveMode
    }

    /**
     * Test the property 'backupid'
     */
    @Test
    public void backupidTest() {
        // TODO: test backupid
    }

    /**
     * Test the property 'backupId'
     */
    @Test
    public void backupIdTest() {
        // TODO: test backupId
    }

    /**
     * Test the property 'buildFromSource'
     */
    @Test
    public void buildFromSourceTest() {
        // TODO: test buildFromSource
    }

    /**
     * Test the property 'clusterName'
     */
    @Test
    public void clusterNameTest() {
        // TODO: test clusterName
    }

    /**
     * Test the property 'clusterid'
     */
    @Test
    public void clusteridTest() {
        // TODO: test clusterid
    }

    /**
     * Test the property 'clusterType'
     */
    @Test
    public void clusterTypeTest() {
        // TODO: test clusterType
    }

    /**
     * Test the property 'companyId'
     */
    @Test
    public void companyIdTest() {
        // TODO: test companyId
    }

    /**
     * Test the property 'configTemplate'
     */
    @Test
    public void configTemplateTest() {
        // TODO: test configTemplate
    }

    /**
     * Test the property 'backupFailover'
     */
    @Test
    public void backupFailoverTest() {
        // TODO: test backupFailover
    }

    /**
     * Test the property 'backupFailoverHost'
     */
    @Test
    public void backupFailoverHostTest() {
        // TODO: test backupFailoverHost
    }

    /**
     * Test the property 'backupMethod'
     */
    @Test
    public void backupMethodTest() {
        // TODO: test backupMethod
    }

    /**
     * Test the property 'backupMysqldumpType'
     */
    @Test
    public void backupMysqldumpTypeTest() {
        // TODO: test backupMysqldumpType
    }

    /**
     * Test the property 'backupIndividualSchemas'
     */
    @Test
    public void backupIndividualSchemasTest() {
        // TODO: test backupIndividualSchemas
    }

    /**
     * Test the property 'backupRetention'
     */
    @Test
    public void backupRetentionTest() {
        // TODO: test backupRetention
    }

    /**
     * Test the property 'extendedInsert'
     */
    @Test
    public void extendedInsertTest() {
        // TODO: test extendedInsert
    }

    /**
     * Test the property 'backupDir'
     */
    @Test
    public void backupDirTest() {
        // TODO: test backupDir
    }

    /**
     * Test the property 'backupsubdir'
     */
    @Test
    public void backupsubdirTest() {
        // TODO: test backupsubdir
    }

    /**
     * Test the property 'ccStorage'
     */
    @Test
    public void ccStorageTest() {
        // TODO: test ccStorage
    }

    /**
     * Test the property 'compression'
     */
    @Test
    public void compressionTest() {
        // TODO: test compression
    }

    /**
     * Test the property 'compressionLevel'
     */
    @Test
    public void compressionLevelTest() {
        // TODO: test compressionLevel
    }

    /**
     * Test the property 'dbDatabase'
     */
    @Test
    public void dbDatabaseTest() {
        // TODO: test dbDatabase
    }

    /**
     * Test the property 'dbPassword'
     */
    @Test
    public void dbPasswordTest() {
        // TODO: test dbPassword
    }

    /**
     * Test the property 'dbPrivs'
     */
    @Test
    public void dbPrivsTest() {
        // TODO: test dbPrivs
    }

    /**
     * Test the property 'dbUsername'
     */
    @Test
    public void dbUsernameTest() {
        // TODO: test dbUsername
    }

    /**
     * Test the property 'dataCenter'
     */
    @Test
    public void dataCenterTest() {
        // TODO: test dataCenter
    }

    /**
     * Test the property 'execUpgradeScript'
     */
    @Test
    public void execUpgradeScriptTest() {
        // TODO: test execUpgradeScript
    }

    /**
     * Test the property 'extended'
     */
    @Test
    public void extendedTest() {
        // TODO: test extended
    }

    /**
     * Test the property 'listeningPort'
     */
    @Test
    public void listeningPortTest() {
        // TODO: test listeningPort
    }

    /**
     * Test the property 'maskPasswords'
     */
    @Test
    public void maskPasswordsTest() {
        // TODO: test maskPasswords
    }

    /**
     * Test the property 'monitorPassword'
     */
    @Test
    public void monitorPasswordTest() {
        // TODO: test monitorPassword
    }

    /**
     * Test the property 'monitorUser'
     */
    @Test
    public void monitorUserTest() {
        // TODO: test monitorUser
    }

    /**
     * Test the property 'useClustering'
     */
    @Test
    public void useClusteringTest() {
        // TODO: test useClustering
    }

    /**
     * Test the property 'useRwSplit'
     */
    @Test
    public void useRwSplitTest() {
        // TODO: test useRwSplit
    }

    /**
     * Test the property 'hostname'
     */
    @Test
    public void hostnameTest() {
        // TODO: test hostname
    }

    /**
     * Test the property 'masterAddress'
     */
    @Test
    public void masterAddressTest() {
        // TODO: test masterAddress
    }

    /**
     * Test the property 'includeDatabases'
     */
    @Test
    public void includeDatabasesTest() {
        // TODO: test includeDatabases
    }

    /**
     * Test the property 'installTimescaledb'
     */
    @Test
    public void installTimescaledbTest() {
        // TODO: test installTimescaledb
    }

    /**
     * Test the property 'updateLb'
     */
    @Test
    public void updateLbTest() {
        // TODO: test updateLb
    }

    /**
     * Test the property 'usePackageForDataDir'
     */
    @Test
    public void usePackageForDataDirTest() {
        // TODO: test usePackageForDataDir
    }

    /**
     * Test the property 'encryptBackup'
     */
    @Test
    public void encryptBackupTest() {
        // TODO: test encryptBackup
    }

    /**
     * Test the property 'throttleRateNetbw'
     */
    @Test
    public void throttleRateNetbwTest() {
        // TODO: test throttleRateNetbw
    }

    /**
     * Test the property 'usePigz'
     */
    @Test
    public void usePigzTest() {
        // TODO: test usePigz
    }

    /**
     * Test the property 'useQpress'
     */
    @Test
    public void useQpressTest() {
        // TODO: test useQpress
    }

    /**
     * Test the property 'wsrepDesync'
     */
    @Test
    public void wsrepDesyncTest() {
        // TODO: test wsrepDesync
    }

    /**
     * Test the property 'xtrabackupBackupLocks'
     */
    @Test
    public void xtrabackupBackupLocksTest() {
        // TODO: test xtrabackupBackupLocks
    }

    /**
     * Test the property 'xtrabackupLockDdlPerTable'
     */
    @Test
    public void xtrabackupLockDdlPerTableTest() {
        // TODO: test xtrabackupLockDdlPerTable
    }

    /**
     * Test the property 'xtrabackupParallellism'
     */
    @Test
    public void xtrabackupParallellismTest() {
        // TODO: test xtrabackupParallellism
    }

    /**
     * Test the property 'verifyBackupDelay'
     */
    @Test
    public void verifyBackupDelayTest() {
        // TODO: test verifyBackupDelay
    }

    /**
     * Test the property 'dataDir'
     */
    @Test
    public void dataDirTest() {
        // TODO: test dataDir
    }

    /**
     * Test the property 'dbUser'
     */
    @Test
    public void dbUserTest() {
        // TODO: test dbUser
    }

    /**
     * Test the property 'disableFirewall'
     */
    @Test
    public void disableFirewallTest() {
        // TODO: test disableFirewall
    }

    /**
     * Test the property 'disableSelinux'
     */
    @Test
    public void disableSelinuxTest() {
        // TODO: test disableSelinux
    }

    /**
     * Test the property 'enableUninstall'
     */
    @Test
    public void enableUninstallTest() {
        // TODO: test enableUninstall
    }

    /**
     * Test the property 'generateToken'
     */
    @Test
    public void generateTokenTest() {
        // TODO: test generateToken
    }

    /**
     * Test the property 'installSoftware'
     */
    @Test
    public void installSoftwareTest() {
        // TODO: test installSoftware
    }

    /**
     * Test the property 'useInternalRepos'
     */
    @Test
    public void useInternalReposTest() {
        // TODO: test useInternalRepos
    }

    /**
     * Test the property 'localRepository'
     */
    @Test
    public void localRepositoryTest() {
        // TODO: test localRepository
    }

    /**
     * Test the property 'enableMysqlUninstall'
     */
    @Test
    public void enableMysqlUninstallTest() {
        // TODO: test enableMysqlUninstall
    }

    /**
     * Test the property 'mysqlSemiSync'
     */
    @Test
    public void mysqlSemiSyncTest() {
        // TODO: test mysqlSemiSync
    }

    /**
     * Test the property 'enableSsl'
     */
    @Test
    public void enableSslTest() {
        // TODO: test enableSsl
    }

    /**
     * Test the property 'mongosConfTemplate'
     */
    @Test
    public void mongosConfTemplateTest() {
        // TODO: test mongosConfTemplate
    }

    /**
     * Test the property 'mongodbAuthdb'
     */
    @Test
    public void mongodbAuthdbTest() {
        // TODO: test mongodbAuthdb
    }

    /**
     * Test the property 'nodeType'
     */
    @Test
    public void nodeTypeTest() {
        // TODO: test nodeType
    }

    /**
     * Test the property 'overwriteMysqlchk'
     */
    @Test
    public void overwriteMysqlchkTest() {
        // TODO: test overwriteMysqlchk
    }

    /**
     * Test the property 'port'
     */
    @Test
    public void portTest() {
        // TODO: test port
    }

    /**
     * Test the property 'sshKeyfile'
     */
    @Test
    public void sshKeyfileTest() {
        // TODO: test sshKeyfile
    }

    /**
     * Test the property 'sshPort'
     */
    @Test
    public void sshPortTest() {
        // TODO: test sshPort
    }

    /**
     * Test the property 'sshUser'
     */
    @Test
    public void sshUserTest() {
        // TODO: test sshUser
    }

    /**
     * Test the property 'sudoPassword'
     */
    @Test
    public void sudoPasswordTest() {
        // TODO: test sudoPassword
    }

    /**
     * Test the property 'userId'
     */
    @Test
    public void userIdTest() {
        // TODO: test userId
    }

    /**
     * Test the property 'vendor'
     */
    @Test
    public void vendorTest() {
        // TODO: test vendor
    }

    /**
     * Test the property 'type'
     */
    @Test
    public void typeTest() {
        // TODO: test type
    }

    /**
     * Test the property 'version'
     */
    @Test
    public void versionTest() {
        // TODO: test version
    }

    /**
     * Test the property 'softwarePackage'
     */
    @Test
    public void softwarePackageTest() {
        // TODO: test softwarePackage
    }

    /**
     * Test the property 'serverAddress'
     */
    @Test
    public void serverAddressTest() {
        // TODO: test serverAddress
    }

    /**
     * Test the property 'terminateDbServer'
     */
    @Test
    public void terminateDbServerTest() {
        // TODO: test terminateDbServer
    }

    /**
     * Test the property 'xtrabackupUseMemory'
     */
    @Test
    public void xtrabackupUseMemoryTest() {
        // TODO: test xtrabackupUseMemory
    }

    /**
     * Test the property 'initial'
     */
    @Test
    public void initialTest() {
        // TODO: test initial
    }

    /**
     * Test the property 'reboot'
     */
    @Test
    public void rebootTest() {
        // TODO: test reboot
    }

    /**
     * Test the property 'slaveAddress'
     */
    @Test
    public void slaveAddressTest() {
        // TODO: test slaveAddress
    }

    /**
     * Test the property 'force'
     */
    @Test
    public void forceTest() {
        // TODO: test force
    }

    /**
     * Test the property 'forceStop'
     */
    @Test
    public void forceStopTest() {
        // TODO: test forceStop
    }

    /**
     * Test the property 'stopTimeout'
     */
    @Test
    public void stopTimeoutTest() {
        // TODO: test stopTimeout
    }

    /**
     * Test the property 'pitrStopTime'
     */
    @Test
    public void pitrStopTimeTest() {
        // TODO: test pitrStopTime
    }

    /**
     * Test the property 'pitrStopLog'
     */
    @Test
    public void pitrStopLogTest() {
        // TODO: test pitrStopLog
    }

    /**
     * Test the property 'pitrStopPos'
     */
    @Test
    public void pitrStopPosTest() {
        // TODO: test pitrStopPos
    }

    /**
     * Test the property 'hostLocationUuid'
     */
    @Test
    public void hostLocationUuidTest() {
        // TODO: test hostLocationUuid
    }

    /**
     * Test the property 'bootstrap'
     */
    @Test
    public void bootstrapTest() {
        // TODO: test bootstrap
    }

    /**
     * Test the property 'snapshotLocaiton'
     */
    @Test
    public void snapshotLocaitonTest() {
        // TODO: test snapshotLocaiton
    }

    /**
     * Test the property 'snapshotRepository'
     */
    @Test
    public void snapshotRepositoryTest() {
        // TODO: test snapshotRepository
    }

    /**
     * Test the property 'storageHost'
     */
    @Test
    public void storageHostTest() {
        // TODO: test storageHost
    }

    /**
     * Test the property 'uploadBackupDataToCloudStorage'
     */
    @Test
    public void uploadBackupDataToCloudStorageTest() {
        // TODO: test uploadBackupDataToCloudStorage
    }

    /**
     * Test the property 'verifyBackup'
     */
    @Test
    public void verifyBackupTest() {
        // TODO: test verifyBackup
    }

    /**
     * Test the property 'configServers'
     */
    @Test
    public void configServersTest() {
        // TODO: test configServers
    }

    /**
     * Test the property 'mongosServers'
     */
    @Test
    public void mongosServersTest() {
        // TODO: test mongosServers
    }

    /**
     * Test the property 'node'
     */
    @Test
    public void nodeTest() {
        // TODO: test node
    }

    /**
     * Test the property 'nodes'
     */
    @Test
    public void nodesTest() {
        // TODO: test nodes
    }

    /**
     * Test the property 'nodeAdresses'
     */
    @Test
    public void nodeAdressesTest() {
        // TODO: test nodeAdresses
    }

    /**
     * Test the property 'topology'
     */
    @Test
    public void topologyTest() {
        // TODO: test topology
    }

    /**
     * Test the property 'replicaSets'
     */
    @Test
    public void replicaSetsTest() {
        // TODO: test replicaSets
    }

    /**
     * Test the property 'withTags'
     */
    @Test
    public void withTagsTest() {
        // TODO: test withTags
    }

}
