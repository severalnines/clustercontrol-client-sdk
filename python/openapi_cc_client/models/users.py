# coding: utf-8

"""
    Severalnines ClusterControl REST API (V2)

    REST API (V2) specification for ClusterControl - AI Powered Database automation tool for multi/hybrid cloud database deployment.

    The version of the OpenAPI document: OpenAPI specification v1.0.0
    Contact: sales@severalnines.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json


from typing import List, Optional
from pydantic import BaseModel, Field, StrictBool, StrictStr, conlist, validator
from openapi_cc_client.models.users_group import UsersGroup
from openapi_cc_client.models.users_user import UsersUser

class Users(BaseModel):
    """
    Users
    """
    operation: StrictStr = Field(...)
    create_group: Optional[StrictBool] = None
    new_password: Optional[StrictStr] = None
    old_password: Optional[StrictStr] = None
    group_name: Optional[StrictStr] = None
    replace_primary_group: Optional[StrictBool] = None
    with_tags: Optional[conlist(StrictStr)] = None
    user: Optional[UsersUser] = None
    group: Optional[UsersGroup] = None
    __properties = ["operation", "create_group", "new_password", "old_password", "group_name", "replace_primary_group", "with_tags", "user", "group"]

    @validator('operation')
    def operation_validate_enum(cls, value):
        """Validates the enum"""
        if value not in ('createUser', 'getUsers', 'setUser', 'disable', 'deleteUser', 'enable', 'changePassword', 'getKeys', 'addKey', 'deleteKey', 'createGroup', 'deleteGroup', 'getGroups', 'addToGroup', 'removeFromGroup', 'canCreateUser', 'canCreateGroup'):
            raise ValueError("must be one of enum values ('createUser', 'getUsers', 'setUser', 'disable', 'deleteUser', 'enable', 'changePassword', 'getKeys', 'addKey', 'deleteKey', 'createGroup', 'deleteGroup', 'getGroups', 'addToGroup', 'removeFromGroup', 'canCreateUser', 'canCreateGroup')")
        return value

    class Config:
        """Pydantic configuration"""
        allow_population_by_field_name = True
        validate_assignment = True

    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.dict(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> Users:
        """Create an instance of Users from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self):
        """Returns the dictionary representation of the model using alias"""
        _dict = self.dict(by_alias=True,
                          exclude={
                          },
                          exclude_none=True)
        # override the default output from pydantic by calling `to_dict()` of user
        if self.user:
            _dict['user'] = self.user.to_dict()
        # override the default output from pydantic by calling `to_dict()` of group
        if self.group:
            _dict['group'] = self.group.to_dict()
        return _dict

    @classmethod
    def from_dict(cls, obj: dict) -> Users:
        """Create an instance of Users from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return Users.parse_obj(obj)

        _obj = Users.parse_obj({
            "operation": obj.get("operation"),
            "create_group": obj.get("create_group"),
            "new_password": obj.get("new_password"),
            "old_password": obj.get("old_password"),
            "group_name": obj.get("group_name"),
            "replace_primary_group": obj.get("replace_primary_group"),
            "with_tags": obj.get("with_tags"),
            "user": UsersUser.from_dict(obj.get("user")) if obj.get("user") is not None else None,
            "group": UsersGroup.from_dict(obj.get("group")) if obj.get("group") is not None else None
        })
        return _obj


