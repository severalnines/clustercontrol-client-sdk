/*
Severalnines ClusterControl REST API (V2)

REST API (V2) specification for ClusterControl - AI Powered Database automation tool for multi/hybrid cloud database deployment.

API version: OpenAPI specification v1.0.0
Contact: sales@severalnines.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the Maintenance type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Maintenance{}

// Maintenance struct for Maintenance
type Maintenance struct {
	Operation string `json:"operation"`
	Pagesize *int32 `json:"pagesize,omitempty"`
	Page *int32 `json:"page,omitempty"`
	ClusterId *int32 `json:"cluster_id,omitempty"`
	Deadline *string `json:"deadline,omitempty"`
	Initiate *string `json:"initiate,omitempty"`
	Hostname *string `json:"hostname,omitempty"`
	UUID *string `json:"UUID,omitempty"`
	Reason *string `json:"reason,omitempty"`
}

type _Maintenance Maintenance

// NewMaintenance instantiates a new Maintenance object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMaintenance(operation string) *Maintenance {
	this := Maintenance{}
	this.Operation = operation
	return &this
}

// NewMaintenanceWithDefaults instantiates a new Maintenance object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMaintenanceWithDefaults() *Maintenance {
	this := Maintenance{}
	return &this
}

// GetOperation returns the Operation field value
func (o *Maintenance) GetOperation() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Operation
}

// GetOperationOk returns a tuple with the Operation field value
// and a boolean to check if the value has been set.
func (o *Maintenance) GetOperationOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Operation, true
}

// SetOperation sets field value
func (o *Maintenance) SetOperation(v string) {
	o.Operation = v
}

// GetPagesize returns the Pagesize field value if set, zero value otherwise.
func (o *Maintenance) GetPagesize() int32 {
	if o == nil || IsNil(o.Pagesize) {
		var ret int32
		return ret
	}
	return *o.Pagesize
}

// GetPagesizeOk returns a tuple with the Pagesize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Maintenance) GetPagesizeOk() (*int32, bool) {
	if o == nil || IsNil(o.Pagesize) {
		return nil, false
	}
	return o.Pagesize, true
}

// HasPagesize returns a boolean if a field has been set.
func (o *Maintenance) HasPagesize() bool {
	if o != nil && !IsNil(o.Pagesize) {
		return true
	}

	return false
}

// SetPagesize gets a reference to the given int32 and assigns it to the Pagesize field.
func (o *Maintenance) SetPagesize(v int32) {
	o.Pagesize = &v
}

// GetPage returns the Page field value if set, zero value otherwise.
func (o *Maintenance) GetPage() int32 {
	if o == nil || IsNil(o.Page) {
		var ret int32
		return ret
	}
	return *o.Page
}

// GetPageOk returns a tuple with the Page field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Maintenance) GetPageOk() (*int32, bool) {
	if o == nil || IsNil(o.Page) {
		return nil, false
	}
	return o.Page, true
}

// HasPage returns a boolean if a field has been set.
func (o *Maintenance) HasPage() bool {
	if o != nil && !IsNil(o.Page) {
		return true
	}

	return false
}

// SetPage gets a reference to the given int32 and assigns it to the Page field.
func (o *Maintenance) SetPage(v int32) {
	o.Page = &v
}

// GetClusterId returns the ClusterId field value if set, zero value otherwise.
func (o *Maintenance) GetClusterId() int32 {
	if o == nil || IsNil(o.ClusterId) {
		var ret int32
		return ret
	}
	return *o.ClusterId
}

// GetClusterIdOk returns a tuple with the ClusterId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Maintenance) GetClusterIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ClusterId) {
		return nil, false
	}
	return o.ClusterId, true
}

// HasClusterId returns a boolean if a field has been set.
func (o *Maintenance) HasClusterId() bool {
	if o != nil && !IsNil(o.ClusterId) {
		return true
	}

	return false
}

// SetClusterId gets a reference to the given int32 and assigns it to the ClusterId field.
func (o *Maintenance) SetClusterId(v int32) {
	o.ClusterId = &v
}

// GetDeadline returns the Deadline field value if set, zero value otherwise.
func (o *Maintenance) GetDeadline() string {
	if o == nil || IsNil(o.Deadline) {
		var ret string
		return ret
	}
	return *o.Deadline
}

// GetDeadlineOk returns a tuple with the Deadline field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Maintenance) GetDeadlineOk() (*string, bool) {
	if o == nil || IsNil(o.Deadline) {
		return nil, false
	}
	return o.Deadline, true
}

// HasDeadline returns a boolean if a field has been set.
func (o *Maintenance) HasDeadline() bool {
	if o != nil && !IsNil(o.Deadline) {
		return true
	}

	return false
}

// SetDeadline gets a reference to the given string and assigns it to the Deadline field.
func (o *Maintenance) SetDeadline(v string) {
	o.Deadline = &v
}

// GetInitiate returns the Initiate field value if set, zero value otherwise.
func (o *Maintenance) GetInitiate() string {
	if o == nil || IsNil(o.Initiate) {
		var ret string
		return ret
	}
	return *o.Initiate
}

// GetInitiateOk returns a tuple with the Initiate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Maintenance) GetInitiateOk() (*string, bool) {
	if o == nil || IsNil(o.Initiate) {
		return nil, false
	}
	return o.Initiate, true
}

// HasInitiate returns a boolean if a field has been set.
func (o *Maintenance) HasInitiate() bool {
	if o != nil && !IsNil(o.Initiate) {
		return true
	}

	return false
}

// SetInitiate gets a reference to the given string and assigns it to the Initiate field.
func (o *Maintenance) SetInitiate(v string) {
	o.Initiate = &v
}

// GetHostname returns the Hostname field value if set, zero value otherwise.
func (o *Maintenance) GetHostname() string {
	if o == nil || IsNil(o.Hostname) {
		var ret string
		return ret
	}
	return *o.Hostname
}

// GetHostnameOk returns a tuple with the Hostname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Maintenance) GetHostnameOk() (*string, bool) {
	if o == nil || IsNil(o.Hostname) {
		return nil, false
	}
	return o.Hostname, true
}

// HasHostname returns a boolean if a field has been set.
func (o *Maintenance) HasHostname() bool {
	if o != nil && !IsNil(o.Hostname) {
		return true
	}

	return false
}

// SetHostname gets a reference to the given string and assigns it to the Hostname field.
func (o *Maintenance) SetHostname(v string) {
	o.Hostname = &v
}

// GetUUID returns the UUID field value if set, zero value otherwise.
func (o *Maintenance) GetUUID() string {
	if o == nil || IsNil(o.UUID) {
		var ret string
		return ret
	}
	return *o.UUID
}

// GetUUIDOk returns a tuple with the UUID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Maintenance) GetUUIDOk() (*string, bool) {
	if o == nil || IsNil(o.UUID) {
		return nil, false
	}
	return o.UUID, true
}

// HasUUID returns a boolean if a field has been set.
func (o *Maintenance) HasUUID() bool {
	if o != nil && !IsNil(o.UUID) {
		return true
	}

	return false
}

// SetUUID gets a reference to the given string and assigns it to the UUID field.
func (o *Maintenance) SetUUID(v string) {
	o.UUID = &v
}

// GetReason returns the Reason field value if set, zero value otherwise.
func (o *Maintenance) GetReason() string {
	if o == nil || IsNil(o.Reason) {
		var ret string
		return ret
	}
	return *o.Reason
}

// GetReasonOk returns a tuple with the Reason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Maintenance) GetReasonOk() (*string, bool) {
	if o == nil || IsNil(o.Reason) {
		return nil, false
	}
	return o.Reason, true
}

// HasReason returns a boolean if a field has been set.
func (o *Maintenance) HasReason() bool {
	if o != nil && !IsNil(o.Reason) {
		return true
	}

	return false
}

// SetReason gets a reference to the given string and assigns it to the Reason field.
func (o *Maintenance) SetReason(v string) {
	o.Reason = &v
}

func (o Maintenance) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Maintenance) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["operation"] = o.Operation
	if !IsNil(o.Pagesize) {
		toSerialize["pagesize"] = o.Pagesize
	}
	if !IsNil(o.Page) {
		toSerialize["page"] = o.Page
	}
	if !IsNil(o.ClusterId) {
		toSerialize["cluster_id"] = o.ClusterId
	}
	if !IsNil(o.Deadline) {
		toSerialize["deadline"] = o.Deadline
	}
	if !IsNil(o.Initiate) {
		toSerialize["initiate"] = o.Initiate
	}
	if !IsNil(o.Hostname) {
		toSerialize["hostname"] = o.Hostname
	}
	if !IsNil(o.UUID) {
		toSerialize["UUID"] = o.UUID
	}
	if !IsNil(o.Reason) {
		toSerialize["reason"] = o.Reason
	}
	return toSerialize, nil
}

func (o *Maintenance) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"operation",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varMaintenance := _Maintenance{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varMaintenance)

	if err != nil {
		return err
	}

	*o = Maintenance(varMaintenance)

	return err
}

type NullableMaintenance struct {
	value *Maintenance
	isSet bool
}

func (v NullableMaintenance) Get() *Maintenance {
	return v.value
}

func (v *NullableMaintenance) Set(val *Maintenance) {
	v.value = val
	v.isSet = true
}

func (v NullableMaintenance) IsSet() bool {
	return v.isSet
}

func (v *NullableMaintenance) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMaintenance(val *Maintenance) *NullableMaintenance {
	return &NullableMaintenance{value: val, isSet: true}
}

func (v NullableMaintenance) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMaintenance) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


