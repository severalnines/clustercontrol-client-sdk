/*
Severalnines ClusterControl REST API (V2)

REST API (V2) specification for ClusterControl - AI Powered Database automation tool for multi/hybrid cloud database deployment.

API version: OpenAPI specification v1.0.0
Contact: sales@severalnines.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// BackupScheduleJobJobData struct for BackupScheduleJobJobData
type BackupScheduleJobJobData struct {
	Description *string `json:"description,omitempty"`
	BackupFailover *bool `json:"backup_failover,omitempty"`
	BackupFailoverHost *string `json:"backup_failover_host,omitempty"`
	BackupMethod *string `json:"backup_method,omitempty"`
	BackupRetention *int32 `json:"backup_retention,omitempty"`
	Backupdir *string `json:"backupdir,omitempty"`
	Backupsubdir *string `json:"backupsubdir,omitempty"`
	CcStorage *string `json:"cc_storage,omitempty"`
	Compression *bool `json:"compression,omitempty"`
	CompresionLevel *int32 `json:"compresion_level,omitempty"`
	EncryptBackup *bool `json:"encrypt_backup,omitempty"`
	Hostname *string `json:"hostname,omitempty"`
	Port *int32 `json:"port,omitempty"`
	VerifyBackupDelay *int32 `json:"verify_backup_delay,omitempty"`
	VerifyBackup *BackupScheduleJobJobDataVerifyBackup `json:"verify_backup,omitempty"`
}

// NewBackupScheduleJobJobData instantiates a new BackupScheduleJobJobData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBackupScheduleJobJobData() *BackupScheduleJobJobData {
	this := BackupScheduleJobJobData{}
	return &this
}

// NewBackupScheduleJobJobDataWithDefaults instantiates a new BackupScheduleJobJobData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBackupScheduleJobJobDataWithDefaults() *BackupScheduleJobJobData {
	this := BackupScheduleJobJobData{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *BackupScheduleJobJobData) GetDescription() string {
	if o == nil || isNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupScheduleJobJobData) GetDescriptionOk() (*string, bool) {
	if o == nil || isNil(o.Description) {
    return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *BackupScheduleJobJobData) HasDescription() bool {
	if o != nil && !isNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *BackupScheduleJobJobData) SetDescription(v string) {
	o.Description = &v
}

// GetBackupFailover returns the BackupFailover field value if set, zero value otherwise.
func (o *BackupScheduleJobJobData) GetBackupFailover() bool {
	if o == nil || isNil(o.BackupFailover) {
		var ret bool
		return ret
	}
	return *o.BackupFailover
}

// GetBackupFailoverOk returns a tuple with the BackupFailover field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupScheduleJobJobData) GetBackupFailoverOk() (*bool, bool) {
	if o == nil || isNil(o.BackupFailover) {
    return nil, false
	}
	return o.BackupFailover, true
}

// HasBackupFailover returns a boolean if a field has been set.
func (o *BackupScheduleJobJobData) HasBackupFailover() bool {
	if o != nil && !isNil(o.BackupFailover) {
		return true
	}

	return false
}

// SetBackupFailover gets a reference to the given bool and assigns it to the BackupFailover field.
func (o *BackupScheduleJobJobData) SetBackupFailover(v bool) {
	o.BackupFailover = &v
}

// GetBackupFailoverHost returns the BackupFailoverHost field value if set, zero value otherwise.
func (o *BackupScheduleJobJobData) GetBackupFailoverHost() string {
	if o == nil || isNil(o.BackupFailoverHost) {
		var ret string
		return ret
	}
	return *o.BackupFailoverHost
}

// GetBackupFailoverHostOk returns a tuple with the BackupFailoverHost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupScheduleJobJobData) GetBackupFailoverHostOk() (*string, bool) {
	if o == nil || isNil(o.BackupFailoverHost) {
    return nil, false
	}
	return o.BackupFailoverHost, true
}

// HasBackupFailoverHost returns a boolean if a field has been set.
func (o *BackupScheduleJobJobData) HasBackupFailoverHost() bool {
	if o != nil && !isNil(o.BackupFailoverHost) {
		return true
	}

	return false
}

// SetBackupFailoverHost gets a reference to the given string and assigns it to the BackupFailoverHost field.
func (o *BackupScheduleJobJobData) SetBackupFailoverHost(v string) {
	o.BackupFailoverHost = &v
}

// GetBackupMethod returns the BackupMethod field value if set, zero value otherwise.
func (o *BackupScheduleJobJobData) GetBackupMethod() string {
	if o == nil || isNil(o.BackupMethod) {
		var ret string
		return ret
	}
	return *o.BackupMethod
}

// GetBackupMethodOk returns a tuple with the BackupMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupScheduleJobJobData) GetBackupMethodOk() (*string, bool) {
	if o == nil || isNil(o.BackupMethod) {
    return nil, false
	}
	return o.BackupMethod, true
}

// HasBackupMethod returns a boolean if a field has been set.
func (o *BackupScheduleJobJobData) HasBackupMethod() bool {
	if o != nil && !isNil(o.BackupMethod) {
		return true
	}

	return false
}

// SetBackupMethod gets a reference to the given string and assigns it to the BackupMethod field.
func (o *BackupScheduleJobJobData) SetBackupMethod(v string) {
	o.BackupMethod = &v
}

// GetBackupRetention returns the BackupRetention field value if set, zero value otherwise.
func (o *BackupScheduleJobJobData) GetBackupRetention() int32 {
	if o == nil || isNil(o.BackupRetention) {
		var ret int32
		return ret
	}
	return *o.BackupRetention
}

// GetBackupRetentionOk returns a tuple with the BackupRetention field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupScheduleJobJobData) GetBackupRetentionOk() (*int32, bool) {
	if o == nil || isNil(o.BackupRetention) {
    return nil, false
	}
	return o.BackupRetention, true
}

// HasBackupRetention returns a boolean if a field has been set.
func (o *BackupScheduleJobJobData) HasBackupRetention() bool {
	if o != nil && !isNil(o.BackupRetention) {
		return true
	}

	return false
}

// SetBackupRetention gets a reference to the given int32 and assigns it to the BackupRetention field.
func (o *BackupScheduleJobJobData) SetBackupRetention(v int32) {
	o.BackupRetention = &v
}

// GetBackupdir returns the Backupdir field value if set, zero value otherwise.
func (o *BackupScheduleJobJobData) GetBackupdir() string {
	if o == nil || isNil(o.Backupdir) {
		var ret string
		return ret
	}
	return *o.Backupdir
}

// GetBackupdirOk returns a tuple with the Backupdir field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupScheduleJobJobData) GetBackupdirOk() (*string, bool) {
	if o == nil || isNil(o.Backupdir) {
    return nil, false
	}
	return o.Backupdir, true
}

// HasBackupdir returns a boolean if a field has been set.
func (o *BackupScheduleJobJobData) HasBackupdir() bool {
	if o != nil && !isNil(o.Backupdir) {
		return true
	}

	return false
}

// SetBackupdir gets a reference to the given string and assigns it to the Backupdir field.
func (o *BackupScheduleJobJobData) SetBackupdir(v string) {
	o.Backupdir = &v
}

// GetBackupsubdir returns the Backupsubdir field value if set, zero value otherwise.
func (o *BackupScheduleJobJobData) GetBackupsubdir() string {
	if o == nil || isNil(o.Backupsubdir) {
		var ret string
		return ret
	}
	return *o.Backupsubdir
}

// GetBackupsubdirOk returns a tuple with the Backupsubdir field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupScheduleJobJobData) GetBackupsubdirOk() (*string, bool) {
	if o == nil || isNil(o.Backupsubdir) {
    return nil, false
	}
	return o.Backupsubdir, true
}

// HasBackupsubdir returns a boolean if a field has been set.
func (o *BackupScheduleJobJobData) HasBackupsubdir() bool {
	if o != nil && !isNil(o.Backupsubdir) {
		return true
	}

	return false
}

// SetBackupsubdir gets a reference to the given string and assigns it to the Backupsubdir field.
func (o *BackupScheduleJobJobData) SetBackupsubdir(v string) {
	o.Backupsubdir = &v
}

// GetCcStorage returns the CcStorage field value if set, zero value otherwise.
func (o *BackupScheduleJobJobData) GetCcStorage() string {
	if o == nil || isNil(o.CcStorage) {
		var ret string
		return ret
	}
	return *o.CcStorage
}

// GetCcStorageOk returns a tuple with the CcStorage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupScheduleJobJobData) GetCcStorageOk() (*string, bool) {
	if o == nil || isNil(o.CcStorage) {
    return nil, false
	}
	return o.CcStorage, true
}

// HasCcStorage returns a boolean if a field has been set.
func (o *BackupScheduleJobJobData) HasCcStorage() bool {
	if o != nil && !isNil(o.CcStorage) {
		return true
	}

	return false
}

// SetCcStorage gets a reference to the given string and assigns it to the CcStorage field.
func (o *BackupScheduleJobJobData) SetCcStorage(v string) {
	o.CcStorage = &v
}

// GetCompression returns the Compression field value if set, zero value otherwise.
func (o *BackupScheduleJobJobData) GetCompression() bool {
	if o == nil || isNil(o.Compression) {
		var ret bool
		return ret
	}
	return *o.Compression
}

// GetCompressionOk returns a tuple with the Compression field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupScheduleJobJobData) GetCompressionOk() (*bool, bool) {
	if o == nil || isNil(o.Compression) {
    return nil, false
	}
	return o.Compression, true
}

// HasCompression returns a boolean if a field has been set.
func (o *BackupScheduleJobJobData) HasCompression() bool {
	if o != nil && !isNil(o.Compression) {
		return true
	}

	return false
}

// SetCompression gets a reference to the given bool and assigns it to the Compression field.
func (o *BackupScheduleJobJobData) SetCompression(v bool) {
	o.Compression = &v
}

// GetCompresionLevel returns the CompresionLevel field value if set, zero value otherwise.
func (o *BackupScheduleJobJobData) GetCompresionLevel() int32 {
	if o == nil || isNil(o.CompresionLevel) {
		var ret int32
		return ret
	}
	return *o.CompresionLevel
}

// GetCompresionLevelOk returns a tuple with the CompresionLevel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupScheduleJobJobData) GetCompresionLevelOk() (*int32, bool) {
	if o == nil || isNil(o.CompresionLevel) {
    return nil, false
	}
	return o.CompresionLevel, true
}

// HasCompresionLevel returns a boolean if a field has been set.
func (o *BackupScheduleJobJobData) HasCompresionLevel() bool {
	if o != nil && !isNil(o.CompresionLevel) {
		return true
	}

	return false
}

// SetCompresionLevel gets a reference to the given int32 and assigns it to the CompresionLevel field.
func (o *BackupScheduleJobJobData) SetCompresionLevel(v int32) {
	o.CompresionLevel = &v
}

// GetEncryptBackup returns the EncryptBackup field value if set, zero value otherwise.
func (o *BackupScheduleJobJobData) GetEncryptBackup() bool {
	if o == nil || isNil(o.EncryptBackup) {
		var ret bool
		return ret
	}
	return *o.EncryptBackup
}

// GetEncryptBackupOk returns a tuple with the EncryptBackup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupScheduleJobJobData) GetEncryptBackupOk() (*bool, bool) {
	if o == nil || isNil(o.EncryptBackup) {
    return nil, false
	}
	return o.EncryptBackup, true
}

// HasEncryptBackup returns a boolean if a field has been set.
func (o *BackupScheduleJobJobData) HasEncryptBackup() bool {
	if o != nil && !isNil(o.EncryptBackup) {
		return true
	}

	return false
}

// SetEncryptBackup gets a reference to the given bool and assigns it to the EncryptBackup field.
func (o *BackupScheduleJobJobData) SetEncryptBackup(v bool) {
	o.EncryptBackup = &v
}

// GetHostname returns the Hostname field value if set, zero value otherwise.
func (o *BackupScheduleJobJobData) GetHostname() string {
	if o == nil || isNil(o.Hostname) {
		var ret string
		return ret
	}
	return *o.Hostname
}

// GetHostnameOk returns a tuple with the Hostname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupScheduleJobJobData) GetHostnameOk() (*string, bool) {
	if o == nil || isNil(o.Hostname) {
    return nil, false
	}
	return o.Hostname, true
}

// HasHostname returns a boolean if a field has been set.
func (o *BackupScheduleJobJobData) HasHostname() bool {
	if o != nil && !isNil(o.Hostname) {
		return true
	}

	return false
}

// SetHostname gets a reference to the given string and assigns it to the Hostname field.
func (o *BackupScheduleJobJobData) SetHostname(v string) {
	o.Hostname = &v
}

// GetPort returns the Port field value if set, zero value otherwise.
func (o *BackupScheduleJobJobData) GetPort() int32 {
	if o == nil || isNil(o.Port) {
		var ret int32
		return ret
	}
	return *o.Port
}

// GetPortOk returns a tuple with the Port field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupScheduleJobJobData) GetPortOk() (*int32, bool) {
	if o == nil || isNil(o.Port) {
    return nil, false
	}
	return o.Port, true
}

// HasPort returns a boolean if a field has been set.
func (o *BackupScheduleJobJobData) HasPort() bool {
	if o != nil && !isNil(o.Port) {
		return true
	}

	return false
}

// SetPort gets a reference to the given int32 and assigns it to the Port field.
func (o *BackupScheduleJobJobData) SetPort(v int32) {
	o.Port = &v
}

// GetVerifyBackupDelay returns the VerifyBackupDelay field value if set, zero value otherwise.
func (o *BackupScheduleJobJobData) GetVerifyBackupDelay() int32 {
	if o == nil || isNil(o.VerifyBackupDelay) {
		var ret int32
		return ret
	}
	return *o.VerifyBackupDelay
}

// GetVerifyBackupDelayOk returns a tuple with the VerifyBackupDelay field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupScheduleJobJobData) GetVerifyBackupDelayOk() (*int32, bool) {
	if o == nil || isNil(o.VerifyBackupDelay) {
    return nil, false
	}
	return o.VerifyBackupDelay, true
}

// HasVerifyBackupDelay returns a boolean if a field has been set.
func (o *BackupScheduleJobJobData) HasVerifyBackupDelay() bool {
	if o != nil && !isNil(o.VerifyBackupDelay) {
		return true
	}

	return false
}

// SetVerifyBackupDelay gets a reference to the given int32 and assigns it to the VerifyBackupDelay field.
func (o *BackupScheduleJobJobData) SetVerifyBackupDelay(v int32) {
	o.VerifyBackupDelay = &v
}

// GetVerifyBackup returns the VerifyBackup field value if set, zero value otherwise.
func (o *BackupScheduleJobJobData) GetVerifyBackup() BackupScheduleJobJobDataVerifyBackup {
	if o == nil || isNil(o.VerifyBackup) {
		var ret BackupScheduleJobJobDataVerifyBackup
		return ret
	}
	return *o.VerifyBackup
}

// GetVerifyBackupOk returns a tuple with the VerifyBackup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupScheduleJobJobData) GetVerifyBackupOk() (*BackupScheduleJobJobDataVerifyBackup, bool) {
	if o == nil || isNil(o.VerifyBackup) {
    return nil, false
	}
	return o.VerifyBackup, true
}

// HasVerifyBackup returns a boolean if a field has been set.
func (o *BackupScheduleJobJobData) HasVerifyBackup() bool {
	if o != nil && !isNil(o.VerifyBackup) {
		return true
	}

	return false
}

// SetVerifyBackup gets a reference to the given BackupScheduleJobJobDataVerifyBackup and assigns it to the VerifyBackup field.
func (o *BackupScheduleJobJobData) SetVerifyBackup(v BackupScheduleJobJobDataVerifyBackup) {
	o.VerifyBackup = &v
}

func (o BackupScheduleJobJobData) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !isNil(o.BackupFailover) {
		toSerialize["backup_failover"] = o.BackupFailover
	}
	if !isNil(o.BackupFailoverHost) {
		toSerialize["backup_failover_host"] = o.BackupFailoverHost
	}
	if !isNil(o.BackupMethod) {
		toSerialize["backup_method"] = o.BackupMethod
	}
	if !isNil(o.BackupRetention) {
		toSerialize["backup_retention"] = o.BackupRetention
	}
	if !isNil(o.Backupdir) {
		toSerialize["backupdir"] = o.Backupdir
	}
	if !isNil(o.Backupsubdir) {
		toSerialize["backupsubdir"] = o.Backupsubdir
	}
	if !isNil(o.CcStorage) {
		toSerialize["cc_storage"] = o.CcStorage
	}
	if !isNil(o.Compression) {
		toSerialize["compression"] = o.Compression
	}
	if !isNil(o.CompresionLevel) {
		toSerialize["compresion_level"] = o.CompresionLevel
	}
	if !isNil(o.EncryptBackup) {
		toSerialize["encrypt_backup"] = o.EncryptBackup
	}
	if !isNil(o.Hostname) {
		toSerialize["hostname"] = o.Hostname
	}
	if !isNil(o.Port) {
		toSerialize["port"] = o.Port
	}
	if !isNil(o.VerifyBackupDelay) {
		toSerialize["verify_backup_delay"] = o.VerifyBackupDelay
	}
	if !isNil(o.VerifyBackup) {
		toSerialize["verify_backup"] = o.VerifyBackup
	}
	return json.Marshal(toSerialize)
}

type NullableBackupScheduleJobJobData struct {
	value *BackupScheduleJobJobData
	isSet bool
}

func (v NullableBackupScheduleJobJobData) Get() *BackupScheduleJobJobData {
	return v.value
}

func (v *NullableBackupScheduleJobJobData) Set(val *BackupScheduleJobJobData) {
	v.value = val
	v.isSet = true
}

func (v NullableBackupScheduleJobJobData) IsSet() bool {
	return v.isSet
}

func (v *NullableBackupScheduleJobJobData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBackupScheduleJobJobData(val *BackupScheduleJobJobData) *NullableBackupScheduleJobJobData {
	return &NullableBackupScheduleJobJobData{value: val, isSet: true}
}

func (v NullableBackupScheduleJobJobData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBackupScheduleJobJobData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


