/*
Severalnines ClusterControl REST API (V2)

REST API (V2) specification for ClusterControl - AI Powered Database automation tool for multi/hybrid cloud database deployment.

API version: OpenAPI specification v1.0.0
Contact: sales@severalnines.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the JobsJobJobSpecJobData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &JobsJobJobSpecJobData{}

// JobsJobJobSpecJobData struct for JobsJobJobSpecJobData
type JobsJobJobSpecJobData struct {
	Action *string `json:"action,omitempty"`
	Addnode *bool `json:"addnode,omitempty"`
	AdminUsername *string `json:"admin_username,omitempty"`
	AdminUser *string `json:"admin_user,omitempty"`
	AdminPassword *string `json:"admin_password,omitempty"`
	AuditEvents *string `json:"audit_events,omitempty"`
	ArchiveMode *string `json:"archive_mode,omitempty"`
	Backupid *int32 `json:"backupid,omitempty"`
	BackupId *int32 `json:"backup_id,omitempty"`
	BuildFromSource *bool `json:"build_from_source,omitempty"`
	ClusterName *string `json:"cluster_name,omitempty"`
	Clusterid *int32 `json:"clusterid,omitempty"`
	ClusterType *string `json:"cluster_type,omitempty"`
	CompanyId *string `json:"company_id,omitempty"`
	ConfigTemplate *string `json:"config_template,omitempty"`
	BackupFailover *bool `json:"backup_failover,omitempty"`
	BackupFailoverHost *string `json:"backup_failover_host,omitempty"`
	BackupMethod *string `json:"backup_method,omitempty"`
	BackupMysqldumpType *string `json:"backup_mysqldump_type,omitempty"`
	BackupIndividualSchemas *bool `json:"backup_individual_schemas,omitempty"`
	BackupRetention *int32 `json:"backup_retention,omitempty"`
	ExtendedInsert *bool `json:"extended_insert,omitempty"`
	BackupDir *string `json:"backup_dir,omitempty"`
	Backupsubdir *string `json:"backupsubdir,omitempty"`
	RemoveBackups *bool `json:"remove_backups,omitempty"`
	BackupSystemDb *bool `json:"backup_system_db,omitempty"`
	CcStorage *bool `json:"cc_storage,omitempty"`
	Compression *bool `json:"compression,omitempty"`
	CompressionLevel *int32 `json:"compression_level,omitempty"`
	DbDatabase *string `json:"db_database,omitempty"`
	DbPassword *string `json:"db_password,omitempty"`
	DbPrivs *string `json:"db_privs,omitempty"`
	DbUsername *string `json:"db_username,omitempty"`
	DataCenter *int32 `json:"data_center,omitempty"`
	ExecUpgradeScript *bool `json:"exec_upgrade_script,omitempty"`
	Extended *bool `json:"extended,omitempty"`
	ListeningPort *int32 `json:"listening_port,omitempty"`
	MaskPasswords *bool `json:"mask_passwords,omitempty"`
	MonitorPassword *string `json:"monitor_password,omitempty"`
	MonitorUser *string `json:"monitor_user,omitempty"`
	UseClustering *bool `json:"use_clustering,omitempty"`
	UseRwSplit *bool `json:"use_rw_split,omitempty"`
	Hostname *string `json:"hostname,omitempty"`
	MasterAddress *string `json:"master_address,omitempty"`
	MasterDelay *int32 `json:"master_delay,omitempty"`
	IncludeDatabases *string `json:"include_databases,omitempty"`
	InstallTimescaledb *bool `json:"install_timescaledb,omitempty"`
	UpdateLb *bool `json:"update_lb,omitempty"`
	UsePackageForDataDir *bool `json:"usePackageForDataDir,omitempty"`
	EncryptBackup *bool `json:"encrypt_backup,omitempty"`
	ThrottleRateNetbw *int32 `json:"throttle_rate_netbw,omitempty"`
	UsePigz *bool `json:"use_pigz,omitempty"`
	UseQpress *bool `json:"use_qpress,omitempty"`
	WsrepDesync *bool `json:"wsrep_desync,omitempty"`
	GaleraSegment *string `json:"galera_segment,omitempty"`
	XtrabackupBackupLocks *bool `json:"xtrabackup_backup_locks,omitempty"`
	XtrabackupLockDdlPerTable *bool `json:"xtrabackup_lock_ddl_per_table,omitempty"`
	XtrabackupParallellism *int32 `json:"xtrabackup_parallellism,omitempty"`
	VerifyBackupDelay *int32 `json:"verify_backup_delay,omitempty"`
	Datadir *string `json:"datadir,omitempty"`
	DbUser *string `json:"db_user,omitempty"`
	DisableFirewall *bool `json:"disable_firewall,omitempty"`
	DisableSelinux *bool `json:"disable_selinux,omitempty"`
	EnableUninstall *bool `json:"enable_uninstall,omitempty"`
	UnregisterOnly *bool `json:"unregister_only,omitempty"`
	GenerateToken *bool `json:"generate_token,omitempty"`
	InstallSoftware *bool `json:"install_software,omitempty"`
	UseInternalRepos *bool `json:"use_internal_repos,omitempty"`
	LocalRepository *string `json:"local_repository,omitempty"`
	EnableMysqlUninstall *bool `json:"enable_mysql_uninstall,omitempty"`
	MysqlSemiSync *bool `json:"mysql_semi_sync,omitempty"`
	EnableSsl *bool `json:"enable_ssl,omitempty"`
	MongosConfTemplate *string `json:"mongos_conf_template,omitempty"`
	MongodbAuthdb *string `json:"mongodb_authdb,omitempty"`
	NodeType *int32 `json:"node_type,omitempty"`
	OverwriteMysqlchk *bool `json:"overwrite_mysqlchk,omitempty"`
	Port *int32 `json:"port,omitempty"`
	SentinelPort *string `json:"sentinel_port,omitempty"`
	SshKeyfile *string `json:"ssh_keyfile,omitempty"`
	SshPort *string `json:"ssh_port,omitempty"`
	SshUser *string `json:"ssh_user,omitempty"`
	SudoPassword *string `json:"sudo_password,omitempty"`
	UserId *int32 `json:"user_id,omitempty"`
	Vendor *string `json:"vendor,omitempty"`
	Type *string `json:"type,omitempty"`
	Version *string `json:"version,omitempty"`
	SoftwarePackage *string `json:"software_package,omitempty"`
	ServerAddress *string `json:"server_address,omitempty"`
	TerminateDbServer *bool `json:"terminate_db_server,omitempty"`
	XtrabackupUseMemory *int32 `json:"xtrabackup_use_memory,omitempty"`
	Initial *bool `json:"initial,omitempty"`
	Reboot *bool `json:"reboot,omitempty"`
	SlaveAddress *string `json:"slave_address,omitempty"`
	Force *bool `json:"force,omitempty"`
	ForceStop *bool `json:"force_stop,omitempty"`
	StopTimeout *int32 `json:"stop_timeout,omitempty"`
	PitrStopTime *string `json:"pitr_stop_time,omitempty"`
	PitrStopLog *string `json:"pitr_stop_log,omitempty"`
	PitrStopPos *int32 `json:"pitr_stop_pos,omitempty"`
	HostLocationUuid *string `json:"host_location_uuid,omitempty"`
	Bootstrap *bool `json:"bootstrap,omitempty"`
	SnapshotLocation *string `json:"snapshot_location,omitempty"`
	SnapshotRepository *string `json:"snapshot_repository,omitempty"`
	SnapshotHost *string `json:"snapshot_host,omitempty"`
	StorageHost *string `json:"storage_host,omitempty"`
	Replicaset *string `json:"replicaset,omitempty"`
	DeployAgents *bool `json:"deploy_agents,omitempty"`
	UploadBackupDataToCloudStorage *JobsJobJobSpecJobDataUploadBackupDataToCloudStorage `json:"upload_backup_data_to_cloud_storage,omitempty"`
	VerifyBackup *BackupScheduleJobJobDataVerifyBackup `json:"verify_backup,omitempty"`
	ConfigServers *JobsJobJobSpecJobDataConfigServers `json:"config_servers,omitempty"`
	MongosServers []JobsJobJobSpecJobDataConfigServersMembersInner `json:"mongos_servers,omitempty"`
	Node *JobsJobJobSpecJobDataNode `json:"node,omitempty"`
	Nodes []JobsJobJobSpecJobDataNodesInner `json:"nodes,omitempty"`
	NodeAdresses []JobsJobJobSpecJobDataNodeAdressesInner `json:"node_adresses,omitempty"`
	Topology *JobsJobJobSpecJobDataTopology `json:"topology,omitempty"`
	ReplicaSets []JobsJobJobSpecJobDataReplicaSetsInner `json:"replica_sets,omitempty"`
	WithTags []string `json:"with_tags,omitempty"`
}

// NewJobsJobJobSpecJobData instantiates a new JobsJobJobSpecJobData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewJobsJobJobSpecJobData() *JobsJobJobSpecJobData {
	this := JobsJobJobSpecJobData{}
	return &this
}

// NewJobsJobJobSpecJobDataWithDefaults instantiates a new JobsJobJobSpecJobData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewJobsJobJobSpecJobDataWithDefaults() *JobsJobJobSpecJobData {
	this := JobsJobJobSpecJobData{}
	return &this
}

// GetAction returns the Action field value if set, zero value otherwise.
func (o *JobsJobJobSpecJobData) GetAction() string {
	if o == nil || IsNil(o.Action) {
		var ret string
		return ret
	}
	return *o.Action
}

// GetActionOk returns a tuple with the Action field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsJobJobSpecJobData) GetActionOk() (*string, bool) {
	if o == nil || IsNil(o.Action) {
		return nil, false
	}
	return o.Action, true
}

// HasAction returns a boolean if a field has been set.
func (o *JobsJobJobSpecJobData) HasAction() bool {
	if o != nil && !IsNil(o.Action) {
		return true
	}

	return false
}

// SetAction gets a reference to the given string and assigns it to the Action field.
func (o *JobsJobJobSpecJobData) SetAction(v string) {
	o.Action = &v
}

// GetAddnode returns the Addnode field value if set, zero value otherwise.
func (o *JobsJobJobSpecJobData) GetAddnode() bool {
	if o == nil || IsNil(o.Addnode) {
		var ret bool
		return ret
	}
	return *o.Addnode
}

// GetAddnodeOk returns a tuple with the Addnode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsJobJobSpecJobData) GetAddnodeOk() (*bool, bool) {
	if o == nil || IsNil(o.Addnode) {
		return nil, false
	}
	return o.Addnode, true
}

// HasAddnode returns a boolean if a field has been set.
func (o *JobsJobJobSpecJobData) HasAddnode() bool {
	if o != nil && !IsNil(o.Addnode) {
		return true
	}

	return false
}

// SetAddnode gets a reference to the given bool and assigns it to the Addnode field.
func (o *JobsJobJobSpecJobData) SetAddnode(v bool) {
	o.Addnode = &v
}

// GetAdminUsername returns the AdminUsername field value if set, zero value otherwise.
func (o *JobsJobJobSpecJobData) GetAdminUsername() string {
	if o == nil || IsNil(o.AdminUsername) {
		var ret string
		return ret
	}
	return *o.AdminUsername
}

// GetAdminUsernameOk returns a tuple with the AdminUsername field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsJobJobSpecJobData) GetAdminUsernameOk() (*string, bool) {
	if o == nil || IsNil(o.AdminUsername) {
		return nil, false
	}
	return o.AdminUsername, true
}

// HasAdminUsername returns a boolean if a field has been set.
func (o *JobsJobJobSpecJobData) HasAdminUsername() bool {
	if o != nil && !IsNil(o.AdminUsername) {
		return true
	}

	return false
}

// SetAdminUsername gets a reference to the given string and assigns it to the AdminUsername field.
func (o *JobsJobJobSpecJobData) SetAdminUsername(v string) {
	o.AdminUsername = &v
}

// GetAdminUser returns the AdminUser field value if set, zero value otherwise.
func (o *JobsJobJobSpecJobData) GetAdminUser() string {
	if o == nil || IsNil(o.AdminUser) {
		var ret string
		return ret
	}
	return *o.AdminUser
}

// GetAdminUserOk returns a tuple with the AdminUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsJobJobSpecJobData) GetAdminUserOk() (*string, bool) {
	if o == nil || IsNil(o.AdminUser) {
		return nil, false
	}
	return o.AdminUser, true
}

// HasAdminUser returns a boolean if a field has been set.
func (o *JobsJobJobSpecJobData) HasAdminUser() bool {
	if o != nil && !IsNil(o.AdminUser) {
		return true
	}

	return false
}

// SetAdminUser gets a reference to the given string and assigns it to the AdminUser field.
func (o *JobsJobJobSpecJobData) SetAdminUser(v string) {
	o.AdminUser = &v
}

// GetAdminPassword returns the AdminPassword field value if set, zero value otherwise.
func (o *JobsJobJobSpecJobData) GetAdminPassword() string {
	if o == nil || IsNil(o.AdminPassword) {
		var ret string
		return ret
	}
	return *o.AdminPassword
}

// GetAdminPasswordOk returns a tuple with the AdminPassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsJobJobSpecJobData) GetAdminPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.AdminPassword) {
		return nil, false
	}
	return o.AdminPassword, true
}

// HasAdminPassword returns a boolean if a field has been set.
func (o *JobsJobJobSpecJobData) HasAdminPassword() bool {
	if o != nil && !IsNil(o.AdminPassword) {
		return true
	}

	return false
}

// SetAdminPassword gets a reference to the given string and assigns it to the AdminPassword field.
func (o *JobsJobJobSpecJobData) SetAdminPassword(v string) {
	o.AdminPassword = &v
}

// GetAuditEvents returns the AuditEvents field value if set, zero value otherwise.
func (o *JobsJobJobSpecJobData) GetAuditEvents() string {
	if o == nil || IsNil(o.AuditEvents) {
		var ret string
		return ret
	}
	return *o.AuditEvents
}

// GetAuditEventsOk returns a tuple with the AuditEvents field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsJobJobSpecJobData) GetAuditEventsOk() (*string, bool) {
	if o == nil || IsNil(o.AuditEvents) {
		return nil, false
	}
	return o.AuditEvents, true
}

// HasAuditEvents returns a boolean if a field has been set.
func (o *JobsJobJobSpecJobData) HasAuditEvents() bool {
	if o != nil && !IsNil(o.AuditEvents) {
		return true
	}

	return false
}

// SetAuditEvents gets a reference to the given string and assigns it to the AuditEvents field.
func (o *JobsJobJobSpecJobData) SetAuditEvents(v string) {
	o.AuditEvents = &v
}

// GetArchiveMode returns the ArchiveMode field value if set, zero value otherwise.
func (o *JobsJobJobSpecJobData) GetArchiveMode() string {
	if o == nil || IsNil(o.ArchiveMode) {
		var ret string
		return ret
	}
	return *o.ArchiveMode
}

// GetArchiveModeOk returns a tuple with the ArchiveMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsJobJobSpecJobData) GetArchiveModeOk() (*string, bool) {
	if o == nil || IsNil(o.ArchiveMode) {
		return nil, false
	}
	return o.ArchiveMode, true
}

// HasArchiveMode returns a boolean if a field has been set.
func (o *JobsJobJobSpecJobData) HasArchiveMode() bool {
	if o != nil && !IsNil(o.ArchiveMode) {
		return true
	}

	return false
}

// SetArchiveMode gets a reference to the given string and assigns it to the ArchiveMode field.
func (o *JobsJobJobSpecJobData) SetArchiveMode(v string) {
	o.ArchiveMode = &v
}

// GetBackupid returns the Backupid field value if set, zero value otherwise.
func (o *JobsJobJobSpecJobData) GetBackupid() int32 {
	if o == nil || IsNil(o.Backupid) {
		var ret int32
		return ret
	}
	return *o.Backupid
}

// GetBackupidOk returns a tuple with the Backupid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsJobJobSpecJobData) GetBackupidOk() (*int32, bool) {
	if o == nil || IsNil(o.Backupid) {
		return nil, false
	}
	return o.Backupid, true
}

// HasBackupid returns a boolean if a field has been set.
func (o *JobsJobJobSpecJobData) HasBackupid() bool {
	if o != nil && !IsNil(o.Backupid) {
		return true
	}

	return false
}

// SetBackupid gets a reference to the given int32 and assigns it to the Backupid field.
func (o *JobsJobJobSpecJobData) SetBackupid(v int32) {
	o.Backupid = &v
}

// GetBackupId returns the BackupId field value if set, zero value otherwise.
func (o *JobsJobJobSpecJobData) GetBackupId() int32 {
	if o == nil || IsNil(o.BackupId) {
		var ret int32
		return ret
	}
	return *o.BackupId
}

// GetBackupIdOk returns a tuple with the BackupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsJobJobSpecJobData) GetBackupIdOk() (*int32, bool) {
	if o == nil || IsNil(o.BackupId) {
		return nil, false
	}
	return o.BackupId, true
}

// HasBackupId returns a boolean if a field has been set.
func (o *JobsJobJobSpecJobData) HasBackupId() bool {
	if o != nil && !IsNil(o.BackupId) {
		return true
	}

	return false
}

// SetBackupId gets a reference to the given int32 and assigns it to the BackupId field.
func (o *JobsJobJobSpecJobData) SetBackupId(v int32) {
	o.BackupId = &v
}

// GetBuildFromSource returns the BuildFromSource field value if set, zero value otherwise.
func (o *JobsJobJobSpecJobData) GetBuildFromSource() bool {
	if o == nil || IsNil(o.BuildFromSource) {
		var ret bool
		return ret
	}
	return *o.BuildFromSource
}

// GetBuildFromSourceOk returns a tuple with the BuildFromSource field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsJobJobSpecJobData) GetBuildFromSourceOk() (*bool, bool) {
	if o == nil || IsNil(o.BuildFromSource) {
		return nil, false
	}
	return o.BuildFromSource, true
}

// HasBuildFromSource returns a boolean if a field has been set.
func (o *JobsJobJobSpecJobData) HasBuildFromSource() bool {
	if o != nil && !IsNil(o.BuildFromSource) {
		return true
	}

	return false
}

// SetBuildFromSource gets a reference to the given bool and assigns it to the BuildFromSource field.
func (o *JobsJobJobSpecJobData) SetBuildFromSource(v bool) {
	o.BuildFromSource = &v
}

// GetClusterName returns the ClusterName field value if set, zero value otherwise.
func (o *JobsJobJobSpecJobData) GetClusterName() string {
	if o == nil || IsNil(o.ClusterName) {
		var ret string
		return ret
	}
	return *o.ClusterName
}

// GetClusterNameOk returns a tuple with the ClusterName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsJobJobSpecJobData) GetClusterNameOk() (*string, bool) {
	if o == nil || IsNil(o.ClusterName) {
		return nil, false
	}
	return o.ClusterName, true
}

// HasClusterName returns a boolean if a field has been set.
func (o *JobsJobJobSpecJobData) HasClusterName() bool {
	if o != nil && !IsNil(o.ClusterName) {
		return true
	}

	return false
}

// SetClusterName gets a reference to the given string and assigns it to the ClusterName field.
func (o *JobsJobJobSpecJobData) SetClusterName(v string) {
	o.ClusterName = &v
}

// GetClusterid returns the Clusterid field value if set, zero value otherwise.
func (o *JobsJobJobSpecJobData) GetClusterid() int32 {
	if o == nil || IsNil(o.Clusterid) {
		var ret int32
		return ret
	}
	return *o.Clusterid
}

// GetClusteridOk returns a tuple with the Clusterid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsJobJobSpecJobData) GetClusteridOk() (*int32, bool) {
	if o == nil || IsNil(o.Clusterid) {
		return nil, false
	}
	return o.Clusterid, true
}

// HasClusterid returns a boolean if a field has been set.
func (o *JobsJobJobSpecJobData) HasClusterid() bool {
	if o != nil && !IsNil(o.Clusterid) {
		return true
	}

	return false
}

// SetClusterid gets a reference to the given int32 and assigns it to the Clusterid field.
func (o *JobsJobJobSpecJobData) SetClusterid(v int32) {
	o.Clusterid = &v
}

// GetClusterType returns the ClusterType field value if set, zero value otherwise.
func (o *JobsJobJobSpecJobData) GetClusterType() string {
	if o == nil || IsNil(o.ClusterType) {
		var ret string
		return ret
	}
	return *o.ClusterType
}

// GetClusterTypeOk returns a tuple with the ClusterType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsJobJobSpecJobData) GetClusterTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ClusterType) {
		return nil, false
	}
	return o.ClusterType, true
}

// HasClusterType returns a boolean if a field has been set.
func (o *JobsJobJobSpecJobData) HasClusterType() bool {
	if o != nil && !IsNil(o.ClusterType) {
		return true
	}

	return false
}

// SetClusterType gets a reference to the given string and assigns it to the ClusterType field.
func (o *JobsJobJobSpecJobData) SetClusterType(v string) {
	o.ClusterType = &v
}

// GetCompanyId returns the CompanyId field value if set, zero value otherwise.
func (o *JobsJobJobSpecJobData) GetCompanyId() string {
	if o == nil || IsNil(o.CompanyId) {
		var ret string
		return ret
	}
	return *o.CompanyId
}

// GetCompanyIdOk returns a tuple with the CompanyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsJobJobSpecJobData) GetCompanyIdOk() (*string, bool) {
	if o == nil || IsNil(o.CompanyId) {
		return nil, false
	}
	return o.CompanyId, true
}

// HasCompanyId returns a boolean if a field has been set.
func (o *JobsJobJobSpecJobData) HasCompanyId() bool {
	if o != nil && !IsNil(o.CompanyId) {
		return true
	}

	return false
}

// SetCompanyId gets a reference to the given string and assigns it to the CompanyId field.
func (o *JobsJobJobSpecJobData) SetCompanyId(v string) {
	o.CompanyId = &v
}

// GetConfigTemplate returns the ConfigTemplate field value if set, zero value otherwise.
func (o *JobsJobJobSpecJobData) GetConfigTemplate() string {
	if o == nil || IsNil(o.ConfigTemplate) {
		var ret string
		return ret
	}
	return *o.ConfigTemplate
}

// GetConfigTemplateOk returns a tuple with the ConfigTemplate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsJobJobSpecJobData) GetConfigTemplateOk() (*string, bool) {
	if o == nil || IsNil(o.ConfigTemplate) {
		return nil, false
	}
	return o.ConfigTemplate, true
}

// HasConfigTemplate returns a boolean if a field has been set.
func (o *JobsJobJobSpecJobData) HasConfigTemplate() bool {
	if o != nil && !IsNil(o.ConfigTemplate) {
		return true
	}

	return false
}

// SetConfigTemplate gets a reference to the given string and assigns it to the ConfigTemplate field.
func (o *JobsJobJobSpecJobData) SetConfigTemplate(v string) {
	o.ConfigTemplate = &v
}

// GetBackupFailover returns the BackupFailover field value if set, zero value otherwise.
func (o *JobsJobJobSpecJobData) GetBackupFailover() bool {
	if o == nil || IsNil(o.BackupFailover) {
		var ret bool
		return ret
	}
	return *o.BackupFailover
}

// GetBackupFailoverOk returns a tuple with the BackupFailover field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsJobJobSpecJobData) GetBackupFailoverOk() (*bool, bool) {
	if o == nil || IsNil(o.BackupFailover) {
		return nil, false
	}
	return o.BackupFailover, true
}

// HasBackupFailover returns a boolean if a field has been set.
func (o *JobsJobJobSpecJobData) HasBackupFailover() bool {
	if o != nil && !IsNil(o.BackupFailover) {
		return true
	}

	return false
}

// SetBackupFailover gets a reference to the given bool and assigns it to the BackupFailover field.
func (o *JobsJobJobSpecJobData) SetBackupFailover(v bool) {
	o.BackupFailover = &v
}

// GetBackupFailoverHost returns the BackupFailoverHost field value if set, zero value otherwise.
func (o *JobsJobJobSpecJobData) GetBackupFailoverHost() string {
	if o == nil || IsNil(o.BackupFailoverHost) {
		var ret string
		return ret
	}
	return *o.BackupFailoverHost
}

// GetBackupFailoverHostOk returns a tuple with the BackupFailoverHost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsJobJobSpecJobData) GetBackupFailoverHostOk() (*string, bool) {
	if o == nil || IsNil(o.BackupFailoverHost) {
		return nil, false
	}
	return o.BackupFailoverHost, true
}

// HasBackupFailoverHost returns a boolean if a field has been set.
func (o *JobsJobJobSpecJobData) HasBackupFailoverHost() bool {
	if o != nil && !IsNil(o.BackupFailoverHost) {
		return true
	}

	return false
}

// SetBackupFailoverHost gets a reference to the given string and assigns it to the BackupFailoverHost field.
func (o *JobsJobJobSpecJobData) SetBackupFailoverHost(v string) {
	o.BackupFailoverHost = &v
}

// GetBackupMethod returns the BackupMethod field value if set, zero value otherwise.
func (o *JobsJobJobSpecJobData) GetBackupMethod() string {
	if o == nil || IsNil(o.BackupMethod) {
		var ret string
		return ret
	}
	return *o.BackupMethod
}

// GetBackupMethodOk returns a tuple with the BackupMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsJobJobSpecJobData) GetBackupMethodOk() (*string, bool) {
	if o == nil || IsNil(o.BackupMethod) {
		return nil, false
	}
	return o.BackupMethod, true
}

// HasBackupMethod returns a boolean if a field has been set.
func (o *JobsJobJobSpecJobData) HasBackupMethod() bool {
	if o != nil && !IsNil(o.BackupMethod) {
		return true
	}

	return false
}

// SetBackupMethod gets a reference to the given string and assigns it to the BackupMethod field.
func (o *JobsJobJobSpecJobData) SetBackupMethod(v string) {
	o.BackupMethod = &v
}

// GetBackupMysqldumpType returns the BackupMysqldumpType field value if set, zero value otherwise.
func (o *JobsJobJobSpecJobData) GetBackupMysqldumpType() string {
	if o == nil || IsNil(o.BackupMysqldumpType) {
		var ret string
		return ret
	}
	return *o.BackupMysqldumpType
}

// GetBackupMysqldumpTypeOk returns a tuple with the BackupMysqldumpType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsJobJobSpecJobData) GetBackupMysqldumpTypeOk() (*string, bool) {
	if o == nil || IsNil(o.BackupMysqldumpType) {
		return nil, false
	}
	return o.BackupMysqldumpType, true
}

// HasBackupMysqldumpType returns a boolean if a field has been set.
func (o *JobsJobJobSpecJobData) HasBackupMysqldumpType() bool {
	if o != nil && !IsNil(o.BackupMysqldumpType) {
		return true
	}

	return false
}

// SetBackupMysqldumpType gets a reference to the given string and assigns it to the BackupMysqldumpType field.
func (o *JobsJobJobSpecJobData) SetBackupMysqldumpType(v string) {
	o.BackupMysqldumpType = &v
}

// GetBackupIndividualSchemas returns the BackupIndividualSchemas field value if set, zero value otherwise.
func (o *JobsJobJobSpecJobData) GetBackupIndividualSchemas() bool {
	if o == nil || IsNil(o.BackupIndividualSchemas) {
		var ret bool
		return ret
	}
	return *o.BackupIndividualSchemas
}

// GetBackupIndividualSchemasOk returns a tuple with the BackupIndividualSchemas field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsJobJobSpecJobData) GetBackupIndividualSchemasOk() (*bool, bool) {
	if o == nil || IsNil(o.BackupIndividualSchemas) {
		return nil, false
	}
	return o.BackupIndividualSchemas, true
}

// HasBackupIndividualSchemas returns a boolean if a field has been set.
func (o *JobsJobJobSpecJobData) HasBackupIndividualSchemas() bool {
	if o != nil && !IsNil(o.BackupIndividualSchemas) {
		return true
	}

	return false
}

// SetBackupIndividualSchemas gets a reference to the given bool and assigns it to the BackupIndividualSchemas field.
func (o *JobsJobJobSpecJobData) SetBackupIndividualSchemas(v bool) {
	o.BackupIndividualSchemas = &v
}

// GetBackupRetention returns the BackupRetention field value if set, zero value otherwise.
func (o *JobsJobJobSpecJobData) GetBackupRetention() int32 {
	if o == nil || IsNil(o.BackupRetention) {
		var ret int32
		return ret
	}
	return *o.BackupRetention
}

// GetBackupRetentionOk returns a tuple with the BackupRetention field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsJobJobSpecJobData) GetBackupRetentionOk() (*int32, bool) {
	if o == nil || IsNil(o.BackupRetention) {
		return nil, false
	}
	return o.BackupRetention, true
}

// HasBackupRetention returns a boolean if a field has been set.
func (o *JobsJobJobSpecJobData) HasBackupRetention() bool {
	if o != nil && !IsNil(o.BackupRetention) {
		return true
	}

	return false
}

// SetBackupRetention gets a reference to the given int32 and assigns it to the BackupRetention field.
func (o *JobsJobJobSpecJobData) SetBackupRetention(v int32) {
	o.BackupRetention = &v
}

// GetExtendedInsert returns the ExtendedInsert field value if set, zero value otherwise.
func (o *JobsJobJobSpecJobData) GetExtendedInsert() bool {
	if o == nil || IsNil(o.ExtendedInsert) {
		var ret bool
		return ret
	}
	return *o.ExtendedInsert
}

// GetExtendedInsertOk returns a tuple with the ExtendedInsert field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsJobJobSpecJobData) GetExtendedInsertOk() (*bool, bool) {
	if o == nil || IsNil(o.ExtendedInsert) {
		return nil, false
	}
	return o.ExtendedInsert, true
}

// HasExtendedInsert returns a boolean if a field has been set.
func (o *JobsJobJobSpecJobData) HasExtendedInsert() bool {
	if o != nil && !IsNil(o.ExtendedInsert) {
		return true
	}

	return false
}

// SetExtendedInsert gets a reference to the given bool and assigns it to the ExtendedInsert field.
func (o *JobsJobJobSpecJobData) SetExtendedInsert(v bool) {
	o.ExtendedInsert = &v
}

// GetBackupDir returns the BackupDir field value if set, zero value otherwise.
func (o *JobsJobJobSpecJobData) GetBackupDir() string {
	if o == nil || IsNil(o.BackupDir) {
		var ret string
		return ret
	}
	return *o.BackupDir
}

// GetBackupDirOk returns a tuple with the BackupDir field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsJobJobSpecJobData) GetBackupDirOk() (*string, bool) {
	if o == nil || IsNil(o.BackupDir) {
		return nil, false
	}
	return o.BackupDir, true
}

// HasBackupDir returns a boolean if a field has been set.
func (o *JobsJobJobSpecJobData) HasBackupDir() bool {
	if o != nil && !IsNil(o.BackupDir) {
		return true
	}

	return false
}

// SetBackupDir gets a reference to the given string and assigns it to the BackupDir field.
func (o *JobsJobJobSpecJobData) SetBackupDir(v string) {
	o.BackupDir = &v
}

// GetBackupsubdir returns the Backupsubdir field value if set, zero value otherwise.
func (o *JobsJobJobSpecJobData) GetBackupsubdir() string {
	if o == nil || IsNil(o.Backupsubdir) {
		var ret string
		return ret
	}
	return *o.Backupsubdir
}

// GetBackupsubdirOk returns a tuple with the Backupsubdir field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsJobJobSpecJobData) GetBackupsubdirOk() (*string, bool) {
	if o == nil || IsNil(o.Backupsubdir) {
		return nil, false
	}
	return o.Backupsubdir, true
}

// HasBackupsubdir returns a boolean if a field has been set.
func (o *JobsJobJobSpecJobData) HasBackupsubdir() bool {
	if o != nil && !IsNil(o.Backupsubdir) {
		return true
	}

	return false
}

// SetBackupsubdir gets a reference to the given string and assigns it to the Backupsubdir field.
func (o *JobsJobJobSpecJobData) SetBackupsubdir(v string) {
	o.Backupsubdir = &v
}

// GetRemoveBackups returns the RemoveBackups field value if set, zero value otherwise.
func (o *JobsJobJobSpecJobData) GetRemoveBackups() bool {
	if o == nil || IsNil(o.RemoveBackups) {
		var ret bool
		return ret
	}
	return *o.RemoveBackups
}

// GetRemoveBackupsOk returns a tuple with the RemoveBackups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsJobJobSpecJobData) GetRemoveBackupsOk() (*bool, bool) {
	if o == nil || IsNil(o.RemoveBackups) {
		return nil, false
	}
	return o.RemoveBackups, true
}

// HasRemoveBackups returns a boolean if a field has been set.
func (o *JobsJobJobSpecJobData) HasRemoveBackups() bool {
	if o != nil && !IsNil(o.RemoveBackups) {
		return true
	}

	return false
}

// SetRemoveBackups gets a reference to the given bool and assigns it to the RemoveBackups field.
func (o *JobsJobJobSpecJobData) SetRemoveBackups(v bool) {
	o.RemoveBackups = &v
}

// GetBackupSystemDb returns the BackupSystemDb field value if set, zero value otherwise.
func (o *JobsJobJobSpecJobData) GetBackupSystemDb() bool {
	if o == nil || IsNil(o.BackupSystemDb) {
		var ret bool
		return ret
	}
	return *o.BackupSystemDb
}

// GetBackupSystemDbOk returns a tuple with the BackupSystemDb field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsJobJobSpecJobData) GetBackupSystemDbOk() (*bool, bool) {
	if o == nil || IsNil(o.BackupSystemDb) {
		return nil, false
	}
	return o.BackupSystemDb, true
}

// HasBackupSystemDb returns a boolean if a field has been set.
func (o *JobsJobJobSpecJobData) HasBackupSystemDb() bool {
	if o != nil && !IsNil(o.BackupSystemDb) {
		return true
	}

	return false
}

// SetBackupSystemDb gets a reference to the given bool and assigns it to the BackupSystemDb field.
func (o *JobsJobJobSpecJobData) SetBackupSystemDb(v bool) {
	o.BackupSystemDb = &v
}

// GetCcStorage returns the CcStorage field value if set, zero value otherwise.
func (o *JobsJobJobSpecJobData) GetCcStorage() bool {
	if o == nil || IsNil(o.CcStorage) {
		var ret bool
		return ret
	}
	return *o.CcStorage
}

// GetCcStorageOk returns a tuple with the CcStorage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsJobJobSpecJobData) GetCcStorageOk() (*bool, bool) {
	if o == nil || IsNil(o.CcStorage) {
		return nil, false
	}
	return o.CcStorage, true
}

// HasCcStorage returns a boolean if a field has been set.
func (o *JobsJobJobSpecJobData) HasCcStorage() bool {
	if o != nil && !IsNil(o.CcStorage) {
		return true
	}

	return false
}

// SetCcStorage gets a reference to the given bool and assigns it to the CcStorage field.
func (o *JobsJobJobSpecJobData) SetCcStorage(v bool) {
	o.CcStorage = &v
}

// GetCompression returns the Compression field value if set, zero value otherwise.
func (o *JobsJobJobSpecJobData) GetCompression() bool {
	if o == nil || IsNil(o.Compression) {
		var ret bool
		return ret
	}
	return *o.Compression
}

// GetCompressionOk returns a tuple with the Compression field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsJobJobSpecJobData) GetCompressionOk() (*bool, bool) {
	if o == nil || IsNil(o.Compression) {
		return nil, false
	}
	return o.Compression, true
}

// HasCompression returns a boolean if a field has been set.
func (o *JobsJobJobSpecJobData) HasCompression() bool {
	if o != nil && !IsNil(o.Compression) {
		return true
	}

	return false
}

// SetCompression gets a reference to the given bool and assigns it to the Compression field.
func (o *JobsJobJobSpecJobData) SetCompression(v bool) {
	o.Compression = &v
}

// GetCompressionLevel returns the CompressionLevel field value if set, zero value otherwise.
func (o *JobsJobJobSpecJobData) GetCompressionLevel() int32 {
	if o == nil || IsNil(o.CompressionLevel) {
		var ret int32
		return ret
	}
	return *o.CompressionLevel
}

// GetCompressionLevelOk returns a tuple with the CompressionLevel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsJobJobSpecJobData) GetCompressionLevelOk() (*int32, bool) {
	if o == nil || IsNil(o.CompressionLevel) {
		return nil, false
	}
	return o.CompressionLevel, true
}

// HasCompressionLevel returns a boolean if a field has been set.
func (o *JobsJobJobSpecJobData) HasCompressionLevel() bool {
	if o != nil && !IsNil(o.CompressionLevel) {
		return true
	}

	return false
}

// SetCompressionLevel gets a reference to the given int32 and assigns it to the CompressionLevel field.
func (o *JobsJobJobSpecJobData) SetCompressionLevel(v int32) {
	o.CompressionLevel = &v
}

// GetDbDatabase returns the DbDatabase field value if set, zero value otherwise.
func (o *JobsJobJobSpecJobData) GetDbDatabase() string {
	if o == nil || IsNil(o.DbDatabase) {
		var ret string
		return ret
	}
	return *o.DbDatabase
}

// GetDbDatabaseOk returns a tuple with the DbDatabase field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsJobJobSpecJobData) GetDbDatabaseOk() (*string, bool) {
	if o == nil || IsNil(o.DbDatabase) {
		return nil, false
	}
	return o.DbDatabase, true
}

// HasDbDatabase returns a boolean if a field has been set.
func (o *JobsJobJobSpecJobData) HasDbDatabase() bool {
	if o != nil && !IsNil(o.DbDatabase) {
		return true
	}

	return false
}

// SetDbDatabase gets a reference to the given string and assigns it to the DbDatabase field.
func (o *JobsJobJobSpecJobData) SetDbDatabase(v string) {
	o.DbDatabase = &v
}

// GetDbPassword returns the DbPassword field value if set, zero value otherwise.
func (o *JobsJobJobSpecJobData) GetDbPassword() string {
	if o == nil || IsNil(o.DbPassword) {
		var ret string
		return ret
	}
	return *o.DbPassword
}

// GetDbPasswordOk returns a tuple with the DbPassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsJobJobSpecJobData) GetDbPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.DbPassword) {
		return nil, false
	}
	return o.DbPassword, true
}

// HasDbPassword returns a boolean if a field has been set.
func (o *JobsJobJobSpecJobData) HasDbPassword() bool {
	if o != nil && !IsNil(o.DbPassword) {
		return true
	}

	return false
}

// SetDbPassword gets a reference to the given string and assigns it to the DbPassword field.
func (o *JobsJobJobSpecJobData) SetDbPassword(v string) {
	o.DbPassword = &v
}

// GetDbPrivs returns the DbPrivs field value if set, zero value otherwise.
func (o *JobsJobJobSpecJobData) GetDbPrivs() string {
	if o == nil || IsNil(o.DbPrivs) {
		var ret string
		return ret
	}
	return *o.DbPrivs
}

// GetDbPrivsOk returns a tuple with the DbPrivs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsJobJobSpecJobData) GetDbPrivsOk() (*string, bool) {
	if o == nil || IsNil(o.DbPrivs) {
		return nil, false
	}
	return o.DbPrivs, true
}

// HasDbPrivs returns a boolean if a field has been set.
func (o *JobsJobJobSpecJobData) HasDbPrivs() bool {
	if o != nil && !IsNil(o.DbPrivs) {
		return true
	}

	return false
}

// SetDbPrivs gets a reference to the given string and assigns it to the DbPrivs field.
func (o *JobsJobJobSpecJobData) SetDbPrivs(v string) {
	o.DbPrivs = &v
}

// GetDbUsername returns the DbUsername field value if set, zero value otherwise.
func (o *JobsJobJobSpecJobData) GetDbUsername() string {
	if o == nil || IsNil(o.DbUsername) {
		var ret string
		return ret
	}
	return *o.DbUsername
}

// GetDbUsernameOk returns a tuple with the DbUsername field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsJobJobSpecJobData) GetDbUsernameOk() (*string, bool) {
	if o == nil || IsNil(o.DbUsername) {
		return nil, false
	}
	return o.DbUsername, true
}

// HasDbUsername returns a boolean if a field has been set.
func (o *JobsJobJobSpecJobData) HasDbUsername() bool {
	if o != nil && !IsNil(o.DbUsername) {
		return true
	}

	return false
}

// SetDbUsername gets a reference to the given string and assigns it to the DbUsername field.
func (o *JobsJobJobSpecJobData) SetDbUsername(v string) {
	o.DbUsername = &v
}

// GetDataCenter returns the DataCenter field value if set, zero value otherwise.
func (o *JobsJobJobSpecJobData) GetDataCenter() int32 {
	if o == nil || IsNil(o.DataCenter) {
		var ret int32
		return ret
	}
	return *o.DataCenter
}

// GetDataCenterOk returns a tuple with the DataCenter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsJobJobSpecJobData) GetDataCenterOk() (*int32, bool) {
	if o == nil || IsNil(o.DataCenter) {
		return nil, false
	}
	return o.DataCenter, true
}

// HasDataCenter returns a boolean if a field has been set.
func (o *JobsJobJobSpecJobData) HasDataCenter() bool {
	if o != nil && !IsNil(o.DataCenter) {
		return true
	}

	return false
}

// SetDataCenter gets a reference to the given int32 and assigns it to the DataCenter field.
func (o *JobsJobJobSpecJobData) SetDataCenter(v int32) {
	o.DataCenter = &v
}

// GetExecUpgradeScript returns the ExecUpgradeScript field value if set, zero value otherwise.
func (o *JobsJobJobSpecJobData) GetExecUpgradeScript() bool {
	if o == nil || IsNil(o.ExecUpgradeScript) {
		var ret bool
		return ret
	}
	return *o.ExecUpgradeScript
}

// GetExecUpgradeScriptOk returns a tuple with the ExecUpgradeScript field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsJobJobSpecJobData) GetExecUpgradeScriptOk() (*bool, bool) {
	if o == nil || IsNil(o.ExecUpgradeScript) {
		return nil, false
	}
	return o.ExecUpgradeScript, true
}

// HasExecUpgradeScript returns a boolean if a field has been set.
func (o *JobsJobJobSpecJobData) HasExecUpgradeScript() bool {
	if o != nil && !IsNil(o.ExecUpgradeScript) {
		return true
	}

	return false
}

// SetExecUpgradeScript gets a reference to the given bool and assigns it to the ExecUpgradeScript field.
func (o *JobsJobJobSpecJobData) SetExecUpgradeScript(v bool) {
	o.ExecUpgradeScript = &v
}

// GetExtended returns the Extended field value if set, zero value otherwise.
func (o *JobsJobJobSpecJobData) GetExtended() bool {
	if o == nil || IsNil(o.Extended) {
		var ret bool
		return ret
	}
	return *o.Extended
}

// GetExtendedOk returns a tuple with the Extended field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsJobJobSpecJobData) GetExtendedOk() (*bool, bool) {
	if o == nil || IsNil(o.Extended) {
		return nil, false
	}
	return o.Extended, true
}

// HasExtended returns a boolean if a field has been set.
func (o *JobsJobJobSpecJobData) HasExtended() bool {
	if o != nil && !IsNil(o.Extended) {
		return true
	}

	return false
}

// SetExtended gets a reference to the given bool and assigns it to the Extended field.
func (o *JobsJobJobSpecJobData) SetExtended(v bool) {
	o.Extended = &v
}

// GetListeningPort returns the ListeningPort field value if set, zero value otherwise.
func (o *JobsJobJobSpecJobData) GetListeningPort() int32 {
	if o == nil || IsNil(o.ListeningPort) {
		var ret int32
		return ret
	}
	return *o.ListeningPort
}

// GetListeningPortOk returns a tuple with the ListeningPort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsJobJobSpecJobData) GetListeningPortOk() (*int32, bool) {
	if o == nil || IsNil(o.ListeningPort) {
		return nil, false
	}
	return o.ListeningPort, true
}

// HasListeningPort returns a boolean if a field has been set.
func (o *JobsJobJobSpecJobData) HasListeningPort() bool {
	if o != nil && !IsNil(o.ListeningPort) {
		return true
	}

	return false
}

// SetListeningPort gets a reference to the given int32 and assigns it to the ListeningPort field.
func (o *JobsJobJobSpecJobData) SetListeningPort(v int32) {
	o.ListeningPort = &v
}

// GetMaskPasswords returns the MaskPasswords field value if set, zero value otherwise.
func (o *JobsJobJobSpecJobData) GetMaskPasswords() bool {
	if o == nil || IsNil(o.MaskPasswords) {
		var ret bool
		return ret
	}
	return *o.MaskPasswords
}

// GetMaskPasswordsOk returns a tuple with the MaskPasswords field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsJobJobSpecJobData) GetMaskPasswordsOk() (*bool, bool) {
	if o == nil || IsNil(o.MaskPasswords) {
		return nil, false
	}
	return o.MaskPasswords, true
}

// HasMaskPasswords returns a boolean if a field has been set.
func (o *JobsJobJobSpecJobData) HasMaskPasswords() bool {
	if o != nil && !IsNil(o.MaskPasswords) {
		return true
	}

	return false
}

// SetMaskPasswords gets a reference to the given bool and assigns it to the MaskPasswords field.
func (o *JobsJobJobSpecJobData) SetMaskPasswords(v bool) {
	o.MaskPasswords = &v
}

// GetMonitorPassword returns the MonitorPassword field value if set, zero value otherwise.
func (o *JobsJobJobSpecJobData) GetMonitorPassword() string {
	if o == nil || IsNil(o.MonitorPassword) {
		var ret string
		return ret
	}
	return *o.MonitorPassword
}

// GetMonitorPasswordOk returns a tuple with the MonitorPassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsJobJobSpecJobData) GetMonitorPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.MonitorPassword) {
		return nil, false
	}
	return o.MonitorPassword, true
}

// HasMonitorPassword returns a boolean if a field has been set.
func (o *JobsJobJobSpecJobData) HasMonitorPassword() bool {
	if o != nil && !IsNil(o.MonitorPassword) {
		return true
	}

	return false
}

// SetMonitorPassword gets a reference to the given string and assigns it to the MonitorPassword field.
func (o *JobsJobJobSpecJobData) SetMonitorPassword(v string) {
	o.MonitorPassword = &v
}

// GetMonitorUser returns the MonitorUser field value if set, zero value otherwise.
func (o *JobsJobJobSpecJobData) GetMonitorUser() string {
	if o == nil || IsNil(o.MonitorUser) {
		var ret string
		return ret
	}
	return *o.MonitorUser
}

// GetMonitorUserOk returns a tuple with the MonitorUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsJobJobSpecJobData) GetMonitorUserOk() (*string, bool) {
	if o == nil || IsNil(o.MonitorUser) {
		return nil, false
	}
	return o.MonitorUser, true
}

// HasMonitorUser returns a boolean if a field has been set.
func (o *JobsJobJobSpecJobData) HasMonitorUser() bool {
	if o != nil && !IsNil(o.MonitorUser) {
		return true
	}

	return false
}

// SetMonitorUser gets a reference to the given string and assigns it to the MonitorUser field.
func (o *JobsJobJobSpecJobData) SetMonitorUser(v string) {
	o.MonitorUser = &v
}

// GetUseClustering returns the UseClustering field value if set, zero value otherwise.
func (o *JobsJobJobSpecJobData) GetUseClustering() bool {
	if o == nil || IsNil(o.UseClustering) {
		var ret bool
		return ret
	}
	return *o.UseClustering
}

// GetUseClusteringOk returns a tuple with the UseClustering field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsJobJobSpecJobData) GetUseClusteringOk() (*bool, bool) {
	if o == nil || IsNil(o.UseClustering) {
		return nil, false
	}
	return o.UseClustering, true
}

// HasUseClustering returns a boolean if a field has been set.
func (o *JobsJobJobSpecJobData) HasUseClustering() bool {
	if o != nil && !IsNil(o.UseClustering) {
		return true
	}

	return false
}

// SetUseClustering gets a reference to the given bool and assigns it to the UseClustering field.
func (o *JobsJobJobSpecJobData) SetUseClustering(v bool) {
	o.UseClustering = &v
}

// GetUseRwSplit returns the UseRwSplit field value if set, zero value otherwise.
func (o *JobsJobJobSpecJobData) GetUseRwSplit() bool {
	if o == nil || IsNil(o.UseRwSplit) {
		var ret bool
		return ret
	}
	return *o.UseRwSplit
}

// GetUseRwSplitOk returns a tuple with the UseRwSplit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsJobJobSpecJobData) GetUseRwSplitOk() (*bool, bool) {
	if o == nil || IsNil(o.UseRwSplit) {
		return nil, false
	}
	return o.UseRwSplit, true
}

// HasUseRwSplit returns a boolean if a field has been set.
func (o *JobsJobJobSpecJobData) HasUseRwSplit() bool {
	if o != nil && !IsNil(o.UseRwSplit) {
		return true
	}

	return false
}

// SetUseRwSplit gets a reference to the given bool and assigns it to the UseRwSplit field.
func (o *JobsJobJobSpecJobData) SetUseRwSplit(v bool) {
	o.UseRwSplit = &v
}

// GetHostname returns the Hostname field value if set, zero value otherwise.
func (o *JobsJobJobSpecJobData) GetHostname() string {
	if o == nil || IsNil(o.Hostname) {
		var ret string
		return ret
	}
	return *o.Hostname
}

// GetHostnameOk returns a tuple with the Hostname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsJobJobSpecJobData) GetHostnameOk() (*string, bool) {
	if o == nil || IsNil(o.Hostname) {
		return nil, false
	}
	return o.Hostname, true
}

// HasHostname returns a boolean if a field has been set.
func (o *JobsJobJobSpecJobData) HasHostname() bool {
	if o != nil && !IsNil(o.Hostname) {
		return true
	}

	return false
}

// SetHostname gets a reference to the given string and assigns it to the Hostname field.
func (o *JobsJobJobSpecJobData) SetHostname(v string) {
	o.Hostname = &v
}

// GetMasterAddress returns the MasterAddress field value if set, zero value otherwise.
func (o *JobsJobJobSpecJobData) GetMasterAddress() string {
	if o == nil || IsNil(o.MasterAddress) {
		var ret string
		return ret
	}
	return *o.MasterAddress
}

// GetMasterAddressOk returns a tuple with the MasterAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsJobJobSpecJobData) GetMasterAddressOk() (*string, bool) {
	if o == nil || IsNil(o.MasterAddress) {
		return nil, false
	}
	return o.MasterAddress, true
}

// HasMasterAddress returns a boolean if a field has been set.
func (o *JobsJobJobSpecJobData) HasMasterAddress() bool {
	if o != nil && !IsNil(o.MasterAddress) {
		return true
	}

	return false
}

// SetMasterAddress gets a reference to the given string and assigns it to the MasterAddress field.
func (o *JobsJobJobSpecJobData) SetMasterAddress(v string) {
	o.MasterAddress = &v
}

// GetMasterDelay returns the MasterDelay field value if set, zero value otherwise.
func (o *JobsJobJobSpecJobData) GetMasterDelay() int32 {
	if o == nil || IsNil(o.MasterDelay) {
		var ret int32
		return ret
	}
	return *o.MasterDelay
}

// GetMasterDelayOk returns a tuple with the MasterDelay field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsJobJobSpecJobData) GetMasterDelayOk() (*int32, bool) {
	if o == nil || IsNil(o.MasterDelay) {
		return nil, false
	}
	return o.MasterDelay, true
}

// HasMasterDelay returns a boolean if a field has been set.
func (o *JobsJobJobSpecJobData) HasMasterDelay() bool {
	if o != nil && !IsNil(o.MasterDelay) {
		return true
	}

	return false
}

// SetMasterDelay gets a reference to the given int32 and assigns it to the MasterDelay field.
func (o *JobsJobJobSpecJobData) SetMasterDelay(v int32) {
	o.MasterDelay = &v
}

// GetIncludeDatabases returns the IncludeDatabases field value if set, zero value otherwise.
func (o *JobsJobJobSpecJobData) GetIncludeDatabases() string {
	if o == nil || IsNil(o.IncludeDatabases) {
		var ret string
		return ret
	}
	return *o.IncludeDatabases
}

// GetIncludeDatabasesOk returns a tuple with the IncludeDatabases field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsJobJobSpecJobData) GetIncludeDatabasesOk() (*string, bool) {
	if o == nil || IsNil(o.IncludeDatabases) {
		return nil, false
	}
	return o.IncludeDatabases, true
}

// HasIncludeDatabases returns a boolean if a field has been set.
func (o *JobsJobJobSpecJobData) HasIncludeDatabases() bool {
	if o != nil && !IsNil(o.IncludeDatabases) {
		return true
	}

	return false
}

// SetIncludeDatabases gets a reference to the given string and assigns it to the IncludeDatabases field.
func (o *JobsJobJobSpecJobData) SetIncludeDatabases(v string) {
	o.IncludeDatabases = &v
}

// GetInstallTimescaledb returns the InstallTimescaledb field value if set, zero value otherwise.
func (o *JobsJobJobSpecJobData) GetInstallTimescaledb() bool {
	if o == nil || IsNil(o.InstallTimescaledb) {
		var ret bool
		return ret
	}
	return *o.InstallTimescaledb
}

// GetInstallTimescaledbOk returns a tuple with the InstallTimescaledb field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsJobJobSpecJobData) GetInstallTimescaledbOk() (*bool, bool) {
	if o == nil || IsNil(o.InstallTimescaledb) {
		return nil, false
	}
	return o.InstallTimescaledb, true
}

// HasInstallTimescaledb returns a boolean if a field has been set.
func (o *JobsJobJobSpecJobData) HasInstallTimescaledb() bool {
	if o != nil && !IsNil(o.InstallTimescaledb) {
		return true
	}

	return false
}

// SetInstallTimescaledb gets a reference to the given bool and assigns it to the InstallTimescaledb field.
func (o *JobsJobJobSpecJobData) SetInstallTimescaledb(v bool) {
	o.InstallTimescaledb = &v
}

// GetUpdateLb returns the UpdateLb field value if set, zero value otherwise.
func (o *JobsJobJobSpecJobData) GetUpdateLb() bool {
	if o == nil || IsNil(o.UpdateLb) {
		var ret bool
		return ret
	}
	return *o.UpdateLb
}

// GetUpdateLbOk returns a tuple with the UpdateLb field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsJobJobSpecJobData) GetUpdateLbOk() (*bool, bool) {
	if o == nil || IsNil(o.UpdateLb) {
		return nil, false
	}
	return o.UpdateLb, true
}

// HasUpdateLb returns a boolean if a field has been set.
func (o *JobsJobJobSpecJobData) HasUpdateLb() bool {
	if o != nil && !IsNil(o.UpdateLb) {
		return true
	}

	return false
}

// SetUpdateLb gets a reference to the given bool and assigns it to the UpdateLb field.
func (o *JobsJobJobSpecJobData) SetUpdateLb(v bool) {
	o.UpdateLb = &v
}

// GetUsePackageForDataDir returns the UsePackageForDataDir field value if set, zero value otherwise.
func (o *JobsJobJobSpecJobData) GetUsePackageForDataDir() bool {
	if o == nil || IsNil(o.UsePackageForDataDir) {
		var ret bool
		return ret
	}
	return *o.UsePackageForDataDir
}

// GetUsePackageForDataDirOk returns a tuple with the UsePackageForDataDir field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsJobJobSpecJobData) GetUsePackageForDataDirOk() (*bool, bool) {
	if o == nil || IsNil(o.UsePackageForDataDir) {
		return nil, false
	}
	return o.UsePackageForDataDir, true
}

// HasUsePackageForDataDir returns a boolean if a field has been set.
func (o *JobsJobJobSpecJobData) HasUsePackageForDataDir() bool {
	if o != nil && !IsNil(o.UsePackageForDataDir) {
		return true
	}

	return false
}

// SetUsePackageForDataDir gets a reference to the given bool and assigns it to the UsePackageForDataDir field.
func (o *JobsJobJobSpecJobData) SetUsePackageForDataDir(v bool) {
	o.UsePackageForDataDir = &v
}

// GetEncryptBackup returns the EncryptBackup field value if set, zero value otherwise.
func (o *JobsJobJobSpecJobData) GetEncryptBackup() bool {
	if o == nil || IsNil(o.EncryptBackup) {
		var ret bool
		return ret
	}
	return *o.EncryptBackup
}

// GetEncryptBackupOk returns a tuple with the EncryptBackup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsJobJobSpecJobData) GetEncryptBackupOk() (*bool, bool) {
	if o == nil || IsNil(o.EncryptBackup) {
		return nil, false
	}
	return o.EncryptBackup, true
}

// HasEncryptBackup returns a boolean if a field has been set.
func (o *JobsJobJobSpecJobData) HasEncryptBackup() bool {
	if o != nil && !IsNil(o.EncryptBackup) {
		return true
	}

	return false
}

// SetEncryptBackup gets a reference to the given bool and assigns it to the EncryptBackup field.
func (o *JobsJobJobSpecJobData) SetEncryptBackup(v bool) {
	o.EncryptBackup = &v
}

// GetThrottleRateNetbw returns the ThrottleRateNetbw field value if set, zero value otherwise.
func (o *JobsJobJobSpecJobData) GetThrottleRateNetbw() int32 {
	if o == nil || IsNil(o.ThrottleRateNetbw) {
		var ret int32
		return ret
	}
	return *o.ThrottleRateNetbw
}

// GetThrottleRateNetbwOk returns a tuple with the ThrottleRateNetbw field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsJobJobSpecJobData) GetThrottleRateNetbwOk() (*int32, bool) {
	if o == nil || IsNil(o.ThrottleRateNetbw) {
		return nil, false
	}
	return o.ThrottleRateNetbw, true
}

// HasThrottleRateNetbw returns a boolean if a field has been set.
func (o *JobsJobJobSpecJobData) HasThrottleRateNetbw() bool {
	if o != nil && !IsNil(o.ThrottleRateNetbw) {
		return true
	}

	return false
}

// SetThrottleRateNetbw gets a reference to the given int32 and assigns it to the ThrottleRateNetbw field.
func (o *JobsJobJobSpecJobData) SetThrottleRateNetbw(v int32) {
	o.ThrottleRateNetbw = &v
}

// GetUsePigz returns the UsePigz field value if set, zero value otherwise.
func (o *JobsJobJobSpecJobData) GetUsePigz() bool {
	if o == nil || IsNil(o.UsePigz) {
		var ret bool
		return ret
	}
	return *o.UsePigz
}

// GetUsePigzOk returns a tuple with the UsePigz field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsJobJobSpecJobData) GetUsePigzOk() (*bool, bool) {
	if o == nil || IsNil(o.UsePigz) {
		return nil, false
	}
	return o.UsePigz, true
}

// HasUsePigz returns a boolean if a field has been set.
func (o *JobsJobJobSpecJobData) HasUsePigz() bool {
	if o != nil && !IsNil(o.UsePigz) {
		return true
	}

	return false
}

// SetUsePigz gets a reference to the given bool and assigns it to the UsePigz field.
func (o *JobsJobJobSpecJobData) SetUsePigz(v bool) {
	o.UsePigz = &v
}

// GetUseQpress returns the UseQpress field value if set, zero value otherwise.
func (o *JobsJobJobSpecJobData) GetUseQpress() bool {
	if o == nil || IsNil(o.UseQpress) {
		var ret bool
		return ret
	}
	return *o.UseQpress
}

// GetUseQpressOk returns a tuple with the UseQpress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsJobJobSpecJobData) GetUseQpressOk() (*bool, bool) {
	if o == nil || IsNil(o.UseQpress) {
		return nil, false
	}
	return o.UseQpress, true
}

// HasUseQpress returns a boolean if a field has been set.
func (o *JobsJobJobSpecJobData) HasUseQpress() bool {
	if o != nil && !IsNil(o.UseQpress) {
		return true
	}

	return false
}

// SetUseQpress gets a reference to the given bool and assigns it to the UseQpress field.
func (o *JobsJobJobSpecJobData) SetUseQpress(v bool) {
	o.UseQpress = &v
}

// GetWsrepDesync returns the WsrepDesync field value if set, zero value otherwise.
func (o *JobsJobJobSpecJobData) GetWsrepDesync() bool {
	if o == nil || IsNil(o.WsrepDesync) {
		var ret bool
		return ret
	}
	return *o.WsrepDesync
}

// GetWsrepDesyncOk returns a tuple with the WsrepDesync field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsJobJobSpecJobData) GetWsrepDesyncOk() (*bool, bool) {
	if o == nil || IsNil(o.WsrepDesync) {
		return nil, false
	}
	return o.WsrepDesync, true
}

// HasWsrepDesync returns a boolean if a field has been set.
func (o *JobsJobJobSpecJobData) HasWsrepDesync() bool {
	if o != nil && !IsNil(o.WsrepDesync) {
		return true
	}

	return false
}

// SetWsrepDesync gets a reference to the given bool and assigns it to the WsrepDesync field.
func (o *JobsJobJobSpecJobData) SetWsrepDesync(v bool) {
	o.WsrepDesync = &v
}

// GetGaleraSegment returns the GaleraSegment field value if set, zero value otherwise.
func (o *JobsJobJobSpecJobData) GetGaleraSegment() string {
	if o == nil || IsNil(o.GaleraSegment) {
		var ret string
		return ret
	}
	return *o.GaleraSegment
}

// GetGaleraSegmentOk returns a tuple with the GaleraSegment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsJobJobSpecJobData) GetGaleraSegmentOk() (*string, bool) {
	if o == nil || IsNil(o.GaleraSegment) {
		return nil, false
	}
	return o.GaleraSegment, true
}

// HasGaleraSegment returns a boolean if a field has been set.
func (o *JobsJobJobSpecJobData) HasGaleraSegment() bool {
	if o != nil && !IsNil(o.GaleraSegment) {
		return true
	}

	return false
}

// SetGaleraSegment gets a reference to the given string and assigns it to the GaleraSegment field.
func (o *JobsJobJobSpecJobData) SetGaleraSegment(v string) {
	o.GaleraSegment = &v
}

// GetXtrabackupBackupLocks returns the XtrabackupBackupLocks field value if set, zero value otherwise.
func (o *JobsJobJobSpecJobData) GetXtrabackupBackupLocks() bool {
	if o == nil || IsNil(o.XtrabackupBackupLocks) {
		var ret bool
		return ret
	}
	return *o.XtrabackupBackupLocks
}

// GetXtrabackupBackupLocksOk returns a tuple with the XtrabackupBackupLocks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsJobJobSpecJobData) GetXtrabackupBackupLocksOk() (*bool, bool) {
	if o == nil || IsNil(o.XtrabackupBackupLocks) {
		return nil, false
	}
	return o.XtrabackupBackupLocks, true
}

// HasXtrabackupBackupLocks returns a boolean if a field has been set.
func (o *JobsJobJobSpecJobData) HasXtrabackupBackupLocks() bool {
	if o != nil && !IsNil(o.XtrabackupBackupLocks) {
		return true
	}

	return false
}

// SetXtrabackupBackupLocks gets a reference to the given bool and assigns it to the XtrabackupBackupLocks field.
func (o *JobsJobJobSpecJobData) SetXtrabackupBackupLocks(v bool) {
	o.XtrabackupBackupLocks = &v
}

// GetXtrabackupLockDdlPerTable returns the XtrabackupLockDdlPerTable field value if set, zero value otherwise.
func (o *JobsJobJobSpecJobData) GetXtrabackupLockDdlPerTable() bool {
	if o == nil || IsNil(o.XtrabackupLockDdlPerTable) {
		var ret bool
		return ret
	}
	return *o.XtrabackupLockDdlPerTable
}

// GetXtrabackupLockDdlPerTableOk returns a tuple with the XtrabackupLockDdlPerTable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsJobJobSpecJobData) GetXtrabackupLockDdlPerTableOk() (*bool, bool) {
	if o == nil || IsNil(o.XtrabackupLockDdlPerTable) {
		return nil, false
	}
	return o.XtrabackupLockDdlPerTable, true
}

// HasXtrabackupLockDdlPerTable returns a boolean if a field has been set.
func (o *JobsJobJobSpecJobData) HasXtrabackupLockDdlPerTable() bool {
	if o != nil && !IsNil(o.XtrabackupLockDdlPerTable) {
		return true
	}

	return false
}

// SetXtrabackupLockDdlPerTable gets a reference to the given bool and assigns it to the XtrabackupLockDdlPerTable field.
func (o *JobsJobJobSpecJobData) SetXtrabackupLockDdlPerTable(v bool) {
	o.XtrabackupLockDdlPerTable = &v
}

// GetXtrabackupParallellism returns the XtrabackupParallellism field value if set, zero value otherwise.
func (o *JobsJobJobSpecJobData) GetXtrabackupParallellism() int32 {
	if o == nil || IsNil(o.XtrabackupParallellism) {
		var ret int32
		return ret
	}
	return *o.XtrabackupParallellism
}

// GetXtrabackupParallellismOk returns a tuple with the XtrabackupParallellism field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsJobJobSpecJobData) GetXtrabackupParallellismOk() (*int32, bool) {
	if o == nil || IsNil(o.XtrabackupParallellism) {
		return nil, false
	}
	return o.XtrabackupParallellism, true
}

// HasXtrabackupParallellism returns a boolean if a field has been set.
func (o *JobsJobJobSpecJobData) HasXtrabackupParallellism() bool {
	if o != nil && !IsNil(o.XtrabackupParallellism) {
		return true
	}

	return false
}

// SetXtrabackupParallellism gets a reference to the given int32 and assigns it to the XtrabackupParallellism field.
func (o *JobsJobJobSpecJobData) SetXtrabackupParallellism(v int32) {
	o.XtrabackupParallellism = &v
}

// GetVerifyBackupDelay returns the VerifyBackupDelay field value if set, zero value otherwise.
func (o *JobsJobJobSpecJobData) GetVerifyBackupDelay() int32 {
	if o == nil || IsNil(o.VerifyBackupDelay) {
		var ret int32
		return ret
	}
	return *o.VerifyBackupDelay
}

// GetVerifyBackupDelayOk returns a tuple with the VerifyBackupDelay field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsJobJobSpecJobData) GetVerifyBackupDelayOk() (*int32, bool) {
	if o == nil || IsNil(o.VerifyBackupDelay) {
		return nil, false
	}
	return o.VerifyBackupDelay, true
}

// HasVerifyBackupDelay returns a boolean if a field has been set.
func (o *JobsJobJobSpecJobData) HasVerifyBackupDelay() bool {
	if o != nil && !IsNil(o.VerifyBackupDelay) {
		return true
	}

	return false
}

// SetVerifyBackupDelay gets a reference to the given int32 and assigns it to the VerifyBackupDelay field.
func (o *JobsJobJobSpecJobData) SetVerifyBackupDelay(v int32) {
	o.VerifyBackupDelay = &v
}

// GetDatadir returns the Datadir field value if set, zero value otherwise.
func (o *JobsJobJobSpecJobData) GetDatadir() string {
	if o == nil || IsNil(o.Datadir) {
		var ret string
		return ret
	}
	return *o.Datadir
}

// GetDatadirOk returns a tuple with the Datadir field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsJobJobSpecJobData) GetDatadirOk() (*string, bool) {
	if o == nil || IsNil(o.Datadir) {
		return nil, false
	}
	return o.Datadir, true
}

// HasDatadir returns a boolean if a field has been set.
func (o *JobsJobJobSpecJobData) HasDatadir() bool {
	if o != nil && !IsNil(o.Datadir) {
		return true
	}

	return false
}

// SetDatadir gets a reference to the given string and assigns it to the Datadir field.
func (o *JobsJobJobSpecJobData) SetDatadir(v string) {
	o.Datadir = &v
}

// GetDbUser returns the DbUser field value if set, zero value otherwise.
func (o *JobsJobJobSpecJobData) GetDbUser() string {
	if o == nil || IsNil(o.DbUser) {
		var ret string
		return ret
	}
	return *o.DbUser
}

// GetDbUserOk returns a tuple with the DbUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsJobJobSpecJobData) GetDbUserOk() (*string, bool) {
	if o == nil || IsNil(o.DbUser) {
		return nil, false
	}
	return o.DbUser, true
}

// HasDbUser returns a boolean if a field has been set.
func (o *JobsJobJobSpecJobData) HasDbUser() bool {
	if o != nil && !IsNil(o.DbUser) {
		return true
	}

	return false
}

// SetDbUser gets a reference to the given string and assigns it to the DbUser field.
func (o *JobsJobJobSpecJobData) SetDbUser(v string) {
	o.DbUser = &v
}

// GetDisableFirewall returns the DisableFirewall field value if set, zero value otherwise.
func (o *JobsJobJobSpecJobData) GetDisableFirewall() bool {
	if o == nil || IsNil(o.DisableFirewall) {
		var ret bool
		return ret
	}
	return *o.DisableFirewall
}

// GetDisableFirewallOk returns a tuple with the DisableFirewall field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsJobJobSpecJobData) GetDisableFirewallOk() (*bool, bool) {
	if o == nil || IsNil(o.DisableFirewall) {
		return nil, false
	}
	return o.DisableFirewall, true
}

// HasDisableFirewall returns a boolean if a field has been set.
func (o *JobsJobJobSpecJobData) HasDisableFirewall() bool {
	if o != nil && !IsNil(o.DisableFirewall) {
		return true
	}

	return false
}

// SetDisableFirewall gets a reference to the given bool and assigns it to the DisableFirewall field.
func (o *JobsJobJobSpecJobData) SetDisableFirewall(v bool) {
	o.DisableFirewall = &v
}

// GetDisableSelinux returns the DisableSelinux field value if set, zero value otherwise.
func (o *JobsJobJobSpecJobData) GetDisableSelinux() bool {
	if o == nil || IsNil(o.DisableSelinux) {
		var ret bool
		return ret
	}
	return *o.DisableSelinux
}

// GetDisableSelinuxOk returns a tuple with the DisableSelinux field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsJobJobSpecJobData) GetDisableSelinuxOk() (*bool, bool) {
	if o == nil || IsNil(o.DisableSelinux) {
		return nil, false
	}
	return o.DisableSelinux, true
}

// HasDisableSelinux returns a boolean if a field has been set.
func (o *JobsJobJobSpecJobData) HasDisableSelinux() bool {
	if o != nil && !IsNil(o.DisableSelinux) {
		return true
	}

	return false
}

// SetDisableSelinux gets a reference to the given bool and assigns it to the DisableSelinux field.
func (o *JobsJobJobSpecJobData) SetDisableSelinux(v bool) {
	o.DisableSelinux = &v
}

// GetEnableUninstall returns the EnableUninstall field value if set, zero value otherwise.
func (o *JobsJobJobSpecJobData) GetEnableUninstall() bool {
	if o == nil || IsNil(o.EnableUninstall) {
		var ret bool
		return ret
	}
	return *o.EnableUninstall
}

// GetEnableUninstallOk returns a tuple with the EnableUninstall field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsJobJobSpecJobData) GetEnableUninstallOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableUninstall) {
		return nil, false
	}
	return o.EnableUninstall, true
}

// HasEnableUninstall returns a boolean if a field has been set.
func (o *JobsJobJobSpecJobData) HasEnableUninstall() bool {
	if o != nil && !IsNil(o.EnableUninstall) {
		return true
	}

	return false
}

// SetEnableUninstall gets a reference to the given bool and assigns it to the EnableUninstall field.
func (o *JobsJobJobSpecJobData) SetEnableUninstall(v bool) {
	o.EnableUninstall = &v
}

// GetUnregisterOnly returns the UnregisterOnly field value if set, zero value otherwise.
func (o *JobsJobJobSpecJobData) GetUnregisterOnly() bool {
	if o == nil || IsNil(o.UnregisterOnly) {
		var ret bool
		return ret
	}
	return *o.UnregisterOnly
}

// GetUnregisterOnlyOk returns a tuple with the UnregisterOnly field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsJobJobSpecJobData) GetUnregisterOnlyOk() (*bool, bool) {
	if o == nil || IsNil(o.UnregisterOnly) {
		return nil, false
	}
	return o.UnregisterOnly, true
}

// HasUnregisterOnly returns a boolean if a field has been set.
func (o *JobsJobJobSpecJobData) HasUnregisterOnly() bool {
	if o != nil && !IsNil(o.UnregisterOnly) {
		return true
	}

	return false
}

// SetUnregisterOnly gets a reference to the given bool and assigns it to the UnregisterOnly field.
func (o *JobsJobJobSpecJobData) SetUnregisterOnly(v bool) {
	o.UnregisterOnly = &v
}

// GetGenerateToken returns the GenerateToken field value if set, zero value otherwise.
func (o *JobsJobJobSpecJobData) GetGenerateToken() bool {
	if o == nil || IsNil(o.GenerateToken) {
		var ret bool
		return ret
	}
	return *o.GenerateToken
}

// GetGenerateTokenOk returns a tuple with the GenerateToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsJobJobSpecJobData) GetGenerateTokenOk() (*bool, bool) {
	if o == nil || IsNil(o.GenerateToken) {
		return nil, false
	}
	return o.GenerateToken, true
}

// HasGenerateToken returns a boolean if a field has been set.
func (o *JobsJobJobSpecJobData) HasGenerateToken() bool {
	if o != nil && !IsNil(o.GenerateToken) {
		return true
	}

	return false
}

// SetGenerateToken gets a reference to the given bool and assigns it to the GenerateToken field.
func (o *JobsJobJobSpecJobData) SetGenerateToken(v bool) {
	o.GenerateToken = &v
}

// GetInstallSoftware returns the InstallSoftware field value if set, zero value otherwise.
func (o *JobsJobJobSpecJobData) GetInstallSoftware() bool {
	if o == nil || IsNil(o.InstallSoftware) {
		var ret bool
		return ret
	}
	return *o.InstallSoftware
}

// GetInstallSoftwareOk returns a tuple with the InstallSoftware field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsJobJobSpecJobData) GetInstallSoftwareOk() (*bool, bool) {
	if o == nil || IsNil(o.InstallSoftware) {
		return nil, false
	}
	return o.InstallSoftware, true
}

// HasInstallSoftware returns a boolean if a field has been set.
func (o *JobsJobJobSpecJobData) HasInstallSoftware() bool {
	if o != nil && !IsNil(o.InstallSoftware) {
		return true
	}

	return false
}

// SetInstallSoftware gets a reference to the given bool and assigns it to the InstallSoftware field.
func (o *JobsJobJobSpecJobData) SetInstallSoftware(v bool) {
	o.InstallSoftware = &v
}

// GetUseInternalRepos returns the UseInternalRepos field value if set, zero value otherwise.
func (o *JobsJobJobSpecJobData) GetUseInternalRepos() bool {
	if o == nil || IsNil(o.UseInternalRepos) {
		var ret bool
		return ret
	}
	return *o.UseInternalRepos
}

// GetUseInternalReposOk returns a tuple with the UseInternalRepos field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsJobJobSpecJobData) GetUseInternalReposOk() (*bool, bool) {
	if o == nil || IsNil(o.UseInternalRepos) {
		return nil, false
	}
	return o.UseInternalRepos, true
}

// HasUseInternalRepos returns a boolean if a field has been set.
func (o *JobsJobJobSpecJobData) HasUseInternalRepos() bool {
	if o != nil && !IsNil(o.UseInternalRepos) {
		return true
	}

	return false
}

// SetUseInternalRepos gets a reference to the given bool and assigns it to the UseInternalRepos field.
func (o *JobsJobJobSpecJobData) SetUseInternalRepos(v bool) {
	o.UseInternalRepos = &v
}

// GetLocalRepository returns the LocalRepository field value if set, zero value otherwise.
func (o *JobsJobJobSpecJobData) GetLocalRepository() string {
	if o == nil || IsNil(o.LocalRepository) {
		var ret string
		return ret
	}
	return *o.LocalRepository
}

// GetLocalRepositoryOk returns a tuple with the LocalRepository field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsJobJobSpecJobData) GetLocalRepositoryOk() (*string, bool) {
	if o == nil || IsNil(o.LocalRepository) {
		return nil, false
	}
	return o.LocalRepository, true
}

// HasLocalRepository returns a boolean if a field has been set.
func (o *JobsJobJobSpecJobData) HasLocalRepository() bool {
	if o != nil && !IsNil(o.LocalRepository) {
		return true
	}

	return false
}

// SetLocalRepository gets a reference to the given string and assigns it to the LocalRepository field.
func (o *JobsJobJobSpecJobData) SetLocalRepository(v string) {
	o.LocalRepository = &v
}

// GetEnableMysqlUninstall returns the EnableMysqlUninstall field value if set, zero value otherwise.
func (o *JobsJobJobSpecJobData) GetEnableMysqlUninstall() bool {
	if o == nil || IsNil(o.EnableMysqlUninstall) {
		var ret bool
		return ret
	}
	return *o.EnableMysqlUninstall
}

// GetEnableMysqlUninstallOk returns a tuple with the EnableMysqlUninstall field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsJobJobSpecJobData) GetEnableMysqlUninstallOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableMysqlUninstall) {
		return nil, false
	}
	return o.EnableMysqlUninstall, true
}

// HasEnableMysqlUninstall returns a boolean if a field has been set.
func (o *JobsJobJobSpecJobData) HasEnableMysqlUninstall() bool {
	if o != nil && !IsNil(o.EnableMysqlUninstall) {
		return true
	}

	return false
}

// SetEnableMysqlUninstall gets a reference to the given bool and assigns it to the EnableMysqlUninstall field.
func (o *JobsJobJobSpecJobData) SetEnableMysqlUninstall(v bool) {
	o.EnableMysqlUninstall = &v
}

// GetMysqlSemiSync returns the MysqlSemiSync field value if set, zero value otherwise.
func (o *JobsJobJobSpecJobData) GetMysqlSemiSync() bool {
	if o == nil || IsNil(o.MysqlSemiSync) {
		var ret bool
		return ret
	}
	return *o.MysqlSemiSync
}

// GetMysqlSemiSyncOk returns a tuple with the MysqlSemiSync field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsJobJobSpecJobData) GetMysqlSemiSyncOk() (*bool, bool) {
	if o == nil || IsNil(o.MysqlSemiSync) {
		return nil, false
	}
	return o.MysqlSemiSync, true
}

// HasMysqlSemiSync returns a boolean if a field has been set.
func (o *JobsJobJobSpecJobData) HasMysqlSemiSync() bool {
	if o != nil && !IsNil(o.MysqlSemiSync) {
		return true
	}

	return false
}

// SetMysqlSemiSync gets a reference to the given bool and assigns it to the MysqlSemiSync field.
func (o *JobsJobJobSpecJobData) SetMysqlSemiSync(v bool) {
	o.MysqlSemiSync = &v
}

// GetEnableSsl returns the EnableSsl field value if set, zero value otherwise.
func (o *JobsJobJobSpecJobData) GetEnableSsl() bool {
	if o == nil || IsNil(o.EnableSsl) {
		var ret bool
		return ret
	}
	return *o.EnableSsl
}

// GetEnableSslOk returns a tuple with the EnableSsl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsJobJobSpecJobData) GetEnableSslOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableSsl) {
		return nil, false
	}
	return o.EnableSsl, true
}

// HasEnableSsl returns a boolean if a field has been set.
func (o *JobsJobJobSpecJobData) HasEnableSsl() bool {
	if o != nil && !IsNil(o.EnableSsl) {
		return true
	}

	return false
}

// SetEnableSsl gets a reference to the given bool and assigns it to the EnableSsl field.
func (o *JobsJobJobSpecJobData) SetEnableSsl(v bool) {
	o.EnableSsl = &v
}

// GetMongosConfTemplate returns the MongosConfTemplate field value if set, zero value otherwise.
func (o *JobsJobJobSpecJobData) GetMongosConfTemplate() string {
	if o == nil || IsNil(o.MongosConfTemplate) {
		var ret string
		return ret
	}
	return *o.MongosConfTemplate
}

// GetMongosConfTemplateOk returns a tuple with the MongosConfTemplate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsJobJobSpecJobData) GetMongosConfTemplateOk() (*string, bool) {
	if o == nil || IsNil(o.MongosConfTemplate) {
		return nil, false
	}
	return o.MongosConfTemplate, true
}

// HasMongosConfTemplate returns a boolean if a field has been set.
func (o *JobsJobJobSpecJobData) HasMongosConfTemplate() bool {
	if o != nil && !IsNil(o.MongosConfTemplate) {
		return true
	}

	return false
}

// SetMongosConfTemplate gets a reference to the given string and assigns it to the MongosConfTemplate field.
func (o *JobsJobJobSpecJobData) SetMongosConfTemplate(v string) {
	o.MongosConfTemplate = &v
}

// GetMongodbAuthdb returns the MongodbAuthdb field value if set, zero value otherwise.
func (o *JobsJobJobSpecJobData) GetMongodbAuthdb() string {
	if o == nil || IsNil(o.MongodbAuthdb) {
		var ret string
		return ret
	}
	return *o.MongodbAuthdb
}

// GetMongodbAuthdbOk returns a tuple with the MongodbAuthdb field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsJobJobSpecJobData) GetMongodbAuthdbOk() (*string, bool) {
	if o == nil || IsNil(o.MongodbAuthdb) {
		return nil, false
	}
	return o.MongodbAuthdb, true
}

// HasMongodbAuthdb returns a boolean if a field has been set.
func (o *JobsJobJobSpecJobData) HasMongodbAuthdb() bool {
	if o != nil && !IsNil(o.MongodbAuthdb) {
		return true
	}

	return false
}

// SetMongodbAuthdb gets a reference to the given string and assigns it to the MongodbAuthdb field.
func (o *JobsJobJobSpecJobData) SetMongodbAuthdb(v string) {
	o.MongodbAuthdb = &v
}

// GetNodeType returns the NodeType field value if set, zero value otherwise.
func (o *JobsJobJobSpecJobData) GetNodeType() int32 {
	if o == nil || IsNil(o.NodeType) {
		var ret int32
		return ret
	}
	return *o.NodeType
}

// GetNodeTypeOk returns a tuple with the NodeType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsJobJobSpecJobData) GetNodeTypeOk() (*int32, bool) {
	if o == nil || IsNil(o.NodeType) {
		return nil, false
	}
	return o.NodeType, true
}

// HasNodeType returns a boolean if a field has been set.
func (o *JobsJobJobSpecJobData) HasNodeType() bool {
	if o != nil && !IsNil(o.NodeType) {
		return true
	}

	return false
}

// SetNodeType gets a reference to the given int32 and assigns it to the NodeType field.
func (o *JobsJobJobSpecJobData) SetNodeType(v int32) {
	o.NodeType = &v
}

// GetOverwriteMysqlchk returns the OverwriteMysqlchk field value if set, zero value otherwise.
func (o *JobsJobJobSpecJobData) GetOverwriteMysqlchk() bool {
	if o == nil || IsNil(o.OverwriteMysqlchk) {
		var ret bool
		return ret
	}
	return *o.OverwriteMysqlchk
}

// GetOverwriteMysqlchkOk returns a tuple with the OverwriteMysqlchk field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsJobJobSpecJobData) GetOverwriteMysqlchkOk() (*bool, bool) {
	if o == nil || IsNil(o.OverwriteMysqlchk) {
		return nil, false
	}
	return o.OverwriteMysqlchk, true
}

// HasOverwriteMysqlchk returns a boolean if a field has been set.
func (o *JobsJobJobSpecJobData) HasOverwriteMysqlchk() bool {
	if o != nil && !IsNil(o.OverwriteMysqlchk) {
		return true
	}

	return false
}

// SetOverwriteMysqlchk gets a reference to the given bool and assigns it to the OverwriteMysqlchk field.
func (o *JobsJobJobSpecJobData) SetOverwriteMysqlchk(v bool) {
	o.OverwriteMysqlchk = &v
}

// GetPort returns the Port field value if set, zero value otherwise.
func (o *JobsJobJobSpecJobData) GetPort() int32 {
	if o == nil || IsNil(o.Port) {
		var ret int32
		return ret
	}
	return *o.Port
}

// GetPortOk returns a tuple with the Port field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsJobJobSpecJobData) GetPortOk() (*int32, bool) {
	if o == nil || IsNil(o.Port) {
		return nil, false
	}
	return o.Port, true
}

// HasPort returns a boolean if a field has been set.
func (o *JobsJobJobSpecJobData) HasPort() bool {
	if o != nil && !IsNil(o.Port) {
		return true
	}

	return false
}

// SetPort gets a reference to the given int32 and assigns it to the Port field.
func (o *JobsJobJobSpecJobData) SetPort(v int32) {
	o.Port = &v
}

// GetSentinelPort returns the SentinelPort field value if set, zero value otherwise.
func (o *JobsJobJobSpecJobData) GetSentinelPort() string {
	if o == nil || IsNil(o.SentinelPort) {
		var ret string
		return ret
	}
	return *o.SentinelPort
}

// GetSentinelPortOk returns a tuple with the SentinelPort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsJobJobSpecJobData) GetSentinelPortOk() (*string, bool) {
	if o == nil || IsNil(o.SentinelPort) {
		return nil, false
	}
	return o.SentinelPort, true
}

// HasSentinelPort returns a boolean if a field has been set.
func (o *JobsJobJobSpecJobData) HasSentinelPort() bool {
	if o != nil && !IsNil(o.SentinelPort) {
		return true
	}

	return false
}

// SetSentinelPort gets a reference to the given string and assigns it to the SentinelPort field.
func (o *JobsJobJobSpecJobData) SetSentinelPort(v string) {
	o.SentinelPort = &v
}

// GetSshKeyfile returns the SshKeyfile field value if set, zero value otherwise.
func (o *JobsJobJobSpecJobData) GetSshKeyfile() string {
	if o == nil || IsNil(o.SshKeyfile) {
		var ret string
		return ret
	}
	return *o.SshKeyfile
}

// GetSshKeyfileOk returns a tuple with the SshKeyfile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsJobJobSpecJobData) GetSshKeyfileOk() (*string, bool) {
	if o == nil || IsNil(o.SshKeyfile) {
		return nil, false
	}
	return o.SshKeyfile, true
}

// HasSshKeyfile returns a boolean if a field has been set.
func (o *JobsJobJobSpecJobData) HasSshKeyfile() bool {
	if o != nil && !IsNil(o.SshKeyfile) {
		return true
	}

	return false
}

// SetSshKeyfile gets a reference to the given string and assigns it to the SshKeyfile field.
func (o *JobsJobJobSpecJobData) SetSshKeyfile(v string) {
	o.SshKeyfile = &v
}

// GetSshPort returns the SshPort field value if set, zero value otherwise.
func (o *JobsJobJobSpecJobData) GetSshPort() string {
	if o == nil || IsNil(o.SshPort) {
		var ret string
		return ret
	}
	return *o.SshPort
}

// GetSshPortOk returns a tuple with the SshPort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsJobJobSpecJobData) GetSshPortOk() (*string, bool) {
	if o == nil || IsNil(o.SshPort) {
		return nil, false
	}
	return o.SshPort, true
}

// HasSshPort returns a boolean if a field has been set.
func (o *JobsJobJobSpecJobData) HasSshPort() bool {
	if o != nil && !IsNil(o.SshPort) {
		return true
	}

	return false
}

// SetSshPort gets a reference to the given string and assigns it to the SshPort field.
func (o *JobsJobJobSpecJobData) SetSshPort(v string) {
	o.SshPort = &v
}

// GetSshUser returns the SshUser field value if set, zero value otherwise.
func (o *JobsJobJobSpecJobData) GetSshUser() string {
	if o == nil || IsNil(o.SshUser) {
		var ret string
		return ret
	}
	return *o.SshUser
}

// GetSshUserOk returns a tuple with the SshUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsJobJobSpecJobData) GetSshUserOk() (*string, bool) {
	if o == nil || IsNil(o.SshUser) {
		return nil, false
	}
	return o.SshUser, true
}

// HasSshUser returns a boolean if a field has been set.
func (o *JobsJobJobSpecJobData) HasSshUser() bool {
	if o != nil && !IsNil(o.SshUser) {
		return true
	}

	return false
}

// SetSshUser gets a reference to the given string and assigns it to the SshUser field.
func (o *JobsJobJobSpecJobData) SetSshUser(v string) {
	o.SshUser = &v
}

// GetSudoPassword returns the SudoPassword field value if set, zero value otherwise.
func (o *JobsJobJobSpecJobData) GetSudoPassword() string {
	if o == nil || IsNil(o.SudoPassword) {
		var ret string
		return ret
	}
	return *o.SudoPassword
}

// GetSudoPasswordOk returns a tuple with the SudoPassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsJobJobSpecJobData) GetSudoPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.SudoPassword) {
		return nil, false
	}
	return o.SudoPassword, true
}

// HasSudoPassword returns a boolean if a field has been set.
func (o *JobsJobJobSpecJobData) HasSudoPassword() bool {
	if o != nil && !IsNil(o.SudoPassword) {
		return true
	}

	return false
}

// SetSudoPassword gets a reference to the given string and assigns it to the SudoPassword field.
func (o *JobsJobJobSpecJobData) SetSudoPassword(v string) {
	o.SudoPassword = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *JobsJobJobSpecJobData) GetUserId() int32 {
	if o == nil || IsNil(o.UserId) {
		var ret int32
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsJobJobSpecJobData) GetUserIdOk() (*int32, bool) {
	if o == nil || IsNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *JobsJobJobSpecJobData) HasUserId() bool {
	if o != nil && !IsNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given int32 and assigns it to the UserId field.
func (o *JobsJobJobSpecJobData) SetUserId(v int32) {
	o.UserId = &v
}

// GetVendor returns the Vendor field value if set, zero value otherwise.
func (o *JobsJobJobSpecJobData) GetVendor() string {
	if o == nil || IsNil(o.Vendor) {
		var ret string
		return ret
	}
	return *o.Vendor
}

// GetVendorOk returns a tuple with the Vendor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsJobJobSpecJobData) GetVendorOk() (*string, bool) {
	if o == nil || IsNil(o.Vendor) {
		return nil, false
	}
	return o.Vendor, true
}

// HasVendor returns a boolean if a field has been set.
func (o *JobsJobJobSpecJobData) HasVendor() bool {
	if o != nil && !IsNil(o.Vendor) {
		return true
	}

	return false
}

// SetVendor gets a reference to the given string and assigns it to the Vendor field.
func (o *JobsJobJobSpecJobData) SetVendor(v string) {
	o.Vendor = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *JobsJobJobSpecJobData) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsJobJobSpecJobData) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *JobsJobJobSpecJobData) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *JobsJobJobSpecJobData) SetType(v string) {
	o.Type = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *JobsJobJobSpecJobData) GetVersion() string {
	if o == nil || IsNil(o.Version) {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsJobJobSpecJobData) GetVersionOk() (*string, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *JobsJobJobSpecJobData) HasVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *JobsJobJobSpecJobData) SetVersion(v string) {
	o.Version = &v
}

// GetSoftwarePackage returns the SoftwarePackage field value if set, zero value otherwise.
func (o *JobsJobJobSpecJobData) GetSoftwarePackage() string {
	if o == nil || IsNil(o.SoftwarePackage) {
		var ret string
		return ret
	}
	return *o.SoftwarePackage
}

// GetSoftwarePackageOk returns a tuple with the SoftwarePackage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsJobJobSpecJobData) GetSoftwarePackageOk() (*string, bool) {
	if o == nil || IsNil(o.SoftwarePackage) {
		return nil, false
	}
	return o.SoftwarePackage, true
}

// HasSoftwarePackage returns a boolean if a field has been set.
func (o *JobsJobJobSpecJobData) HasSoftwarePackage() bool {
	if o != nil && !IsNil(o.SoftwarePackage) {
		return true
	}

	return false
}

// SetSoftwarePackage gets a reference to the given string and assigns it to the SoftwarePackage field.
func (o *JobsJobJobSpecJobData) SetSoftwarePackage(v string) {
	o.SoftwarePackage = &v
}

// GetServerAddress returns the ServerAddress field value if set, zero value otherwise.
func (o *JobsJobJobSpecJobData) GetServerAddress() string {
	if o == nil || IsNil(o.ServerAddress) {
		var ret string
		return ret
	}
	return *o.ServerAddress
}

// GetServerAddressOk returns a tuple with the ServerAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsJobJobSpecJobData) GetServerAddressOk() (*string, bool) {
	if o == nil || IsNil(o.ServerAddress) {
		return nil, false
	}
	return o.ServerAddress, true
}

// HasServerAddress returns a boolean if a field has been set.
func (o *JobsJobJobSpecJobData) HasServerAddress() bool {
	if o != nil && !IsNil(o.ServerAddress) {
		return true
	}

	return false
}

// SetServerAddress gets a reference to the given string and assigns it to the ServerAddress field.
func (o *JobsJobJobSpecJobData) SetServerAddress(v string) {
	o.ServerAddress = &v
}

// GetTerminateDbServer returns the TerminateDbServer field value if set, zero value otherwise.
func (o *JobsJobJobSpecJobData) GetTerminateDbServer() bool {
	if o == nil || IsNil(o.TerminateDbServer) {
		var ret bool
		return ret
	}
	return *o.TerminateDbServer
}

// GetTerminateDbServerOk returns a tuple with the TerminateDbServer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsJobJobSpecJobData) GetTerminateDbServerOk() (*bool, bool) {
	if o == nil || IsNil(o.TerminateDbServer) {
		return nil, false
	}
	return o.TerminateDbServer, true
}

// HasTerminateDbServer returns a boolean if a field has been set.
func (o *JobsJobJobSpecJobData) HasTerminateDbServer() bool {
	if o != nil && !IsNil(o.TerminateDbServer) {
		return true
	}

	return false
}

// SetTerminateDbServer gets a reference to the given bool and assigns it to the TerminateDbServer field.
func (o *JobsJobJobSpecJobData) SetTerminateDbServer(v bool) {
	o.TerminateDbServer = &v
}

// GetXtrabackupUseMemory returns the XtrabackupUseMemory field value if set, zero value otherwise.
func (o *JobsJobJobSpecJobData) GetXtrabackupUseMemory() int32 {
	if o == nil || IsNil(o.XtrabackupUseMemory) {
		var ret int32
		return ret
	}
	return *o.XtrabackupUseMemory
}

// GetXtrabackupUseMemoryOk returns a tuple with the XtrabackupUseMemory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsJobJobSpecJobData) GetXtrabackupUseMemoryOk() (*int32, bool) {
	if o == nil || IsNil(o.XtrabackupUseMemory) {
		return nil, false
	}
	return o.XtrabackupUseMemory, true
}

// HasXtrabackupUseMemory returns a boolean if a field has been set.
func (o *JobsJobJobSpecJobData) HasXtrabackupUseMemory() bool {
	if o != nil && !IsNil(o.XtrabackupUseMemory) {
		return true
	}

	return false
}

// SetXtrabackupUseMemory gets a reference to the given int32 and assigns it to the XtrabackupUseMemory field.
func (o *JobsJobJobSpecJobData) SetXtrabackupUseMemory(v int32) {
	o.XtrabackupUseMemory = &v
}

// GetInitial returns the Initial field value if set, zero value otherwise.
func (o *JobsJobJobSpecJobData) GetInitial() bool {
	if o == nil || IsNil(o.Initial) {
		var ret bool
		return ret
	}
	return *o.Initial
}

// GetInitialOk returns a tuple with the Initial field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsJobJobSpecJobData) GetInitialOk() (*bool, bool) {
	if o == nil || IsNil(o.Initial) {
		return nil, false
	}
	return o.Initial, true
}

// HasInitial returns a boolean if a field has been set.
func (o *JobsJobJobSpecJobData) HasInitial() bool {
	if o != nil && !IsNil(o.Initial) {
		return true
	}

	return false
}

// SetInitial gets a reference to the given bool and assigns it to the Initial field.
func (o *JobsJobJobSpecJobData) SetInitial(v bool) {
	o.Initial = &v
}

// GetReboot returns the Reboot field value if set, zero value otherwise.
func (o *JobsJobJobSpecJobData) GetReboot() bool {
	if o == nil || IsNil(o.Reboot) {
		var ret bool
		return ret
	}
	return *o.Reboot
}

// GetRebootOk returns a tuple with the Reboot field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsJobJobSpecJobData) GetRebootOk() (*bool, bool) {
	if o == nil || IsNil(o.Reboot) {
		return nil, false
	}
	return o.Reboot, true
}

// HasReboot returns a boolean if a field has been set.
func (o *JobsJobJobSpecJobData) HasReboot() bool {
	if o != nil && !IsNil(o.Reboot) {
		return true
	}

	return false
}

// SetReboot gets a reference to the given bool and assigns it to the Reboot field.
func (o *JobsJobJobSpecJobData) SetReboot(v bool) {
	o.Reboot = &v
}

// GetSlaveAddress returns the SlaveAddress field value if set, zero value otherwise.
func (o *JobsJobJobSpecJobData) GetSlaveAddress() string {
	if o == nil || IsNil(o.SlaveAddress) {
		var ret string
		return ret
	}
	return *o.SlaveAddress
}

// GetSlaveAddressOk returns a tuple with the SlaveAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsJobJobSpecJobData) GetSlaveAddressOk() (*string, bool) {
	if o == nil || IsNil(o.SlaveAddress) {
		return nil, false
	}
	return o.SlaveAddress, true
}

// HasSlaveAddress returns a boolean if a field has been set.
func (o *JobsJobJobSpecJobData) HasSlaveAddress() bool {
	if o != nil && !IsNil(o.SlaveAddress) {
		return true
	}

	return false
}

// SetSlaveAddress gets a reference to the given string and assigns it to the SlaveAddress field.
func (o *JobsJobJobSpecJobData) SetSlaveAddress(v string) {
	o.SlaveAddress = &v
}

// GetForce returns the Force field value if set, zero value otherwise.
func (o *JobsJobJobSpecJobData) GetForce() bool {
	if o == nil || IsNil(o.Force) {
		var ret bool
		return ret
	}
	return *o.Force
}

// GetForceOk returns a tuple with the Force field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsJobJobSpecJobData) GetForceOk() (*bool, bool) {
	if o == nil || IsNil(o.Force) {
		return nil, false
	}
	return o.Force, true
}

// HasForce returns a boolean if a field has been set.
func (o *JobsJobJobSpecJobData) HasForce() bool {
	if o != nil && !IsNil(o.Force) {
		return true
	}

	return false
}

// SetForce gets a reference to the given bool and assigns it to the Force field.
func (o *JobsJobJobSpecJobData) SetForce(v bool) {
	o.Force = &v
}

// GetForceStop returns the ForceStop field value if set, zero value otherwise.
func (o *JobsJobJobSpecJobData) GetForceStop() bool {
	if o == nil || IsNil(o.ForceStop) {
		var ret bool
		return ret
	}
	return *o.ForceStop
}

// GetForceStopOk returns a tuple with the ForceStop field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsJobJobSpecJobData) GetForceStopOk() (*bool, bool) {
	if o == nil || IsNil(o.ForceStop) {
		return nil, false
	}
	return o.ForceStop, true
}

// HasForceStop returns a boolean if a field has been set.
func (o *JobsJobJobSpecJobData) HasForceStop() bool {
	if o != nil && !IsNil(o.ForceStop) {
		return true
	}

	return false
}

// SetForceStop gets a reference to the given bool and assigns it to the ForceStop field.
func (o *JobsJobJobSpecJobData) SetForceStop(v bool) {
	o.ForceStop = &v
}

// GetStopTimeout returns the StopTimeout field value if set, zero value otherwise.
func (o *JobsJobJobSpecJobData) GetStopTimeout() int32 {
	if o == nil || IsNil(o.StopTimeout) {
		var ret int32
		return ret
	}
	return *o.StopTimeout
}

// GetStopTimeoutOk returns a tuple with the StopTimeout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsJobJobSpecJobData) GetStopTimeoutOk() (*int32, bool) {
	if o == nil || IsNil(o.StopTimeout) {
		return nil, false
	}
	return o.StopTimeout, true
}

// HasStopTimeout returns a boolean if a field has been set.
func (o *JobsJobJobSpecJobData) HasStopTimeout() bool {
	if o != nil && !IsNil(o.StopTimeout) {
		return true
	}

	return false
}

// SetStopTimeout gets a reference to the given int32 and assigns it to the StopTimeout field.
func (o *JobsJobJobSpecJobData) SetStopTimeout(v int32) {
	o.StopTimeout = &v
}

// GetPitrStopTime returns the PitrStopTime field value if set, zero value otherwise.
func (o *JobsJobJobSpecJobData) GetPitrStopTime() string {
	if o == nil || IsNil(o.PitrStopTime) {
		var ret string
		return ret
	}
	return *o.PitrStopTime
}

// GetPitrStopTimeOk returns a tuple with the PitrStopTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsJobJobSpecJobData) GetPitrStopTimeOk() (*string, bool) {
	if o == nil || IsNil(o.PitrStopTime) {
		return nil, false
	}
	return o.PitrStopTime, true
}

// HasPitrStopTime returns a boolean if a field has been set.
func (o *JobsJobJobSpecJobData) HasPitrStopTime() bool {
	if o != nil && !IsNil(o.PitrStopTime) {
		return true
	}

	return false
}

// SetPitrStopTime gets a reference to the given string and assigns it to the PitrStopTime field.
func (o *JobsJobJobSpecJobData) SetPitrStopTime(v string) {
	o.PitrStopTime = &v
}

// GetPitrStopLog returns the PitrStopLog field value if set, zero value otherwise.
func (o *JobsJobJobSpecJobData) GetPitrStopLog() string {
	if o == nil || IsNil(o.PitrStopLog) {
		var ret string
		return ret
	}
	return *o.PitrStopLog
}

// GetPitrStopLogOk returns a tuple with the PitrStopLog field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsJobJobSpecJobData) GetPitrStopLogOk() (*string, bool) {
	if o == nil || IsNil(o.PitrStopLog) {
		return nil, false
	}
	return o.PitrStopLog, true
}

// HasPitrStopLog returns a boolean if a field has been set.
func (o *JobsJobJobSpecJobData) HasPitrStopLog() bool {
	if o != nil && !IsNil(o.PitrStopLog) {
		return true
	}

	return false
}

// SetPitrStopLog gets a reference to the given string and assigns it to the PitrStopLog field.
func (o *JobsJobJobSpecJobData) SetPitrStopLog(v string) {
	o.PitrStopLog = &v
}

// GetPitrStopPos returns the PitrStopPos field value if set, zero value otherwise.
func (o *JobsJobJobSpecJobData) GetPitrStopPos() int32 {
	if o == nil || IsNil(o.PitrStopPos) {
		var ret int32
		return ret
	}
	return *o.PitrStopPos
}

// GetPitrStopPosOk returns a tuple with the PitrStopPos field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsJobJobSpecJobData) GetPitrStopPosOk() (*int32, bool) {
	if o == nil || IsNil(o.PitrStopPos) {
		return nil, false
	}
	return o.PitrStopPos, true
}

// HasPitrStopPos returns a boolean if a field has been set.
func (o *JobsJobJobSpecJobData) HasPitrStopPos() bool {
	if o != nil && !IsNil(o.PitrStopPos) {
		return true
	}

	return false
}

// SetPitrStopPos gets a reference to the given int32 and assigns it to the PitrStopPos field.
func (o *JobsJobJobSpecJobData) SetPitrStopPos(v int32) {
	o.PitrStopPos = &v
}

// GetHostLocationUuid returns the HostLocationUuid field value if set, zero value otherwise.
func (o *JobsJobJobSpecJobData) GetHostLocationUuid() string {
	if o == nil || IsNil(o.HostLocationUuid) {
		var ret string
		return ret
	}
	return *o.HostLocationUuid
}

// GetHostLocationUuidOk returns a tuple with the HostLocationUuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsJobJobSpecJobData) GetHostLocationUuidOk() (*string, bool) {
	if o == nil || IsNil(o.HostLocationUuid) {
		return nil, false
	}
	return o.HostLocationUuid, true
}

// HasHostLocationUuid returns a boolean if a field has been set.
func (o *JobsJobJobSpecJobData) HasHostLocationUuid() bool {
	if o != nil && !IsNil(o.HostLocationUuid) {
		return true
	}

	return false
}

// SetHostLocationUuid gets a reference to the given string and assigns it to the HostLocationUuid field.
func (o *JobsJobJobSpecJobData) SetHostLocationUuid(v string) {
	o.HostLocationUuid = &v
}

// GetBootstrap returns the Bootstrap field value if set, zero value otherwise.
func (o *JobsJobJobSpecJobData) GetBootstrap() bool {
	if o == nil || IsNil(o.Bootstrap) {
		var ret bool
		return ret
	}
	return *o.Bootstrap
}

// GetBootstrapOk returns a tuple with the Bootstrap field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsJobJobSpecJobData) GetBootstrapOk() (*bool, bool) {
	if o == nil || IsNil(o.Bootstrap) {
		return nil, false
	}
	return o.Bootstrap, true
}

// HasBootstrap returns a boolean if a field has been set.
func (o *JobsJobJobSpecJobData) HasBootstrap() bool {
	if o != nil && !IsNil(o.Bootstrap) {
		return true
	}

	return false
}

// SetBootstrap gets a reference to the given bool and assigns it to the Bootstrap field.
func (o *JobsJobJobSpecJobData) SetBootstrap(v bool) {
	o.Bootstrap = &v
}

// GetSnapshotLocation returns the SnapshotLocation field value if set, zero value otherwise.
func (o *JobsJobJobSpecJobData) GetSnapshotLocation() string {
	if o == nil || IsNil(o.SnapshotLocation) {
		var ret string
		return ret
	}
	return *o.SnapshotLocation
}

// GetSnapshotLocationOk returns a tuple with the SnapshotLocation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsJobJobSpecJobData) GetSnapshotLocationOk() (*string, bool) {
	if o == nil || IsNil(o.SnapshotLocation) {
		return nil, false
	}
	return o.SnapshotLocation, true
}

// HasSnapshotLocation returns a boolean if a field has been set.
func (o *JobsJobJobSpecJobData) HasSnapshotLocation() bool {
	if o != nil && !IsNil(o.SnapshotLocation) {
		return true
	}

	return false
}

// SetSnapshotLocation gets a reference to the given string and assigns it to the SnapshotLocation field.
func (o *JobsJobJobSpecJobData) SetSnapshotLocation(v string) {
	o.SnapshotLocation = &v
}

// GetSnapshotRepository returns the SnapshotRepository field value if set, zero value otherwise.
func (o *JobsJobJobSpecJobData) GetSnapshotRepository() string {
	if o == nil || IsNil(o.SnapshotRepository) {
		var ret string
		return ret
	}
	return *o.SnapshotRepository
}

// GetSnapshotRepositoryOk returns a tuple with the SnapshotRepository field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsJobJobSpecJobData) GetSnapshotRepositoryOk() (*string, bool) {
	if o == nil || IsNil(o.SnapshotRepository) {
		return nil, false
	}
	return o.SnapshotRepository, true
}

// HasSnapshotRepository returns a boolean if a field has been set.
func (o *JobsJobJobSpecJobData) HasSnapshotRepository() bool {
	if o != nil && !IsNil(o.SnapshotRepository) {
		return true
	}

	return false
}

// SetSnapshotRepository gets a reference to the given string and assigns it to the SnapshotRepository field.
func (o *JobsJobJobSpecJobData) SetSnapshotRepository(v string) {
	o.SnapshotRepository = &v
}

// GetSnapshotHost returns the SnapshotHost field value if set, zero value otherwise.
func (o *JobsJobJobSpecJobData) GetSnapshotHost() string {
	if o == nil || IsNil(o.SnapshotHost) {
		var ret string
		return ret
	}
	return *o.SnapshotHost
}

// GetSnapshotHostOk returns a tuple with the SnapshotHost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsJobJobSpecJobData) GetSnapshotHostOk() (*string, bool) {
	if o == nil || IsNil(o.SnapshotHost) {
		return nil, false
	}
	return o.SnapshotHost, true
}

// HasSnapshotHost returns a boolean if a field has been set.
func (o *JobsJobJobSpecJobData) HasSnapshotHost() bool {
	if o != nil && !IsNil(o.SnapshotHost) {
		return true
	}

	return false
}

// SetSnapshotHost gets a reference to the given string and assigns it to the SnapshotHost field.
func (o *JobsJobJobSpecJobData) SetSnapshotHost(v string) {
	o.SnapshotHost = &v
}

// GetStorageHost returns the StorageHost field value if set, zero value otherwise.
func (o *JobsJobJobSpecJobData) GetStorageHost() string {
	if o == nil || IsNil(o.StorageHost) {
		var ret string
		return ret
	}
	return *o.StorageHost
}

// GetStorageHostOk returns a tuple with the StorageHost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsJobJobSpecJobData) GetStorageHostOk() (*string, bool) {
	if o == nil || IsNil(o.StorageHost) {
		return nil, false
	}
	return o.StorageHost, true
}

// HasStorageHost returns a boolean if a field has been set.
func (o *JobsJobJobSpecJobData) HasStorageHost() bool {
	if o != nil && !IsNil(o.StorageHost) {
		return true
	}

	return false
}

// SetStorageHost gets a reference to the given string and assigns it to the StorageHost field.
func (o *JobsJobJobSpecJobData) SetStorageHost(v string) {
	o.StorageHost = &v
}

// GetReplicaset returns the Replicaset field value if set, zero value otherwise.
func (o *JobsJobJobSpecJobData) GetReplicaset() string {
	if o == nil || IsNil(o.Replicaset) {
		var ret string
		return ret
	}
	return *o.Replicaset
}

// GetReplicasetOk returns a tuple with the Replicaset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsJobJobSpecJobData) GetReplicasetOk() (*string, bool) {
	if o == nil || IsNil(o.Replicaset) {
		return nil, false
	}
	return o.Replicaset, true
}

// HasReplicaset returns a boolean if a field has been set.
func (o *JobsJobJobSpecJobData) HasReplicaset() bool {
	if o != nil && !IsNil(o.Replicaset) {
		return true
	}

	return false
}

// SetReplicaset gets a reference to the given string and assigns it to the Replicaset field.
func (o *JobsJobJobSpecJobData) SetReplicaset(v string) {
	o.Replicaset = &v
}

// GetDeployAgents returns the DeployAgents field value if set, zero value otherwise.
func (o *JobsJobJobSpecJobData) GetDeployAgents() bool {
	if o == nil || IsNil(o.DeployAgents) {
		var ret bool
		return ret
	}
	return *o.DeployAgents
}

// GetDeployAgentsOk returns a tuple with the DeployAgents field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsJobJobSpecJobData) GetDeployAgentsOk() (*bool, bool) {
	if o == nil || IsNil(o.DeployAgents) {
		return nil, false
	}
	return o.DeployAgents, true
}

// HasDeployAgents returns a boolean if a field has been set.
func (o *JobsJobJobSpecJobData) HasDeployAgents() bool {
	if o != nil && !IsNil(o.DeployAgents) {
		return true
	}

	return false
}

// SetDeployAgents gets a reference to the given bool and assigns it to the DeployAgents field.
func (o *JobsJobJobSpecJobData) SetDeployAgents(v bool) {
	o.DeployAgents = &v
}

// GetUploadBackupDataToCloudStorage returns the UploadBackupDataToCloudStorage field value if set, zero value otherwise.
func (o *JobsJobJobSpecJobData) GetUploadBackupDataToCloudStorage() JobsJobJobSpecJobDataUploadBackupDataToCloudStorage {
	if o == nil || IsNil(o.UploadBackupDataToCloudStorage) {
		var ret JobsJobJobSpecJobDataUploadBackupDataToCloudStorage
		return ret
	}
	return *o.UploadBackupDataToCloudStorage
}

// GetUploadBackupDataToCloudStorageOk returns a tuple with the UploadBackupDataToCloudStorage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsJobJobSpecJobData) GetUploadBackupDataToCloudStorageOk() (*JobsJobJobSpecJobDataUploadBackupDataToCloudStorage, bool) {
	if o == nil || IsNil(o.UploadBackupDataToCloudStorage) {
		return nil, false
	}
	return o.UploadBackupDataToCloudStorage, true
}

// HasUploadBackupDataToCloudStorage returns a boolean if a field has been set.
func (o *JobsJobJobSpecJobData) HasUploadBackupDataToCloudStorage() bool {
	if o != nil && !IsNil(o.UploadBackupDataToCloudStorage) {
		return true
	}

	return false
}

// SetUploadBackupDataToCloudStorage gets a reference to the given JobsJobJobSpecJobDataUploadBackupDataToCloudStorage and assigns it to the UploadBackupDataToCloudStorage field.
func (o *JobsJobJobSpecJobData) SetUploadBackupDataToCloudStorage(v JobsJobJobSpecJobDataUploadBackupDataToCloudStorage) {
	o.UploadBackupDataToCloudStorage = &v
}

// GetVerifyBackup returns the VerifyBackup field value if set, zero value otherwise.
func (o *JobsJobJobSpecJobData) GetVerifyBackup() BackupScheduleJobJobDataVerifyBackup {
	if o == nil || IsNil(o.VerifyBackup) {
		var ret BackupScheduleJobJobDataVerifyBackup
		return ret
	}
	return *o.VerifyBackup
}

// GetVerifyBackupOk returns a tuple with the VerifyBackup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsJobJobSpecJobData) GetVerifyBackupOk() (*BackupScheduleJobJobDataVerifyBackup, bool) {
	if o == nil || IsNil(o.VerifyBackup) {
		return nil, false
	}
	return o.VerifyBackup, true
}

// HasVerifyBackup returns a boolean if a field has been set.
func (o *JobsJobJobSpecJobData) HasVerifyBackup() bool {
	if o != nil && !IsNil(o.VerifyBackup) {
		return true
	}

	return false
}

// SetVerifyBackup gets a reference to the given BackupScheduleJobJobDataVerifyBackup and assigns it to the VerifyBackup field.
func (o *JobsJobJobSpecJobData) SetVerifyBackup(v BackupScheduleJobJobDataVerifyBackup) {
	o.VerifyBackup = &v
}

// GetConfigServers returns the ConfigServers field value if set, zero value otherwise.
func (o *JobsJobJobSpecJobData) GetConfigServers() JobsJobJobSpecJobDataConfigServers {
	if o == nil || IsNil(o.ConfigServers) {
		var ret JobsJobJobSpecJobDataConfigServers
		return ret
	}
	return *o.ConfigServers
}

// GetConfigServersOk returns a tuple with the ConfigServers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsJobJobSpecJobData) GetConfigServersOk() (*JobsJobJobSpecJobDataConfigServers, bool) {
	if o == nil || IsNil(o.ConfigServers) {
		return nil, false
	}
	return o.ConfigServers, true
}

// HasConfigServers returns a boolean if a field has been set.
func (o *JobsJobJobSpecJobData) HasConfigServers() bool {
	if o != nil && !IsNil(o.ConfigServers) {
		return true
	}

	return false
}

// SetConfigServers gets a reference to the given JobsJobJobSpecJobDataConfigServers and assigns it to the ConfigServers field.
func (o *JobsJobJobSpecJobData) SetConfigServers(v JobsJobJobSpecJobDataConfigServers) {
	o.ConfigServers = &v
}

// GetMongosServers returns the MongosServers field value if set, zero value otherwise.
func (o *JobsJobJobSpecJobData) GetMongosServers() []JobsJobJobSpecJobDataConfigServersMembersInner {
	if o == nil || IsNil(o.MongosServers) {
		var ret []JobsJobJobSpecJobDataConfigServersMembersInner
		return ret
	}
	return o.MongosServers
}

// GetMongosServersOk returns a tuple with the MongosServers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsJobJobSpecJobData) GetMongosServersOk() ([]JobsJobJobSpecJobDataConfigServersMembersInner, bool) {
	if o == nil || IsNil(o.MongosServers) {
		return nil, false
	}
	return o.MongosServers, true
}

// HasMongosServers returns a boolean if a field has been set.
func (o *JobsJobJobSpecJobData) HasMongosServers() bool {
	if o != nil && !IsNil(o.MongosServers) {
		return true
	}

	return false
}

// SetMongosServers gets a reference to the given []JobsJobJobSpecJobDataConfigServersMembersInner and assigns it to the MongosServers field.
func (o *JobsJobJobSpecJobData) SetMongosServers(v []JobsJobJobSpecJobDataConfigServersMembersInner) {
	o.MongosServers = v
}

// GetNode returns the Node field value if set, zero value otherwise.
func (o *JobsJobJobSpecJobData) GetNode() JobsJobJobSpecJobDataNode {
	if o == nil || IsNil(o.Node) {
		var ret JobsJobJobSpecJobDataNode
		return ret
	}
	return *o.Node
}

// GetNodeOk returns a tuple with the Node field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsJobJobSpecJobData) GetNodeOk() (*JobsJobJobSpecJobDataNode, bool) {
	if o == nil || IsNil(o.Node) {
		return nil, false
	}
	return o.Node, true
}

// HasNode returns a boolean if a field has been set.
func (o *JobsJobJobSpecJobData) HasNode() bool {
	if o != nil && !IsNil(o.Node) {
		return true
	}

	return false
}

// SetNode gets a reference to the given JobsJobJobSpecJobDataNode and assigns it to the Node field.
func (o *JobsJobJobSpecJobData) SetNode(v JobsJobJobSpecJobDataNode) {
	o.Node = &v
}

// GetNodes returns the Nodes field value if set, zero value otherwise.
func (o *JobsJobJobSpecJobData) GetNodes() []JobsJobJobSpecJobDataNodesInner {
	if o == nil || IsNil(o.Nodes) {
		var ret []JobsJobJobSpecJobDataNodesInner
		return ret
	}
	return o.Nodes
}

// GetNodesOk returns a tuple with the Nodes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsJobJobSpecJobData) GetNodesOk() ([]JobsJobJobSpecJobDataNodesInner, bool) {
	if o == nil || IsNil(o.Nodes) {
		return nil, false
	}
	return o.Nodes, true
}

// HasNodes returns a boolean if a field has been set.
func (o *JobsJobJobSpecJobData) HasNodes() bool {
	if o != nil && !IsNil(o.Nodes) {
		return true
	}

	return false
}

// SetNodes gets a reference to the given []JobsJobJobSpecJobDataNodesInner and assigns it to the Nodes field.
func (o *JobsJobJobSpecJobData) SetNodes(v []JobsJobJobSpecJobDataNodesInner) {
	o.Nodes = v
}

// GetNodeAdresses returns the NodeAdresses field value if set, zero value otherwise.
func (o *JobsJobJobSpecJobData) GetNodeAdresses() []JobsJobJobSpecJobDataNodeAdressesInner {
	if o == nil || IsNil(o.NodeAdresses) {
		var ret []JobsJobJobSpecJobDataNodeAdressesInner
		return ret
	}
	return o.NodeAdresses
}

// GetNodeAdressesOk returns a tuple with the NodeAdresses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsJobJobSpecJobData) GetNodeAdressesOk() ([]JobsJobJobSpecJobDataNodeAdressesInner, bool) {
	if o == nil || IsNil(o.NodeAdresses) {
		return nil, false
	}
	return o.NodeAdresses, true
}

// HasNodeAdresses returns a boolean if a field has been set.
func (o *JobsJobJobSpecJobData) HasNodeAdresses() bool {
	if o != nil && !IsNil(o.NodeAdresses) {
		return true
	}

	return false
}

// SetNodeAdresses gets a reference to the given []JobsJobJobSpecJobDataNodeAdressesInner and assigns it to the NodeAdresses field.
func (o *JobsJobJobSpecJobData) SetNodeAdresses(v []JobsJobJobSpecJobDataNodeAdressesInner) {
	o.NodeAdresses = v
}

// GetTopology returns the Topology field value if set, zero value otherwise.
func (o *JobsJobJobSpecJobData) GetTopology() JobsJobJobSpecJobDataTopology {
	if o == nil || IsNil(o.Topology) {
		var ret JobsJobJobSpecJobDataTopology
		return ret
	}
	return *o.Topology
}

// GetTopologyOk returns a tuple with the Topology field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsJobJobSpecJobData) GetTopologyOk() (*JobsJobJobSpecJobDataTopology, bool) {
	if o == nil || IsNil(o.Topology) {
		return nil, false
	}
	return o.Topology, true
}

// HasTopology returns a boolean if a field has been set.
func (o *JobsJobJobSpecJobData) HasTopology() bool {
	if o != nil && !IsNil(o.Topology) {
		return true
	}

	return false
}

// SetTopology gets a reference to the given JobsJobJobSpecJobDataTopology and assigns it to the Topology field.
func (o *JobsJobJobSpecJobData) SetTopology(v JobsJobJobSpecJobDataTopology) {
	o.Topology = &v
}

// GetReplicaSets returns the ReplicaSets field value if set, zero value otherwise.
func (o *JobsJobJobSpecJobData) GetReplicaSets() []JobsJobJobSpecJobDataReplicaSetsInner {
	if o == nil || IsNil(o.ReplicaSets) {
		var ret []JobsJobJobSpecJobDataReplicaSetsInner
		return ret
	}
	return o.ReplicaSets
}

// GetReplicaSetsOk returns a tuple with the ReplicaSets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsJobJobSpecJobData) GetReplicaSetsOk() ([]JobsJobJobSpecJobDataReplicaSetsInner, bool) {
	if o == nil || IsNil(o.ReplicaSets) {
		return nil, false
	}
	return o.ReplicaSets, true
}

// HasReplicaSets returns a boolean if a field has been set.
func (o *JobsJobJobSpecJobData) HasReplicaSets() bool {
	if o != nil && !IsNil(o.ReplicaSets) {
		return true
	}

	return false
}

// SetReplicaSets gets a reference to the given []JobsJobJobSpecJobDataReplicaSetsInner and assigns it to the ReplicaSets field.
func (o *JobsJobJobSpecJobData) SetReplicaSets(v []JobsJobJobSpecJobDataReplicaSetsInner) {
	o.ReplicaSets = v
}

// GetWithTags returns the WithTags field value if set, zero value otherwise.
func (o *JobsJobJobSpecJobData) GetWithTags() []string {
	if o == nil || IsNil(o.WithTags) {
		var ret []string
		return ret
	}
	return o.WithTags
}

// GetWithTagsOk returns a tuple with the WithTags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsJobJobSpecJobData) GetWithTagsOk() ([]string, bool) {
	if o == nil || IsNil(o.WithTags) {
		return nil, false
	}
	return o.WithTags, true
}

// HasWithTags returns a boolean if a field has been set.
func (o *JobsJobJobSpecJobData) HasWithTags() bool {
	if o != nil && !IsNil(o.WithTags) {
		return true
	}

	return false
}

// SetWithTags gets a reference to the given []string and assigns it to the WithTags field.
func (o *JobsJobJobSpecJobData) SetWithTags(v []string) {
	o.WithTags = v
}

func (o JobsJobJobSpecJobData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o JobsJobJobSpecJobData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Action) {
		toSerialize["action"] = o.Action
	}
	if !IsNil(o.Addnode) {
		toSerialize["addnode"] = o.Addnode
	}
	if !IsNil(o.AdminUsername) {
		toSerialize["admin_username"] = o.AdminUsername
	}
	if !IsNil(o.AdminUser) {
		toSerialize["admin_user"] = o.AdminUser
	}
	if !IsNil(o.AdminPassword) {
		toSerialize["admin_password"] = o.AdminPassword
	}
	if !IsNil(o.AuditEvents) {
		toSerialize["audit_events"] = o.AuditEvents
	}
	if !IsNil(o.ArchiveMode) {
		toSerialize["archive_mode"] = o.ArchiveMode
	}
	if !IsNil(o.Backupid) {
		toSerialize["backupid"] = o.Backupid
	}
	if !IsNil(o.BackupId) {
		toSerialize["backup_id"] = o.BackupId
	}
	if !IsNil(o.BuildFromSource) {
		toSerialize["build_from_source"] = o.BuildFromSource
	}
	if !IsNil(o.ClusterName) {
		toSerialize["cluster_name"] = o.ClusterName
	}
	if !IsNil(o.Clusterid) {
		toSerialize["clusterid"] = o.Clusterid
	}
	if !IsNil(o.ClusterType) {
		toSerialize["cluster_type"] = o.ClusterType
	}
	if !IsNil(o.CompanyId) {
		toSerialize["company_id"] = o.CompanyId
	}
	if !IsNil(o.ConfigTemplate) {
		toSerialize["config_template"] = o.ConfigTemplate
	}
	if !IsNil(o.BackupFailover) {
		toSerialize["backup_failover"] = o.BackupFailover
	}
	if !IsNil(o.BackupFailoverHost) {
		toSerialize["backup_failover_host"] = o.BackupFailoverHost
	}
	if !IsNil(o.BackupMethod) {
		toSerialize["backup_method"] = o.BackupMethod
	}
	if !IsNil(o.BackupMysqldumpType) {
		toSerialize["backup_mysqldump_type"] = o.BackupMysqldumpType
	}
	if !IsNil(o.BackupIndividualSchemas) {
		toSerialize["backup_individual_schemas"] = o.BackupIndividualSchemas
	}
	if !IsNil(o.BackupRetention) {
		toSerialize["backup_retention"] = o.BackupRetention
	}
	if !IsNil(o.ExtendedInsert) {
		toSerialize["extended_insert"] = o.ExtendedInsert
	}
	if !IsNil(o.BackupDir) {
		toSerialize["backup_dir"] = o.BackupDir
	}
	if !IsNil(o.Backupsubdir) {
		toSerialize["backupsubdir"] = o.Backupsubdir
	}
	if !IsNil(o.RemoveBackups) {
		toSerialize["remove_backups"] = o.RemoveBackups
	}
	if !IsNil(o.BackupSystemDb) {
		toSerialize["backup_system_db"] = o.BackupSystemDb
	}
	if !IsNil(o.CcStorage) {
		toSerialize["cc_storage"] = o.CcStorage
	}
	if !IsNil(o.Compression) {
		toSerialize["compression"] = o.Compression
	}
	if !IsNil(o.CompressionLevel) {
		toSerialize["compression_level"] = o.CompressionLevel
	}
	if !IsNil(o.DbDatabase) {
		toSerialize["db_database"] = o.DbDatabase
	}
	if !IsNil(o.DbPassword) {
		toSerialize["db_password"] = o.DbPassword
	}
	if !IsNil(o.DbPrivs) {
		toSerialize["db_privs"] = o.DbPrivs
	}
	if !IsNil(o.DbUsername) {
		toSerialize["db_username"] = o.DbUsername
	}
	if !IsNil(o.DataCenter) {
		toSerialize["data_center"] = o.DataCenter
	}
	if !IsNil(o.ExecUpgradeScript) {
		toSerialize["exec_upgrade_script"] = o.ExecUpgradeScript
	}
	if !IsNil(o.Extended) {
		toSerialize["extended"] = o.Extended
	}
	if !IsNil(o.ListeningPort) {
		toSerialize["listening_port"] = o.ListeningPort
	}
	if !IsNil(o.MaskPasswords) {
		toSerialize["mask_passwords"] = o.MaskPasswords
	}
	if !IsNil(o.MonitorPassword) {
		toSerialize["monitor_password"] = o.MonitorPassword
	}
	if !IsNil(o.MonitorUser) {
		toSerialize["monitor_user"] = o.MonitorUser
	}
	if !IsNil(o.UseClustering) {
		toSerialize["use_clustering"] = o.UseClustering
	}
	if !IsNil(o.UseRwSplit) {
		toSerialize["use_rw_split"] = o.UseRwSplit
	}
	if !IsNil(o.Hostname) {
		toSerialize["hostname"] = o.Hostname
	}
	if !IsNil(o.MasterAddress) {
		toSerialize["master_address"] = o.MasterAddress
	}
	if !IsNil(o.MasterDelay) {
		toSerialize["master_delay"] = o.MasterDelay
	}
	if !IsNil(o.IncludeDatabases) {
		toSerialize["include_databases"] = o.IncludeDatabases
	}
	if !IsNil(o.InstallTimescaledb) {
		toSerialize["install_timescaledb"] = o.InstallTimescaledb
	}
	if !IsNil(o.UpdateLb) {
		toSerialize["update_lb"] = o.UpdateLb
	}
	if !IsNil(o.UsePackageForDataDir) {
		toSerialize["usePackageForDataDir"] = o.UsePackageForDataDir
	}
	if !IsNil(o.EncryptBackup) {
		toSerialize["encrypt_backup"] = o.EncryptBackup
	}
	if !IsNil(o.ThrottleRateNetbw) {
		toSerialize["throttle_rate_netbw"] = o.ThrottleRateNetbw
	}
	if !IsNil(o.UsePigz) {
		toSerialize["use_pigz"] = o.UsePigz
	}
	if !IsNil(o.UseQpress) {
		toSerialize["use_qpress"] = o.UseQpress
	}
	if !IsNil(o.WsrepDesync) {
		toSerialize["wsrep_desync"] = o.WsrepDesync
	}
	if !IsNil(o.GaleraSegment) {
		toSerialize["galera_segment"] = o.GaleraSegment
	}
	if !IsNil(o.XtrabackupBackupLocks) {
		toSerialize["xtrabackup_backup_locks"] = o.XtrabackupBackupLocks
	}
	if !IsNil(o.XtrabackupLockDdlPerTable) {
		toSerialize["xtrabackup_lock_ddl_per_table"] = o.XtrabackupLockDdlPerTable
	}
	if !IsNil(o.XtrabackupParallellism) {
		toSerialize["xtrabackup_parallellism"] = o.XtrabackupParallellism
	}
	if !IsNil(o.VerifyBackupDelay) {
		toSerialize["verify_backup_delay"] = o.VerifyBackupDelay
	}
	if !IsNil(o.Datadir) {
		toSerialize["datadir"] = o.Datadir
	}
	if !IsNil(o.DbUser) {
		toSerialize["db_user"] = o.DbUser
	}
	if !IsNil(o.DisableFirewall) {
		toSerialize["disable_firewall"] = o.DisableFirewall
	}
	if !IsNil(o.DisableSelinux) {
		toSerialize["disable_selinux"] = o.DisableSelinux
	}
	if !IsNil(o.EnableUninstall) {
		toSerialize["enable_uninstall"] = o.EnableUninstall
	}
	if !IsNil(o.UnregisterOnly) {
		toSerialize["unregister_only"] = o.UnregisterOnly
	}
	if !IsNil(o.GenerateToken) {
		toSerialize["generate_token"] = o.GenerateToken
	}
	if !IsNil(o.InstallSoftware) {
		toSerialize["install_software"] = o.InstallSoftware
	}
	if !IsNil(o.UseInternalRepos) {
		toSerialize["use_internal_repos"] = o.UseInternalRepos
	}
	if !IsNil(o.LocalRepository) {
		toSerialize["local_repository"] = o.LocalRepository
	}
	if !IsNil(o.EnableMysqlUninstall) {
		toSerialize["enable_mysql_uninstall"] = o.EnableMysqlUninstall
	}
	if !IsNil(o.MysqlSemiSync) {
		toSerialize["mysql_semi_sync"] = o.MysqlSemiSync
	}
	if !IsNil(o.EnableSsl) {
		toSerialize["enable_ssl"] = o.EnableSsl
	}
	if !IsNil(o.MongosConfTemplate) {
		toSerialize["mongos_conf_template"] = o.MongosConfTemplate
	}
	if !IsNil(o.MongodbAuthdb) {
		toSerialize["mongodb_authdb"] = o.MongodbAuthdb
	}
	if !IsNil(o.NodeType) {
		toSerialize["node_type"] = o.NodeType
	}
	if !IsNil(o.OverwriteMysqlchk) {
		toSerialize["overwrite_mysqlchk"] = o.OverwriteMysqlchk
	}
	if !IsNil(o.Port) {
		toSerialize["port"] = o.Port
	}
	if !IsNil(o.SentinelPort) {
		toSerialize["sentinel_port"] = o.SentinelPort
	}
	if !IsNil(o.SshKeyfile) {
		toSerialize["ssh_keyfile"] = o.SshKeyfile
	}
	if !IsNil(o.SshPort) {
		toSerialize["ssh_port"] = o.SshPort
	}
	if !IsNil(o.SshUser) {
		toSerialize["ssh_user"] = o.SshUser
	}
	if !IsNil(o.SudoPassword) {
		toSerialize["sudo_password"] = o.SudoPassword
	}
	if !IsNil(o.UserId) {
		toSerialize["user_id"] = o.UserId
	}
	if !IsNil(o.Vendor) {
		toSerialize["vendor"] = o.Vendor
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	if !IsNil(o.SoftwarePackage) {
		toSerialize["software_package"] = o.SoftwarePackage
	}
	if !IsNil(o.ServerAddress) {
		toSerialize["server_address"] = o.ServerAddress
	}
	if !IsNil(o.TerminateDbServer) {
		toSerialize["terminate_db_server"] = o.TerminateDbServer
	}
	if !IsNil(o.XtrabackupUseMemory) {
		toSerialize["xtrabackup_use_memory"] = o.XtrabackupUseMemory
	}
	if !IsNil(o.Initial) {
		toSerialize["initial"] = o.Initial
	}
	if !IsNil(o.Reboot) {
		toSerialize["reboot"] = o.Reboot
	}
	if !IsNil(o.SlaveAddress) {
		toSerialize["slave_address"] = o.SlaveAddress
	}
	if !IsNil(o.Force) {
		toSerialize["force"] = o.Force
	}
	if !IsNil(o.ForceStop) {
		toSerialize["force_stop"] = o.ForceStop
	}
	if !IsNil(o.StopTimeout) {
		toSerialize["stop_timeout"] = o.StopTimeout
	}
	if !IsNil(o.PitrStopTime) {
		toSerialize["pitr_stop_time"] = o.PitrStopTime
	}
	if !IsNil(o.PitrStopLog) {
		toSerialize["pitr_stop_log"] = o.PitrStopLog
	}
	if !IsNil(o.PitrStopPos) {
		toSerialize["pitr_stop_pos"] = o.PitrStopPos
	}
	if !IsNil(o.HostLocationUuid) {
		toSerialize["host_location_uuid"] = o.HostLocationUuid
	}
	if !IsNil(o.Bootstrap) {
		toSerialize["bootstrap"] = o.Bootstrap
	}
	if !IsNil(o.SnapshotLocation) {
		toSerialize["snapshot_location"] = o.SnapshotLocation
	}
	if !IsNil(o.SnapshotRepository) {
		toSerialize["snapshot_repository"] = o.SnapshotRepository
	}
	if !IsNil(o.SnapshotHost) {
		toSerialize["snapshot_host"] = o.SnapshotHost
	}
	if !IsNil(o.StorageHost) {
		toSerialize["storage_host"] = o.StorageHost
	}
	if !IsNil(o.Replicaset) {
		toSerialize["replicaset"] = o.Replicaset
	}
	if !IsNil(o.DeployAgents) {
		toSerialize["deploy_agents"] = o.DeployAgents
	}
	if !IsNil(o.UploadBackupDataToCloudStorage) {
		toSerialize["upload_backup_data_to_cloud_storage"] = o.UploadBackupDataToCloudStorage
	}
	if !IsNil(o.VerifyBackup) {
		toSerialize["verify_backup"] = o.VerifyBackup
	}
	if !IsNil(o.ConfigServers) {
		toSerialize["config_servers"] = o.ConfigServers
	}
	if !IsNil(o.MongosServers) {
		toSerialize["mongos_servers"] = o.MongosServers
	}
	if !IsNil(o.Node) {
		toSerialize["node"] = o.Node
	}
	if !IsNil(o.Nodes) {
		toSerialize["nodes"] = o.Nodes
	}
	if !IsNil(o.NodeAdresses) {
		toSerialize["node_adresses"] = o.NodeAdresses
	}
	if !IsNil(o.Topology) {
		toSerialize["topology"] = o.Topology
	}
	if !IsNil(o.ReplicaSets) {
		toSerialize["replica_sets"] = o.ReplicaSets
	}
	if !IsNil(o.WithTags) {
		toSerialize["with_tags"] = o.WithTags
	}
	return toSerialize, nil
}

type NullableJobsJobJobSpecJobData struct {
	value *JobsJobJobSpecJobData
	isSet bool
}

func (v NullableJobsJobJobSpecJobData) Get() *JobsJobJobSpecJobData {
	return v.value
}

func (v *NullableJobsJobJobSpecJobData) Set(val *JobsJobJobSpecJobData) {
	v.value = val
	v.isSet = true
}

func (v NullableJobsJobJobSpecJobData) IsSet() bool {
	return v.isSet
}

func (v *NullableJobsJobJobSpecJobData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableJobsJobJobSpecJobData(val *JobsJobJobSpecJobData) *NullableJobsJobJobSpecJobData {
	return &NullableJobsJobJobSpecJobData{value: val, isSet: true}
}

func (v NullableJobsJobJobSpecJobData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableJobsJobJobSpecJobData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


