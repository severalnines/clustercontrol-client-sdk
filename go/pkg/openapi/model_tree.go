/*
Severalnines ClusterControl

This is a ...

API version: 1.0.0
Contact: sales@severalnines.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// Tree struct for Tree
type Tree struct {
	Operation string `json:"operation"`
	Acl *string `json:"acl,omitempty"`
	Path *string `json:"path,omitempty"`
}

// NewTree instantiates a new Tree object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTree(operation string) *Tree {
	this := Tree{}
	this.Operation = operation
	return &this
}

// NewTreeWithDefaults instantiates a new Tree object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTreeWithDefaults() *Tree {
	this := Tree{}
	return &this
}

// GetOperation returns the Operation field value
func (o *Tree) GetOperation() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Operation
}

// GetOperationOk returns a tuple with the Operation field value
// and a boolean to check if the value has been set.
func (o *Tree) GetOperationOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Operation, true
}

// SetOperation sets field value
func (o *Tree) SetOperation(v string) {
	o.Operation = v
}

// GetAcl returns the Acl field value if set, zero value otherwise.
func (o *Tree) GetAcl() string {
	if o == nil || o.Acl == nil {
		var ret string
		return ret
	}
	return *o.Acl
}

// GetAclOk returns a tuple with the Acl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Tree) GetAclOk() (*string, bool) {
	if o == nil || o.Acl == nil {
		return nil, false
	}
	return o.Acl, true
}

// HasAcl returns a boolean if a field has been set.
func (o *Tree) HasAcl() bool {
	if o != nil && o.Acl != nil {
		return true
	}

	return false
}

// SetAcl gets a reference to the given string and assigns it to the Acl field.
func (o *Tree) SetAcl(v string) {
	o.Acl = &v
}

// GetPath returns the Path field value if set, zero value otherwise.
func (o *Tree) GetPath() string {
	if o == nil || o.Path == nil {
		var ret string
		return ret
	}
	return *o.Path
}

// GetPathOk returns a tuple with the Path field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Tree) GetPathOk() (*string, bool) {
	if o == nil || o.Path == nil {
		return nil, false
	}
	return o.Path, true
}

// HasPath returns a boolean if a field has been set.
func (o *Tree) HasPath() bool {
	if o != nil && o.Path != nil {
		return true
	}

	return false
}

// SetPath gets a reference to the given string and assigns it to the Path field.
func (o *Tree) SetPath(v string) {
	o.Path = &v
}

func (o Tree) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["operation"] = o.Operation
	}
	if o.Acl != nil {
		toSerialize["acl"] = o.Acl
	}
	if o.Path != nil {
		toSerialize["path"] = o.Path
	}
	return json.Marshal(toSerialize)
}

type NullableTree struct {
	value *Tree
	isSet bool
}

func (v NullableTree) Get() *Tree {
	return v.value
}

func (v *NullableTree) Set(val *Tree) {
	v.value = val
	v.isSet = true
}

func (v NullableTree) IsSet() bool {
	return v.isSet
}

func (v *NullableTree) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTree(val *Tree) *NullableTree {
	return &NullableTree{value: val, isSet: true}
}

func (v NullableTree) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTree) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


