/*
Severalnines ClusterControl

This is a ...

API version: 1.0.0
Contact: sales@severalnines.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ConfigLdapConfiguration struct for ConfigLdapConfiguration
type ConfigLdapConfiguration struct {
	Enabled *bool `json:"enabled,omitempty"`
	LdapAdminPassword *string `json:"ldapAdminPassword,omitempty"`
	LdapAdminUser *string `json:"ldapAdminUser,omitempty"`
	LdapGroupSearchRoot *string `json:"ldapGroupSearchRoot,omitempty"`
	LdapServerUri *string `json:"ldapServerUri,omitempty"`
	LdapUserSearchRoot *string `json:"ldapUserSearchRoot,omitempty"`
	GroupMappings []ConfigLdapConfigurationGroupMappingsInner `json:"groupMappings,omitempty"`
	LdapSettings *ConfigLdapConfigurationLdapSettings `json:"ldapSettings,omitempty"`
	Security *ConfigLdapConfigurationSecurity `json:"security,omitempty"`
}

// NewConfigLdapConfiguration instantiates a new ConfigLdapConfiguration object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConfigLdapConfiguration() *ConfigLdapConfiguration {
	this := ConfigLdapConfiguration{}
	return &this
}

// NewConfigLdapConfigurationWithDefaults instantiates a new ConfigLdapConfiguration object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConfigLdapConfigurationWithDefaults() *ConfigLdapConfiguration {
	this := ConfigLdapConfiguration{}
	return &this
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *ConfigLdapConfiguration) GetEnabled() bool {
	if o == nil || o.Enabled == nil {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigLdapConfiguration) GetEnabledOk() (*bool, bool) {
	if o == nil || o.Enabled == nil {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *ConfigLdapConfiguration) HasEnabled() bool {
	if o != nil && o.Enabled != nil {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *ConfigLdapConfiguration) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetLdapAdminPassword returns the LdapAdminPassword field value if set, zero value otherwise.
func (o *ConfigLdapConfiguration) GetLdapAdminPassword() string {
	if o == nil || o.LdapAdminPassword == nil {
		var ret string
		return ret
	}
	return *o.LdapAdminPassword
}

// GetLdapAdminPasswordOk returns a tuple with the LdapAdminPassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigLdapConfiguration) GetLdapAdminPasswordOk() (*string, bool) {
	if o == nil || o.LdapAdminPassword == nil {
		return nil, false
	}
	return o.LdapAdminPassword, true
}

// HasLdapAdminPassword returns a boolean if a field has been set.
func (o *ConfigLdapConfiguration) HasLdapAdminPassword() bool {
	if o != nil && o.LdapAdminPassword != nil {
		return true
	}

	return false
}

// SetLdapAdminPassword gets a reference to the given string and assigns it to the LdapAdminPassword field.
func (o *ConfigLdapConfiguration) SetLdapAdminPassword(v string) {
	o.LdapAdminPassword = &v
}

// GetLdapAdminUser returns the LdapAdminUser field value if set, zero value otherwise.
func (o *ConfigLdapConfiguration) GetLdapAdminUser() string {
	if o == nil || o.LdapAdminUser == nil {
		var ret string
		return ret
	}
	return *o.LdapAdminUser
}

// GetLdapAdminUserOk returns a tuple with the LdapAdminUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigLdapConfiguration) GetLdapAdminUserOk() (*string, bool) {
	if o == nil || o.LdapAdminUser == nil {
		return nil, false
	}
	return o.LdapAdminUser, true
}

// HasLdapAdminUser returns a boolean if a field has been set.
func (o *ConfigLdapConfiguration) HasLdapAdminUser() bool {
	if o != nil && o.LdapAdminUser != nil {
		return true
	}

	return false
}

// SetLdapAdminUser gets a reference to the given string and assigns it to the LdapAdminUser field.
func (o *ConfigLdapConfiguration) SetLdapAdminUser(v string) {
	o.LdapAdminUser = &v
}

// GetLdapGroupSearchRoot returns the LdapGroupSearchRoot field value if set, zero value otherwise.
func (o *ConfigLdapConfiguration) GetLdapGroupSearchRoot() string {
	if o == nil || o.LdapGroupSearchRoot == nil {
		var ret string
		return ret
	}
	return *o.LdapGroupSearchRoot
}

// GetLdapGroupSearchRootOk returns a tuple with the LdapGroupSearchRoot field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigLdapConfiguration) GetLdapGroupSearchRootOk() (*string, bool) {
	if o == nil || o.LdapGroupSearchRoot == nil {
		return nil, false
	}
	return o.LdapGroupSearchRoot, true
}

// HasLdapGroupSearchRoot returns a boolean if a field has been set.
func (o *ConfigLdapConfiguration) HasLdapGroupSearchRoot() bool {
	if o != nil && o.LdapGroupSearchRoot != nil {
		return true
	}

	return false
}

// SetLdapGroupSearchRoot gets a reference to the given string and assigns it to the LdapGroupSearchRoot field.
func (o *ConfigLdapConfiguration) SetLdapGroupSearchRoot(v string) {
	o.LdapGroupSearchRoot = &v
}

// GetLdapServerUri returns the LdapServerUri field value if set, zero value otherwise.
func (o *ConfigLdapConfiguration) GetLdapServerUri() string {
	if o == nil || o.LdapServerUri == nil {
		var ret string
		return ret
	}
	return *o.LdapServerUri
}

// GetLdapServerUriOk returns a tuple with the LdapServerUri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigLdapConfiguration) GetLdapServerUriOk() (*string, bool) {
	if o == nil || o.LdapServerUri == nil {
		return nil, false
	}
	return o.LdapServerUri, true
}

// HasLdapServerUri returns a boolean if a field has been set.
func (o *ConfigLdapConfiguration) HasLdapServerUri() bool {
	if o != nil && o.LdapServerUri != nil {
		return true
	}

	return false
}

// SetLdapServerUri gets a reference to the given string and assigns it to the LdapServerUri field.
func (o *ConfigLdapConfiguration) SetLdapServerUri(v string) {
	o.LdapServerUri = &v
}

// GetLdapUserSearchRoot returns the LdapUserSearchRoot field value if set, zero value otherwise.
func (o *ConfigLdapConfiguration) GetLdapUserSearchRoot() string {
	if o == nil || o.LdapUserSearchRoot == nil {
		var ret string
		return ret
	}
	return *o.LdapUserSearchRoot
}

// GetLdapUserSearchRootOk returns a tuple with the LdapUserSearchRoot field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigLdapConfiguration) GetLdapUserSearchRootOk() (*string, bool) {
	if o == nil || o.LdapUserSearchRoot == nil {
		return nil, false
	}
	return o.LdapUserSearchRoot, true
}

// HasLdapUserSearchRoot returns a boolean if a field has been set.
func (o *ConfigLdapConfiguration) HasLdapUserSearchRoot() bool {
	if o != nil && o.LdapUserSearchRoot != nil {
		return true
	}

	return false
}

// SetLdapUserSearchRoot gets a reference to the given string and assigns it to the LdapUserSearchRoot field.
func (o *ConfigLdapConfiguration) SetLdapUserSearchRoot(v string) {
	o.LdapUserSearchRoot = &v
}

// GetGroupMappings returns the GroupMappings field value if set, zero value otherwise.
func (o *ConfigLdapConfiguration) GetGroupMappings() []ConfigLdapConfigurationGroupMappingsInner {
	if o == nil || o.GroupMappings == nil {
		var ret []ConfigLdapConfigurationGroupMappingsInner
		return ret
	}
	return o.GroupMappings
}

// GetGroupMappingsOk returns a tuple with the GroupMappings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigLdapConfiguration) GetGroupMappingsOk() ([]ConfigLdapConfigurationGroupMappingsInner, bool) {
	if o == nil || o.GroupMappings == nil {
		return nil, false
	}
	return o.GroupMappings, true
}

// HasGroupMappings returns a boolean if a field has been set.
func (o *ConfigLdapConfiguration) HasGroupMappings() bool {
	if o != nil && o.GroupMappings != nil {
		return true
	}

	return false
}

// SetGroupMappings gets a reference to the given []ConfigLdapConfigurationGroupMappingsInner and assigns it to the GroupMappings field.
func (o *ConfigLdapConfiguration) SetGroupMappings(v []ConfigLdapConfigurationGroupMappingsInner) {
	o.GroupMappings = v
}

// GetLdapSettings returns the LdapSettings field value if set, zero value otherwise.
func (o *ConfigLdapConfiguration) GetLdapSettings() ConfigLdapConfigurationLdapSettings {
	if o == nil || o.LdapSettings == nil {
		var ret ConfigLdapConfigurationLdapSettings
		return ret
	}
	return *o.LdapSettings
}

// GetLdapSettingsOk returns a tuple with the LdapSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigLdapConfiguration) GetLdapSettingsOk() (*ConfigLdapConfigurationLdapSettings, bool) {
	if o == nil || o.LdapSettings == nil {
		return nil, false
	}
	return o.LdapSettings, true
}

// HasLdapSettings returns a boolean if a field has been set.
func (o *ConfigLdapConfiguration) HasLdapSettings() bool {
	if o != nil && o.LdapSettings != nil {
		return true
	}

	return false
}

// SetLdapSettings gets a reference to the given ConfigLdapConfigurationLdapSettings and assigns it to the LdapSettings field.
func (o *ConfigLdapConfiguration) SetLdapSettings(v ConfigLdapConfigurationLdapSettings) {
	o.LdapSettings = &v
}

// GetSecurity returns the Security field value if set, zero value otherwise.
func (o *ConfigLdapConfiguration) GetSecurity() ConfigLdapConfigurationSecurity {
	if o == nil || o.Security == nil {
		var ret ConfigLdapConfigurationSecurity
		return ret
	}
	return *o.Security
}

// GetSecurityOk returns a tuple with the Security field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigLdapConfiguration) GetSecurityOk() (*ConfigLdapConfigurationSecurity, bool) {
	if o == nil || o.Security == nil {
		return nil, false
	}
	return o.Security, true
}

// HasSecurity returns a boolean if a field has been set.
func (o *ConfigLdapConfiguration) HasSecurity() bool {
	if o != nil && o.Security != nil {
		return true
	}

	return false
}

// SetSecurity gets a reference to the given ConfigLdapConfigurationSecurity and assigns it to the Security field.
func (o *ConfigLdapConfiguration) SetSecurity(v ConfigLdapConfigurationSecurity) {
	o.Security = &v
}

func (o ConfigLdapConfiguration) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Enabled != nil {
		toSerialize["enabled"] = o.Enabled
	}
	if o.LdapAdminPassword != nil {
		toSerialize["ldapAdminPassword"] = o.LdapAdminPassword
	}
	if o.LdapAdminUser != nil {
		toSerialize["ldapAdminUser"] = o.LdapAdminUser
	}
	if o.LdapGroupSearchRoot != nil {
		toSerialize["ldapGroupSearchRoot"] = o.LdapGroupSearchRoot
	}
	if o.LdapServerUri != nil {
		toSerialize["ldapServerUri"] = o.LdapServerUri
	}
	if o.LdapUserSearchRoot != nil {
		toSerialize["ldapUserSearchRoot"] = o.LdapUserSearchRoot
	}
	if o.GroupMappings != nil {
		toSerialize["groupMappings"] = o.GroupMappings
	}
	if o.LdapSettings != nil {
		toSerialize["ldapSettings"] = o.LdapSettings
	}
	if o.Security != nil {
		toSerialize["security"] = o.Security
	}
	return json.Marshal(toSerialize)
}

type NullableConfigLdapConfiguration struct {
	value *ConfigLdapConfiguration
	isSet bool
}

func (v NullableConfigLdapConfiguration) Get() *ConfigLdapConfiguration {
	return v.value
}

func (v *NullableConfigLdapConfiguration) Set(val *ConfigLdapConfiguration) {
	v.value = val
	v.isSet = true
}

func (v NullableConfigLdapConfiguration) IsSet() bool {
	return v.isSet
}

func (v *NullableConfigLdapConfiguration) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConfigLdapConfiguration(val *ConfigLdapConfiguration) *NullableConfigLdapConfiguration {
	return &NullableConfigLdapConfiguration{value: val, isSet: true}
}

func (v NullableConfigLdapConfiguration) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConfigLdapConfiguration) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


