/*
Severalnines ClusterControl

This is a ...

API version: 1.0.0
Contact: sales@severalnines.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// JobsJob struct for JobsJob
type JobsJob struct {
	ClassName *string `json:"class_name,omitempty"`
	JobSpec *JobsJobJobSpec `json:"job_spec,omitempty"`
	// e.g. \"2 * * * *\"
	Recurrence *string `json:"recurrence,omitempty"`
	Tags []string `json:"tags,omitempty"`
	Title *string `json:"title,omitempty"`
	Status *string `json:"status,omitempty"`
}

// NewJobsJob instantiates a new JobsJob object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewJobsJob() *JobsJob {
	this := JobsJob{}
	return &this
}

// NewJobsJobWithDefaults instantiates a new JobsJob object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewJobsJobWithDefaults() *JobsJob {
	this := JobsJob{}
	return &this
}

// GetClassName returns the ClassName field value if set, zero value otherwise.
func (o *JobsJob) GetClassName() string {
	if o == nil || o.ClassName == nil {
		var ret string
		return ret
	}
	return *o.ClassName
}

// GetClassNameOk returns a tuple with the ClassName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsJob) GetClassNameOk() (*string, bool) {
	if o == nil || o.ClassName == nil {
		return nil, false
	}
	return o.ClassName, true
}

// HasClassName returns a boolean if a field has been set.
func (o *JobsJob) HasClassName() bool {
	if o != nil && o.ClassName != nil {
		return true
	}

	return false
}

// SetClassName gets a reference to the given string and assigns it to the ClassName field.
func (o *JobsJob) SetClassName(v string) {
	o.ClassName = &v
}

// GetJobSpec returns the JobSpec field value if set, zero value otherwise.
func (o *JobsJob) GetJobSpec() JobsJobJobSpec {
	if o == nil || o.JobSpec == nil {
		var ret JobsJobJobSpec
		return ret
	}
	return *o.JobSpec
}

// GetJobSpecOk returns a tuple with the JobSpec field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsJob) GetJobSpecOk() (*JobsJobJobSpec, bool) {
	if o == nil || o.JobSpec == nil {
		return nil, false
	}
	return o.JobSpec, true
}

// HasJobSpec returns a boolean if a field has been set.
func (o *JobsJob) HasJobSpec() bool {
	if o != nil && o.JobSpec != nil {
		return true
	}

	return false
}

// SetJobSpec gets a reference to the given JobsJobJobSpec and assigns it to the JobSpec field.
func (o *JobsJob) SetJobSpec(v JobsJobJobSpec) {
	o.JobSpec = &v
}

// GetRecurrence returns the Recurrence field value if set, zero value otherwise.
func (o *JobsJob) GetRecurrence() string {
	if o == nil || o.Recurrence == nil {
		var ret string
		return ret
	}
	return *o.Recurrence
}

// GetRecurrenceOk returns a tuple with the Recurrence field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsJob) GetRecurrenceOk() (*string, bool) {
	if o == nil || o.Recurrence == nil {
		return nil, false
	}
	return o.Recurrence, true
}

// HasRecurrence returns a boolean if a field has been set.
func (o *JobsJob) HasRecurrence() bool {
	if o != nil && o.Recurrence != nil {
		return true
	}

	return false
}

// SetRecurrence gets a reference to the given string and assigns it to the Recurrence field.
func (o *JobsJob) SetRecurrence(v string) {
	o.Recurrence = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *JobsJob) GetTags() []string {
	if o == nil || o.Tags == nil {
		var ret []string
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsJob) GetTagsOk() ([]string, bool) {
	if o == nil || o.Tags == nil {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *JobsJob) HasTags() bool {
	if o != nil && o.Tags != nil {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *JobsJob) SetTags(v []string) {
	o.Tags = v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *JobsJob) GetTitle() string {
	if o == nil || o.Title == nil {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsJob) GetTitleOk() (*string, bool) {
	if o == nil || o.Title == nil {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *JobsJob) HasTitle() bool {
	if o != nil && o.Title != nil {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *JobsJob) SetTitle(v string) {
	o.Title = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *JobsJob) GetStatus() string {
	if o == nil || o.Status == nil {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsJob) GetStatusOk() (*string, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *JobsJob) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *JobsJob) SetStatus(v string) {
	o.Status = &v
}

func (o JobsJob) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ClassName != nil {
		toSerialize["class_name"] = o.ClassName
	}
	if o.JobSpec != nil {
		toSerialize["job_spec"] = o.JobSpec
	}
	if o.Recurrence != nil {
		toSerialize["recurrence"] = o.Recurrence
	}
	if o.Tags != nil {
		toSerialize["tags"] = o.Tags
	}
	if o.Title != nil {
		toSerialize["title"] = o.Title
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	return json.Marshal(toSerialize)
}

type NullableJobsJob struct {
	value *JobsJob
	isSet bool
}

func (v NullableJobsJob) Get() *JobsJob {
	return v.value
}

func (v *NullableJobsJob) Set(val *JobsJob) {
	v.value = val
	v.isSet = true
}

func (v NullableJobsJob) IsSet() bool {
	return v.isSet
}

func (v *NullableJobsJob) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableJobsJob(val *JobsJob) *NullableJobsJob {
	return &NullableJobsJob{value: val, isSet: true}
}

func (v NullableJobsJob) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableJobsJob) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


